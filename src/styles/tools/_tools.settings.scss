// --------------------------------------------------------------------------
//   VARIABLE SETTINGS
// --------------------------------------------------------------------------

// Namespace for themeing & testing
// Apply: .#{$namespace}textarea
// Don't use this method to namespace variables…
// --------------------------------------------------------------------------

$namespace: "";

// Colours
// --------------------------------------------------------------------------

$base-black: #000;
$base-white: #fff;

$season2016: #65bd24;

$palette: (
  black : $base-black,
  text : #151515,
  dark : tint($base-black, 15%),
  ash : tint($base-black, 22%),
  charcoal : tint($base-black, 39%),
  medium : tint($base-black, 50%),
  muted : tint($base-black, 70%),
  base : tint($base-black, 86%),
  light : tint($base-black, 91%),
  faint : tint($base-black, 97%),
  white : $base-white,
  background : #fdfdfd,
  neutral : #f3f2f1,
  neutral-text : darken(#f0eeeb, 27%),
  neutral-dark : darken(#f0eeeb, 9%),
  neutral-light : lighten(#f0eeeb, 4%),
  brand : #151515,
  brand-complement : #2e2423,
  brand-counter : #887e73,
  modal-background : #151515,
  warning : #ffd40c,
  bad-news : #c60c0c,
  good-news : brand-complement
);

// Base size measures
// --------------------------------------------------------------------------

$base-font-size-unit: 16;
$base-line-height-unit: 1.5;
$base-font-size: $base-font-size-unit * 1px;
$base-line-height: ($base-font-size-unit * $base-line-height-unit) * 1px; // 24.65
$space-unit: $base-line-height;
$space: $space-unit * 1;

$gutterSpace: space(1);
$paragraphSpace: space(0.75);
$blockSpace: 5.5vh;

// Widths (based on BS4)
// --------------------------------------------------------------------------

// BS4 defaults:
// Removed the BS4 ascending mixin:
// @include _assert-ascending($grid-breakpoints, "$grid-breakpoints");),
// $container-max-widths: (
// 	sm: 576px,
// 	md: 720px,
// 	lg: 940px,
// 	xl: 1140px
// ) !default;

$grid-breakpoints: (
    xs: 0,
    sm: 544px,
    md: 768px,
    lg: 992px,
    lg-for-container-lg: 1080px,
    xl: 1200px,
    su: 1700px
  )
  !default;

$container-max-widths: (
    sm: 576px,
    md: 660px,
    lg: 1080px,
    xl: 1200px,
    su: 1700px
  )
  !default;

// Font sizes
// --------------------------------------------------------------------------

$fontsizes: (
  text--xs: (xs : 10px, sm : 11px, rg : 12px),
  text--sm: (xs : 10px, sm : 12px, rg : 14px),
  text--meta: (xs : 10px, sm : 13px, rg : 15px),
  text: (xs : 14px, sm : 16px, rg : 19px),
  text--lg: (xs : 19px, sm : 22px, lg : 24px),
  headline--xs: (xs : 18px, sm : 22px, lg : 27px),
  headline--sm: (xs : 18px, sm : 21px, lg : 23px),
  headline: (xs : 24px, sm : 54px, lg : 72px),
  display: (xs : 40px, sm : 54px, lg : 60px)
);

// Other sizes
// --------------------------------------------------------------------------

$border-radius: (
  small : 3px,
  base : 4px,
  large : 6px
);

$button-height: (
  concise : 36px,
  base : 44px,
  lg : 55px
);

$list-inset: (
  margin : space(0.75),
  padding : 0
);

// Transitions
// --------------------------------------------------------------------------

$transition: (
  duration: (fast : 50ms, short : 150ms, long : 500ms),
  type:
    (
      thisalso : cubic-bezier(0.19, 1, 0.22, 1),
      cubic-static : cubic-bezier(0, -0.1, 1, -0.1),
      cubic-state : cubic-bezier(0, 1.1, 1, 1.1),
      base : ease-out,
      fine : ease-in-out
    )
);

// Z-indexes
// --------------------------------------------------------------------------

$z-index: (
  "modal" : 8001,
  "overlay" : 8000,
  "dropdown" : 7000,
  "second" : 2000,
  "first" : 1000,
  "default" : 1,
  "below" : -1
);

// Fonts
// --------------------------------------------------------------------------

// Define stacks
$mono-font-stack: Menlo, Monaco, Consolas, "Liberation Mono", "Courier New",
  "Andale Mono", "Lucida San Typewriter", "Lucida Console", monospace;
$sans-font-stack: -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue",
  "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
$serif-font-stack: Georgia, "Times New Roman", "Times", serif;
$display-font-stack: $sans-font-stack;

// Are you referencing the font files rather than using a base64 string?
$fonts-path: "/dist/fonts/";

// Is your font namespaced?
$font-namespace: "";

// Is the html-level font stack sans or serif?
$main-font-stack: $sans-font-stack;

// Create font-file variables
$sans-thin: "FoundersGrotesk-Regular";
$sans-light: "FoundersGrotesk-Regular";
$sans-book: "FoundersGrotesk-Regular";
$sans-regular: "FoundersGrotesk-Regular";
$sans-medium: "FoundersGrotesk-Medium";
$sans-bold: "FoundersGrotesk-Medium";
$sans-black: "FoundersGrotesk-Medium";

$sans-regular-italic: "FoundersGrotesk-RegularItalic";
$sans-medium-italic: "FoundersGrotesk-MediumItalic";

// Make all font files available
// Mixin options: $font-family, $file-path, $weight, $style, $formats
// Ps. This below prints an unwanted space between the path var and the font var:
// @include font-face($sans-thin, join($fonts-path,$sans-thin) );

@include font-face($sans-thin, "#{$fonts-path}#{$sans-thin}" );
@include font-face($sans-light, "#{$fonts-path}#{$sans-light}" );
@include font-face($sans-book, "#{$fonts-path}#{$sans-book}" );
@include font-face($sans-regular, "#{$fonts-path}#{$sans-regular}" );
@include font-face($sans-regular-italic, "#{$fonts-path}#{$sans-regular-italic}" );
@include font-face($sans-medium, "#{$fonts-path}#{$sans-medium}" );
@include font-face($sans-medium-italic, "#{$fonts-path}#{$sans-medium-italic}" );
@include font-face($sans-bold, "#{$fonts-path}#{$sans-bold}" );
@include font-face($sans-black, "#{$fonts-path}#{$sans-black}" );

// Unused, so apply a default to avoid gulp fuckups
//@include font-face($sans-xbold,   '#{$fonts-path}#{$sans-xbold}' );
//@include font-face($display, '#{$fonts-path}#{$display}' );
//@include font-face($sans-regular-italic, '#{$fonts-path}#{$sans-regular-italic}' );

// Apply font-file variables to a font-stack.
// We only use these variables in our classes.

$font-text-thin: join($sans-thin, $main-font-stack);
$font-text-light: join($sans-light, $main-font-stack);
$font-text-book: join($sans-book, $main-font-stack);
$font-text-regular: join($sans-regular, $main-font-stack);
$font-text-regular-i: join($sans-regular-italic, $main-font-stack);
$font-text-medium: join($sans-medium, $main-font-stack);
$font-text-medium-i: join($sans-medium-italic, $main-font-stack);
$font-text-bold: join($sans-bold, $main-font-stack);
$font-text-xbold: $font-text-regular;
$font-text-black: join($sans-black, $main-font-stack);
$font-display: $font-text-regular;

// Unused, so apply a default to avoid gulp fuckups
//$font-sans-xbold      : join($sans-xbold, $main-font-stack);
//$font-sans-regular-i  : join($sans-regular-italic, $main-font-stack);
//$font-display         : join($display, $display-font-stack);

// Object/component default fonts
// --------------------------------------------------------------------------

$fonts-path-2: "/assets/fonts-serif/";

$serif: NoticiaText-Regular;
$serif-i: NoticiaText-Italic;

@include font-face($serif, "#{$fonts-path-2}#{$serif}" );
@include font-face($serif-i, "#{$fonts-path-2}#{$serif-i}" );

$font-serif: join($serif, $serif-font-stack);
$font-serif-i: join($serif-i, $serif-font-stack);
$font-serif-i: $serif-i;

//$font-serif             : 'Maitree';
//$font-serif             : 'Yrsa';
//$font-serif             : 'Lora';
//$font-serif             : 'Merriweather';
//$font-serif             : 'Noticia Text';
//$font-serif             : $serif;

// Object/component default fonts
// --------------------------------------------------------------------------

$font-button: $font-text-bold;

// Suit breakpoint switches
// Re: '!default'. if the variable has already been assigned to, it won’t be
// re-assigned, but if it doesn’t have a value yet, it will be given one.
// See: http://sass-lang.com/documentation/file.SASS_REFERENCE.html#variable_defaults_
// --------------------------------------------------------------------------

$suit-text-breakpoints: false !default;
$suit-flex-breakpoints: false !default;
$suit-flexembed-breakpoints: false !default;
$suit-grid-breakpoints: true !default;
$suit-size-breakpoints: true !default;
