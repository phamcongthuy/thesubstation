@charset "UTF-8";
/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Correct the line-height for all headings in Chrome mobile, Firefox,
 * iOS Safari, Microsoft Edge and IE.
 */
h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.15; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */
/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */
html {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  box-sizing: inherit; }

/**
 * Removes the default spacing and border for appropriate elements.
 */
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0; }

button {
  background: transparent;
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

iframe {
  border: 0; }

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0; }

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */
[tabindex="-1"]:focus {
  outline: none !important; }

.mist .header {
  background-color: #dcfac0; }

.mist .content {
  background-color: #00968b; }

.mist .footer {
  background-color: #85c79c; }

.spring .header {
  background-color: #f4fac7; }

.spring .content {
  background-color: #c2454e; }

.spring .footer {
  background-color: #ffb158; }

@font-face {
  font-family: Thin;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Thin.eot");
  src: url("/assets/fonts/Thin.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Thin.woff") format("woff"), url("/assets/fonts/Thin.ttf") format("truetype"), url("/assets/fonts/Thin.svg#Thin") format("svg"); }

@font-face {
  font-family: Light;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Light.eot");
  src: url("/assets/fonts/Light.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Light.woff") format("woff"), url("/assets/fonts/Light.ttf") format("truetype"), url("/assets/fonts/Light.svg#Light") format("svg"); }

@font-face {
  font-family: Regular;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Regular.eot");
  src: url("/assets/fonts/Regular.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Regular.woff") format("woff"), url("/assets/fonts/Regular.ttf") format("truetype"), url("/assets/fonts/Regular.svg#Regular") format("svg"); }

@font-face {
  font-family: Regular;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Regular.eot");
  src: url("/assets/fonts/Regular.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Regular.woff") format("woff"), url("/assets/fonts/Regular.ttf") format("truetype"), url("/assets/fonts/Regular.svg#Regular") format("svg"); }

@font-face {
  font-family: Medium;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Medium.eot");
  src: url("/assets/fonts/Medium.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Medium.woff") format("woff"), url("/assets/fonts/Medium.ttf") format("truetype"), url("/assets/fonts/Medium.svg#Medium") format("svg"); }

@font-face {
  font-family: Bold;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Bold.eot");
  src: url("/assets/fonts/Bold.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Bold.woff") format("woff"), url("/assets/fonts/Bold.ttf") format("truetype"), url("/assets/fonts/Bold.svg#Bold") format("svg"); }

@font-face {
  font-family: Black;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts/Black.eot");
  src: url("/assets/fonts/Black.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/Black.woff") format("woff"), url("/assets/fonts/Black.ttf") format("truetype"), url("/assets/fonts/Black.svg#Black") format("svg"); }

@font-face {
  font-family: NoticiaText-Regular;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts-serif/NoticiaText-Regular.eot");
  src: url("/assets/fonts-serif/NoticiaText-Regular.eot?#iefix") format("embedded-opentype"), url("/assets/fonts-serif/NoticiaText-Regular.woff") format("woff"), url("/assets/fonts-serif/NoticiaText-Regular.ttf") format("truetype"), url("/assets/fonts-serif/NoticiaText-Regular.svg#NoticiaText-Regular") format("svg"); }

@font-face {
  font-family: NoticiaText-Italic;
  font-weight: normal;
  font-style: normal;
  src: url("/assets/fonts-serif/NoticiaText-Italic.eot");
  src: url("/assets/fonts-serif/NoticiaText-Italic.eot?#iefix") format("embedded-opentype"), url("/assets/fonts-serif/NoticiaText-Italic.woff") format("woff"), url("/assets/fonts-serif/NoticiaText-Italic.ttf") format("truetype"), url("/assets/fonts-serif/NoticiaText-Italic.svg#NoticiaText-Italic") format("svg"); }

/**
 * @define utilities
 * Sizing utilities
 */
/* Proportional widths
   ========================================================================== */
/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */
[class*="u-size"] {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important;
  /* 1 */ }

.u-size1of12 {
  width: -webkit-calc(100% * 1 / 12) !important;
  width: calc(100% * 1 / 12) !important; }

.u-size1of10 {
  width: 10% !important; }

.u-size1of8 {
  width: 12.5% !important; }

.u-size1of6,
.u-size2of12 {
  width: -webkit-calc(100% * 1 / 6) !important;
  width: calc(100% * 1 / 6) !important; }

.u-size1of5,
.u-size2of10 {
  width: 20% !important; }

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  width: 25% !important; }

.u-size3of10 {
  width: 30% !important; }

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  width: -webkit-calc(100% * 1 / 3) !important;
  width: calc(100% * 1 / 3) !important; }

.u-size3of8 {
  width: 37.5% !important; }

.u-size2of5,
.u-size4of10 {
  width: 40% !important; }

.u-size5of12 {
  width: -webkit-calc(100% * 5 / 12) !important;
  width: calc(100% * 5 / 12) !important; }

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  width: 50% !important; }

.u-size7of12 {
  width: -webkit-calc(100% * 7 / 12) !important;
  width: calc(100% * 7 / 12) !important; }

.u-size3of5,
.u-size6of10 {
  width: 60% !important; }

.u-size5of8 {
  width: 62.5% !important; }

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  width: -webkit-calc(100% * 2 / 3) !important;
  width: calc(100% * 2 / 3) !important; }

.u-size7of10 {
  width: 70% !important; }

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  width: 75% !important; }

.u-size4of5,
.u-size8of10 {
  width: 80% !important; }

.u-size5of6,
.u-size10of12 {
  width: -webkit-calc(100% * 5 / 6) !important;
  width: calc(100% * 5 / 6) !important; }

.u-size7of8 {
  width: 87.5% !important; }

.u-size9of10 {
  width: 90% !important; }

.u-size11of12 {
  width: -webkit-calc(100% * 11 / 12) !important;
  width: calc(100% * 11 / 12) !important; }

/* Intrinsic widths
   ========================================================================== */
/**
 * Make an element shrink wrap its content.
 */
.u-sizeFit {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */
.u-sizeFill {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
  -ms-flex: 1 1 0% !important;
  flex: 1 1 0% !important;
  /* 1 */
  -webkit-flex-basis: 0% !important;
  -ms-flex-preferred-size: 0% !important;
  flex-basis: 0% !important;
  /* 2 */ }

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */
.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 auto !important;
  -ms-flex: 1 1 auto !important;
  flex: 1 1 auto !important;
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

/**
 * Make an element the width of its parent.
 */
.u-sizeFull {
  -webkit-box-sizing: border-box !important;
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important; }

[class*="u-xs-size"] {
  -webkit-flex-basis: auto !important;
  -ms-flex-preferred-size: auto !important;
  flex-basis: auto !important; }

.u-xs-size1of12 {
  width: -webkit-calc(100% * 1 / 12) !important;
  width: calc(100% * 1 / 12) !important; }

.u-xs-size1of10 {
  width: 10% !important; }

.u-xs-size1of8 {
  width: 12.5% !important; }

.u-xs-size1of6,
.u-xs-size2of12 {
  width: -webkit-calc(100% * 1 / 6) !important;
  width: calc(100% * 1 / 6) !important; }

.u-xs-size1of5,
.u-xs-size2of10 {
  width: 20% !important; }

.u-xs-size1of4,
.u-xs-size2of8,
.u-xs-size3of12 {
  width: 25% !important; }

.u-xs-size3of10 {
  width: 30% !important; }

.u-xs-size1of3,
.u-xs-size2of6,
.u-xs-size4of12 {
  width: -webkit-calc(100% * 1 / 3) !important;
  width: calc(100% * 1 / 3) !important; }

.u-xs-size3of8 {
  width: 37.5% !important; }

.u-xs-size2of5,
.u-xs-size4of10 {
  width: 40% !important; }

.u-xs-size5of12 {
  width: -webkit-calc(100% * 5 / 12) !important;
  width: calc(100% * 5 / 12) !important; }

.u-xs-size1of2,
.u-xs-size2of4,
.u-xs-size3of6,
.u-xs-size4of8,
.u-xs-size5of10,
.u-xs-size6of12 {
  width: 50% !important; }

.u-xs-size7of12 {
  width: -webkit-calc(100% * 7 / 12) !important;
  width: calc(100% * 7 / 12) !important; }

.u-xs-size3of5,
.u-xs-size6of10 {
  width: 60% !important; }

.u-xs-size5of8 {
  width: 62.5% !important; }

.u-xs-size2of3,
.u-xs-size4of6,
.u-xs-size8of12 {
  width: -webkit-calc(100% * 2 / 3) !important;
  width: calc(100% * 2 / 3) !important; }

.u-xs-size7of10 {
  width: 70% !important; }

.u-xs-size3of4,
.u-xs-size6of8,
.u-xs-size9of12 {
  width: 75% !important; }

.u-xs-size4of5,
.u-xs-size8of10 {
  width: 80% !important; }

.u-xs-size5of6,
.u-xs-size10of12 {
  width: -webkit-calc(100% * 5 / 6) !important;
  width: calc(100% * 5 / 6) !important; }

.u-xs-size7of8 {
  width: 87.5% !important; }

.u-xs-size9of10 {
  width: 90% !important; }

.u-xs-size11of12 {
  width: -webkit-calc(100% * 11 / 12) !important;
  width: calc(100% * 11 / 12) !important; }

@media (min-width: 544px) {
  [class*="u-sm-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-sm-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-sm-size1of10 {
    width: 10% !important; }
  .u-sm-size1of8 {
    width: 12.5% !important; }
  .u-sm-size1of6,
  .u-sm-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-sm-size1of5,
  .u-sm-size2of10 {
    width: 20% !important; }
  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    width: 25% !important; }
  .u-sm-size3of10 {
    width: 30% !important; }
  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-sm-size3of8 {
    width: 37.5% !important; }
  .u-sm-size2of5,
  .u-sm-size4of10 {
    width: 40% !important; }
  .u-sm-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    width: 50% !important; }
  .u-sm-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-sm-size3of5,
  .u-sm-size6of10 {
    width: 60% !important; }
  .u-sm-size5of8 {
    width: 62.5% !important; }
  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-sm-size7of10 {
    width: 70% !important; }
  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    width: 75% !important; }
  .u-sm-size4of5,
  .u-sm-size8of10 {
    width: 80% !important; }
  .u-sm-size5of6,
  .u-sm-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-sm-size7of8 {
    width: 87.5% !important; }
  .u-sm-size9of10 {
    width: 90% !important; }
  .u-sm-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 768px) {
  [class*="u-md-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-md-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-md-size1of10 {
    width: 10% !important; }
  .u-md-size1of8 {
    width: 12.5% !important; }
  .u-md-size1of6,
  .u-md-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-md-size1of5,
  .u-md-size2of10 {
    width: 20% !important; }
  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    width: 25% !important; }
  .u-md-size3of10 {
    width: 30% !important; }
  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-md-size3of8 {
    width: 37.5% !important; }
  .u-md-size2of5,
  .u-md-size4of10 {
    width: 40% !important; }
  .u-md-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    width: 50% !important; }
  .u-md-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-md-size3of5,
  .u-md-size6of10 {
    width: 60% !important; }
  .u-md-size5of8 {
    width: 62.5% !important; }
  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-md-size7of10 {
    width: 70% !important; }
  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    width: 75% !important; }
  .u-md-size4of5,
  .u-md-size8of10 {
    width: 80% !important; }
  .u-md-size5of6,
  .u-md-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-md-size7of8 {
    width: 87.5% !important; }
  .u-md-size9of10 {
    width: 90% !important; }
  .u-md-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 992px) {
  [class*="u-lg-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-lg-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-lg-size1of10 {
    width: 10% !important; }
  .u-lg-size1of8 {
    width: 12.5% !important; }
  .u-lg-size1of6,
  .u-lg-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-lg-size1of5,
  .u-lg-size2of10 {
    width: 20% !important; }
  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    width: 25% !important; }
  .u-lg-size3of10 {
    width: 30% !important; }
  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-lg-size3of8 {
    width: 37.5% !important; }
  .u-lg-size2of5,
  .u-lg-size4of10 {
    width: 40% !important; }
  .u-lg-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    width: 50% !important; }
  .u-lg-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-lg-size3of5,
  .u-lg-size6of10 {
    width: 60% !important; }
  .u-lg-size5of8 {
    width: 62.5% !important; }
  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-lg-size7of10 {
    width: 70% !important; }
  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    width: 75% !important; }
  .u-lg-size4of5,
  .u-lg-size8of10 {
    width: 80% !important; }
  .u-lg-size5of6,
  .u-lg-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-lg-size7of8 {
    width: 87.5% !important; }
  .u-lg-size9of10 {
    width: 90% !important; }
  .u-lg-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 1080px) {
  [class*="u-lg-for-container-lg-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-lg-for-container-lg-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-lg-for-container-lg-size1of10 {
    width: 10% !important; }
  .u-lg-for-container-lg-size1of8 {
    width: 12.5% !important; }
  .u-lg-for-container-lg-size1of6,
  .u-lg-for-container-lg-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-lg-for-container-lg-size1of5,
  .u-lg-for-container-lg-size2of10 {
    width: 20% !important; }
  .u-lg-for-container-lg-size1of4,
  .u-lg-for-container-lg-size2of8,
  .u-lg-for-container-lg-size3of12 {
    width: 25% !important; }
  .u-lg-for-container-lg-size3of10 {
    width: 30% !important; }
  .u-lg-for-container-lg-size1of3,
  .u-lg-for-container-lg-size2of6,
  .u-lg-for-container-lg-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-lg-for-container-lg-size3of8 {
    width: 37.5% !important; }
  .u-lg-for-container-lg-size2of5,
  .u-lg-for-container-lg-size4of10 {
    width: 40% !important; }
  .u-lg-for-container-lg-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-lg-for-container-lg-size1of2,
  .u-lg-for-container-lg-size2of4,
  .u-lg-for-container-lg-size3of6,
  .u-lg-for-container-lg-size4of8,
  .u-lg-for-container-lg-size5of10,
  .u-lg-for-container-lg-size6of12 {
    width: 50% !important; }
  .u-lg-for-container-lg-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-lg-for-container-lg-size3of5,
  .u-lg-for-container-lg-size6of10 {
    width: 60% !important; }
  .u-lg-for-container-lg-size5of8 {
    width: 62.5% !important; }
  .u-lg-for-container-lg-size2of3,
  .u-lg-for-container-lg-size4of6,
  .u-lg-for-container-lg-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-lg-for-container-lg-size7of10 {
    width: 70% !important; }
  .u-lg-for-container-lg-size3of4,
  .u-lg-for-container-lg-size6of8,
  .u-lg-for-container-lg-size9of12 {
    width: 75% !important; }
  .u-lg-for-container-lg-size4of5,
  .u-lg-for-container-lg-size8of10 {
    width: 80% !important; }
  .u-lg-for-container-lg-size5of6,
  .u-lg-for-container-lg-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-lg-for-container-lg-size7of8 {
    width: 87.5% !important; }
  .u-lg-for-container-lg-size9of10 {
    width: 90% !important; }
  .u-lg-for-container-lg-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 1200px) {
  [class*="u-xl-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-xl-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-xl-size1of10 {
    width: 10% !important; }
  .u-xl-size1of8 {
    width: 12.5% !important; }
  .u-xl-size1of6,
  .u-xl-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-xl-size1of5,
  .u-xl-size2of10 {
    width: 20% !important; }
  .u-xl-size1of4,
  .u-xl-size2of8,
  .u-xl-size3of12 {
    width: 25% !important; }
  .u-xl-size3of10 {
    width: 30% !important; }
  .u-xl-size1of3,
  .u-xl-size2of6,
  .u-xl-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-xl-size3of8 {
    width: 37.5% !important; }
  .u-xl-size2of5,
  .u-xl-size4of10 {
    width: 40% !important; }
  .u-xl-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-xl-size1of2,
  .u-xl-size2of4,
  .u-xl-size3of6,
  .u-xl-size4of8,
  .u-xl-size5of10,
  .u-xl-size6of12 {
    width: 50% !important; }
  .u-xl-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-xl-size3of5,
  .u-xl-size6of10 {
    width: 60% !important; }
  .u-xl-size5of8 {
    width: 62.5% !important; }
  .u-xl-size2of3,
  .u-xl-size4of6,
  .u-xl-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-xl-size7of10 {
    width: 70% !important; }
  .u-xl-size3of4,
  .u-xl-size6of8,
  .u-xl-size9of12 {
    width: 75% !important; }
  .u-xl-size4of5,
  .u-xl-size8of10 {
    width: 80% !important; }
  .u-xl-size5of6,
  .u-xl-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-xl-size7of8 {
    width: 87.5% !important; }
  .u-xl-size9of10 {
    width: 90% !important; }
  .u-xl-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

@media (min-width: 1700px) {
  [class*="u-su-size"] {
    -webkit-flex-basis: auto !important;
    -ms-flex-preferred-size: auto !important;
    flex-basis: auto !important; }
  .u-su-size1of12 {
    width: -webkit-calc(100% * 1 / 12) !important;
    width: calc(100% * 1 / 12) !important; }
  .u-su-size1of10 {
    width: 10% !important; }
  .u-su-size1of8 {
    width: 12.5% !important; }
  .u-su-size1of6,
  .u-su-size2of12 {
    width: -webkit-calc(100% * 1 / 6) !important;
    width: calc(100% * 1 / 6) !important; }
  .u-su-size1of5,
  .u-su-size2of10 {
    width: 20% !important; }
  .u-su-size1of4,
  .u-su-size2of8,
  .u-su-size3of12 {
    width: 25% !important; }
  .u-su-size3of10 {
    width: 30% !important; }
  .u-su-size1of3,
  .u-su-size2of6,
  .u-su-size4of12 {
    width: -webkit-calc(100% * 1 / 3) !important;
    width: calc(100% * 1 / 3) !important; }
  .u-su-size3of8 {
    width: 37.5% !important; }
  .u-su-size2of5,
  .u-su-size4of10 {
    width: 40% !important; }
  .u-su-size5of12 {
    width: -webkit-calc(100% * 5 / 12) !important;
    width: calc(100% * 5 / 12) !important; }
  .u-su-size1of2,
  .u-su-size2of4,
  .u-su-size3of6,
  .u-su-size4of8,
  .u-su-size5of10,
  .u-su-size6of12 {
    width: 50% !important; }
  .u-su-size7of12 {
    width: -webkit-calc(100% * 7 / 12) !important;
    width: calc(100% * 7 / 12) !important; }
  .u-su-size3of5,
  .u-su-size6of10 {
    width: 60% !important; }
  .u-su-size5of8 {
    width: 62.5% !important; }
  .u-su-size2of3,
  .u-su-size4of6,
  .u-su-size8of12 {
    width: -webkit-calc(100% * 2 / 3) !important;
    width: calc(100% * 2 / 3) !important; }
  .u-su-size7of10 {
    width: 70% !important; }
  .u-su-size3of4,
  .u-su-size6of8,
  .u-su-size9of12 {
    width: 75% !important; }
  .u-su-size4of5,
  .u-su-size8of10 {
    width: 80% !important; }
  .u-su-size5of6,
  .u-su-size10of12 {
    width: -webkit-calc(100% * 5 / 6) !important;
    width: calc(100% * 5 / 6) !important; }
  .u-su-size7of8 {
    width: 87.5% !important; }
  .u-su-size9of10 {
    width: 90% !important; }
  .u-su-size11of12 {
    width: -webkit-calc(100% * 11 / 12) !important;
    width: calc(100% * 11 / 12) !important; } }

/** @define utilities */
/* Applies to flex container
   ========================================================================== */
/**
 * Container
 */
.u-flex {
  display: -webkit-box !important;
  display: -webkit-flex !important;
  display: -ms-flexbox !important;
  display: flex !important; }

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important; }

/**
 * Direction: row
 */
.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: row !important;
  -ms-flex-direction: row !important;
  flex-direction: row !important; }

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: row-reverse !important;
  -ms-flex-direction: row-reverse !important;
  flex-direction: row-reverse !important; }

/**
 * Direction: column
 */
.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
  -webkit-flex-direction: column !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important; }

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
  -webkit-flex-direction: column-reverse !important;
  -ms-flex-direction: column-reverse !important;
  flex-direction: column-reverse !important; }

/**
 * Wrap
 */
.u-flexWrap {
  -webkit-flex-wrap: wrap !important;
  -ms-flex-wrap: wrap !important;
  flex-wrap: wrap !important; }

.u-flexNoWrap {
  -webkit-flex-wrap: nowrap !important;
  -ms-flex-wrap: nowrap !important;
  flex-wrap: nowrap !important; }

.u-flexWrapReverse {
  -webkit-flex-wrap: wrap-reverse !important;
  -ms-flex-wrap: wrap-reverse !important;
  flex-wrap: wrap-reverse !important; }

/**
 * Align items along the main axis of the current line of the flex container
 */
.u-flexJustifyStart {
  -webkit-box-pack: start !important;
  -webkit-justify-content: flex-start !important;
  -ms-flex-pack: start !important;
  justify-content: flex-start !important; }

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
  -webkit-justify-content: flex-end !important;
  -ms-flex-pack: end !important;
  justify-content: flex-end !important; }

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
  -webkit-justify-content: center !important;
  -ms-flex-pack: center !important;
  justify-content: center !important; }

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
  -webkit-justify-content: space-between !important;
  -ms-flex-pack: justify !important;
  justify-content: space-between !important; }

.u-flexJustifyAround {
  -webkit-justify-content: space-around !important;
  -ms-flex-pack: distribute !important;
  justify-content: space-around !important; }

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */
.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
  -webkit-align-items: flex-start !important;
  -ms-flex-align: start !important;
  align-items: flex-start !important; }

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
  -webkit-align-items: flex-end !important;
  -ms-flex-align: end !important;
  align-items: flex-end !important; }

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
  -webkit-align-items: center !important;
  -ms-flex-align: center !important;
  align-items: center !important; }

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
  -webkit-align-items: stretch !important;
  -ms-flex-align: stretch !important;
  align-items: stretch !important; }

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
  -webkit-align-items: baseline !important;
  -ms-flex-align: baseline !important;
  align-items: baseline !important; }

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */
.u-flexAlignContentStart {
  -webkit-align-content: flex-start !important;
  -ms-flex-line-pack: start !important;
  align-content: flex-start !important; }

.u-flexAlignContentEnd {
  -webkit-align-content: flex-end !important;
  -ms-flex-line-pack: end !important;
  align-content: flex-end !important; }

.u-flexAlignContentCenter {
  -webkit-align-content: center !important;
  -ms-flex-line-pack: center !important;
  align-content: center !important; }

.u-flexAlignContentStretch {
  -webkit-align-content: stretch !important;
  -ms-flex-line-pack: stretch !important;
  align-content: stretch !important; }

.u-flexAlignContentBetween {
  -webkit-align-content: space-between !important;
  -ms-flex-line-pack: justify !important;
  align-content: space-between !important; }

.u-flexAlignContentAround {
  -webkit-align-content: space-around !important;
  -ms-flex-line-pack: distribute !important;
  align-content: space-around !important; }

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */
/* postcss-bem-linter: ignore */
.u-flex > *,
.u-flexInline > * {
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  /* 1 */ }

/* Applies to flex items
   ========================================================================== */
/**
 * Override default alignment of single item when specified by `align-items`
 */
.u-flexAlignSelfStart {
  -webkit-align-self: flex-start !important;
  -ms-flex-item-align: start !important;
  align-self: flex-start !important; }

.u-flexAlignSelfEnd {
  -webkit-align-self: flex-end !important;
  -ms-flex-item-align: end !important;
  align-self: flex-end !important; }

.u-flexAlignSelfCenter {
  -webkit-align-self: center !important;
  -ms-flex-item-align: center !important;
  -ms-grid-row-align: center !important;
  align-self: center !important; }

.u-flexAlignSelfStretch {
  -webkit-align-self: stretch !important;
  -ms-flex-item-align: stretch !important;
  -ms-grid-row-align: stretch !important;
  align-self: stretch !important; }

.u-flexAlignSelfBaseline {
  -webkit-align-self: baseline !important;
  -ms-flex-item-align: baseline !important;
  align-self: baseline !important; }

.u-flexAlignSelfAuto {
  -webkit-align-self: auto !important;
  -ms-flex-item-align: auto !important;
  -ms-grid-row-align: auto !important;
  align-self: auto !important; }

/**
 * Change order without editing underlying HTML
 */
.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
  -webkit-order: -1 !important;
  -ms-flex-order: -1 !important;
  order: -1 !important; }

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
  -webkit-order: 1 !important;
  -ms-flex-order: 1 !important;
  order: 1 !important; }

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
  -webkit-order: 0 !important;
  -ms-flex-order: 0 !important;
  order: 0 !important; }

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */
.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
  -webkit-flex: 1 1 0% !important;
  -ms-flex: 1 1 0% !important;
  flex: 1 1 0% !important;
  /* 1 */ }

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
  -webkit-flex: 2 1 0% !important;
  -ms-flex: 2 1 0% !important;
  flex: 2 1 0% !important; }

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
  -webkit-flex: 3 1 0% !important;
  -ms-flex: 3 1 0% !important;
  flex: 3 1 0% !important; }

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
  -webkit-flex: 4 1 0% !important;
  -ms-flex: 4 1 0% !important;
  flex: 4 1 0% !important; }

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
  -webkit-flex: 5 1 0% !important;
  -ms-flex: 5 1 0% !important;
  flex: 5 1 0% !important; }

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */
.u-flexExpand {
  margin: auto !important; }

.u-flexExpandLeft {
  margin-left: auto !important; }

.u-flexExpandRight {
  margin-right: auto !important; }

.u-flexExpandTop {
  margin-top: auto !important; }

.u-flexExpandBottom {
  margin-bottom: auto !important; }

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */
.u-textBreak {
  word-wrap: break-word !important; }

/**
 * Horizontal text alignment
 */
.u-textCenter {
  text-align: center !important; }

.u-textLeft {
  text-align: left !important; }

.u-textRight {
  text-align: right !important; }

/**
 * Inherit the ancestor's text color.
 */
.u-textInheritColor {
  color: inherit !important; }

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */
.u-textKern {
  font-feature-settings: "kern" 1;
  /* 1 */
  -webkit-font-kerning: normal;
  font-kerning: normal;
  /* 2 */
  text-rendering: optimizeLegibility;
  /* 3 */ }

/**
 * Prevent whitespace wrapping
 */
.u-textNoWrap {
  white-space: nowrap !important; }

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */
.u-textTruncate {
  max-width: 100%;
  /* 1 */
  overflow: hidden !important;
  -o-text-overflow: ellipsis !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important;
  /* 2 */ }

/** @define Button */
/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */
/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */
.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit;
  /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  /* 4 */ }

/**
 * Remove excess padding and border in Firefox 4+
 */
.Button::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */
.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

/**
 * UI states
 */
.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none; }

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: var(--Button-disabled-opacity);
  opacity: 0.6; }

/** @define FlexEmbed */
/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative; }

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */
.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%; }

/**
 * Modifier: 3:1 aspect ratio
 */
.FlexEmbed-ratio--3by1 {
  padding-bottom: -webkit-calc(100% / 3);
  padding-bottom: calc(100% / 3); }

/**
 * Modifier: 2:1 aspect ratio
 */
.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%; }

/**
 * Modifier: 16:9 aspect ratio
 */
.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%; }

/**
 * Modifier: 4:3 aspect ratio
 */
.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%; }

/**
 * Fit the content to the aspect ratio
 */
.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

/** @define Grid */
/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */
/* Grid container
   ========================================================================== */
/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */
.Grid {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  /* 1 */
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-flow: row wrap;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */ }

/**
 * Modifier: center align all grid cells
 */
.Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

/**
 * Modifier: right align all grid cells
 */
.Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

/**
 * Modifier: middle-align grid cells
 */
.Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

/**
 * Modifier: bottom-align grid cells
 */
.Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */
.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 0%;
  -ms-flex: 1 1 0%;
  flex: 1 1 0%;
  /* 1 */ }

/**
 * Modifier: all cells match height of tallest cell in a row
 */
.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

/**
 * Modifier: gutters
 */
.Grid--withGutter {
  margin: 0 -webkit-calc(-0.5 * 18px);
  margin: 0 calc(-0.5 * 18px); }

.Grid--withGutter > .Grid-cell {
  padding: 0 -webkit-calc(0.5 * 18px);
  padding: 0 calc(0.5 * 18px); }

/* Grid cell
   ========================================================================== */
/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */
.Grid-cell {
  -webkit-box-sizing: inherit;
  box-sizing: inherit;
  -webkit-flex-basis: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  /* 1 */
  min-width: 0;
  /* 2 */ }

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */
.Grid-cell--center {
  margin: 0 auto; }

.xs-Grid--alignCenter {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.xs-Grid--alignRight {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }

.xs-Grid--alignMiddle {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.xs-Grid--alignBottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end; }

.xs-Grid-cell--center {
  margin: 0 auto; }

@media (min-width: 544px) {
  .sm-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .sm-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .sm-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .sm-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .sm-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 768px) {
  .md-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .md-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .md-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .md-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .md-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 992px) {
  .lg-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .lg-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .lg-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .lg-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .lg-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1080px) {
  .lg-for-container-lg-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .lg-for-container-lg-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .lg-for-container-lg-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .lg-for-container-lg-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .lg-for-container-lg-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1200px) {
  .xl-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .xl-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .xl-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .xl-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .xl-Grid-cell--center {
    margin: 0 auto; } }

@media (min-width: 1700px) {
  .su-Grid--alignCenter {
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .su-Grid--alignRight {
    -webkit-box-pack: end;
    -webkit-justify-content: flex-end;
    -ms-flex-pack: end;
    justify-content: flex-end; }
  .su-Grid--alignMiddle {
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
  .su-Grid--alignBottom {
    -webkit-box-align: end;
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end; }
  .su-Grid-cell--center {
    margin: 0 auto; } }

.Grid--withGutter {
  margin: 0 -12px; }
  @media (min-width: 992px) {
    .Grid--withGutter {
      margin: 0 -24px; } }

.Grid--withGutter > .Grid-cell {
  padding: 0 12px; }
  @media (min-width: 992px) {
    .Grid--withGutter > .Grid-cell {
      padding: 0 24px; } }

.Grid--withGutterSm {
  margin: 0 -6px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm {
      margin: 0 -12px; } }

.Grid--withGutterSm > .Grid-cell {
  padding: 0 6px; }
  @media (min-width: 992px) {
    .Grid--withGutterSm > .Grid-cell {
      padding: 0 6px; } }

.Grid--withGutterLg {
  margin: 0 -24px; }
  @media (min-width: 992px) {
    .Grid--withGutterLg {
      margin: 0 -72px; } }

.Grid--withGutterLg > .Grid-cell {
  padding: 0 24px; }
  @media (min-width: 992px) {
    .Grid--withGutterLg > .Grid-cell {
      padding: 0 72px; } }

/**
  * Simple page-level setup from InuitCSS.
  *
  * 1. Set the default `font-size` and `line-height` for the entire project,
  *    sourced from our default variables. The `font-size` is calculated to exist
  *    in ems, the `line-height` is calculated to exist unitlessly.
  * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
  *    navigating between pages that do/do not have enough content to produce
  *    scrollbars naturally.
  * 3. Ensure the page always fills at least the entire height of the viewport.
  */
html {
  background-color: #fdfdfd;
  min-height: 100%;
  /* 3 */
  overflow-y: scroll;
  /* 2 */ }

a {
  color: currentColor;
  text-decoration: none; }
  a:hover, a:active, a:focus {
    color: currentColor; }

img {
  max-width: 100%;
  font-style: italic;
  vertical-align: middle; }

.gm-style img,
img[width],
img[height] {
  max-width: none; }

.o-image--circle {
  border-radius: 50%; }

/* uncss:ignore */
h1, h2, h3, h4, h5, h6,
blockquote,
ul, ol, li, dl, dd
p, address,
table, time,
form, fieldset, legend,
figure, figcaption,
table, th, td, caption
pre, small,
em, b {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

html {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 100%;
  line-height: 1.5;
  text-align: left;
  text-rendering: geometricPrecision;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/* uncss:ignore */
ul, ol, li, dl,
blockquote, p, address,
table, time,
fieldset,
pre {
  margin-bottom: 18px; }

.o-posAbsoluteCenter {
  left: 50%;
  position: absolute;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFixedCenter {
  left: 50%;
  position: fixed;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%); }

.o-posFullScreen {
  bottom: 0;
  left: 0;
  margin: auto;
  position: fixed;
  right: 0;
  top: 0; }

.o-posAbsoluteCenterAlt {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0; }

.o-posFullScreen,
.o-posFixedCenter {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.o-container {
  height: inherit;
  margin: 0 auto;
  max-width: 1080px;
  padding: 0 24px;
  position: relative; }
  .o-container:before, .o-container:after {
    content: " ";
    display: table; }
  .o-container:after {
    clear: both; }
  .o-container p:last-child,
  .o-container p:last-child a,
  .o-container li:last-child,
  .o-container li:last-child a,
  .o-container ol:last-child,
  .o-container ol:last-child a {
    margin-bottom: 0; }
  @media (min-width: 544px) {
    .o-container {
      padding: 0 36px; } }
  .o-container--md {
    height: inherit;
    margin: 0 auto;
    max-width: 660px;
    padding: 0 24px;
    position: relative; }
    .o-container--md:before, .o-container--md:after {
      content: " ";
      display: table; }
    .o-container--md:after {
      clear: both; }
    .o-container--md p:last-child,
    .o-container--md p:last-child a,
    .o-container--md li:last-child,
    .o-container--md li:last-child a,
    .o-container--md ol:last-child,
    .o-container--md ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--md {
        padding: 0 36px; } }
  .o-container--xl {
    height: inherit;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 24px;
    position: relative; }
    .o-container--xl:before, .o-container--xl:after {
      content: " ";
      display: table; }
    .o-container--xl:after {
      clear: both; }
    .o-container--xl p:last-child,
    .o-container--xl p:last-child a,
    .o-container--xl li:last-child,
    .o-container--xl li:last-child a,
    .o-container--xl ol:last-child,
    .o-container--xl ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--xl {
        padding: 0 36px; } }
  .o-container--super {
    max-width: 100%;
    padding: 0 36px; }
    @media (min-width: 544px) {
      .o-container--super {
        padding: 0 96px; } }
  .o-container--postInfo {
    height: inherit;
    margin: 0 auto;
    max-width: 1080px;
    padding: 0 24px;
    position: relative;
    padding: 0 !important; }
    .o-container--postInfo:before, .o-container--postInfo:after {
      content: " ";
      display: table; }
    .o-container--postInfo:after {
      clear: both; }
    .o-container--postInfo p:last-child,
    .o-container--postInfo p:last-child a,
    .o-container--postInfo li:last-child,
    .o-container--postInfo li:last-child a,
    .o-container--postInfo ol:last-child,
    .o-container--postInfo ol:last-child a {
      margin-bottom: 0; }
    @media (min-width: 544px) {
      .o-container--postInfo {
        padding: 0 36px; } }
    @media (min-width: 1200px) {
      .o-container--postInfo {
        padding: 0 36px; } }
    @media (min-width: 1700px) {
      .o-container--postInfo {
        height: inherit;
        margin: 0 auto;
        max-width: 1200px;
        padding: 0 24px;
        position: relative; }
        .o-container--postInfo:before, .o-container--postInfo:after {
          content: " ";
          display: table; }
        .o-container--postInfo:after {
          clear: both; }
        .o-container--postInfo p:last-child,
        .o-container--postInfo p:last-child a,
        .o-container--postInfo li:last-child,
        .o-container--postInfo li:last-child a,
        .o-container--postInfo ol:last-child,
        .o-container--postInfo ol:last-child a {
          margin-bottom: 0; } }
  @media (min-width: 1700px) and (min-width: 544px) {
    .o-container--postInfo {
      padding: 0 36px; } }

.o-grid {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }

.o-grid > * {
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 5em;
  -ms-flex: 1 0 5em;
  flex: 1 0 5em; }

.o-grid--spaceBetween {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between; }

[data-modal-toggle],
[data-toggle-fold],
[data-dismiss] {
  cursor: pointer; }

ul {
  list-style-type: disc;
  margin-left: 18px;
  padding-left: 0; }

ol {
  list-style-type: decimal; }

li {
  margin-bottom: 0; }
  li > ul,
  li > ol {
    margin-bottom: 0; }

.o-list {
  margin-left: 18px;
  padding-left: 0; }

.o-listClean {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }

.o-listInline {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0; }
  .o-listInline li,
  .o-listInline div {
    display: inline-block; }
    .o-listInline li:not(:last-child),
    .o-listInline div:not(:last-child) {
      margin-right: 6px; }

a {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out; }
  a:hover, a:active, a:focus {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out; }

.o-linkBuried {
  display: block;
  width: 100%;
  margin-bottom: 12px; }
  .o-linkBuried:hover .o-linkBuriedTarget, .o-linkBuried:active .o-linkBuriedTarget, .o-linkBuried:focus .o-linkBuriedTarget {
    background-color: #151515; }

.o-linkBuriedTarget {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #151515; }

.o-link {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-link:hover, .o-link:active, .o-link:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLink a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLink a:hover, .o-childLink a:active, .o-childLink a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkGrey {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
  background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkGrey:hover, .o-linkGrey:active, .o-linkGrey:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkGrey a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(179, 179, 179, 0)), color-stop(50%, #b3b3b3));
  background-image: -webkit-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: -o-linear-gradient(top, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-image: linear-gradient(to bottom, rgba(179, 179, 179, 0) 50%, #b3b3b3 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkGrey a:hover, .o-childLinkGrey a:active, .o-childLinkGrey a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkLite {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(232, 232, 232, 0)), color-stop(50%, #e8e8e8));
  background-image: -webkit-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: -o-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: linear-gradient(to bottom, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkLite:hover, .o-linkLite:active, .o-linkLite:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkLite a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(232, 232, 232, 0)), color-stop(50%, #e8e8e8));
  background-image: -webkit-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: -o-linear-gradient(top, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-image: linear-gradient(to bottom, rgba(232, 232, 232, 0) 50%, #e8e8e8 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkLite a:hover, .o-childLinkLite a:active, .o-childLinkLite a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkBrand {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, #151515));
  background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkBrand:hover, .o-linkBrand:active, .o-linkBrand:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkBrand a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(21, 21, 21, 0)), color-stop(50%, #151515));
  background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0) 50%, #151515 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkBrand a:hover, .o-childLinkBrand a:active, .o-childLinkBrand a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkWhite {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(255, 255, 255, 0)), color-stop(50%, #FFF));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-linkWhite:hover, .o-linkWhite:active, .o-linkWhite:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkWhite a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(255, 255, 255, 0)), color-stop(50%, #FFF));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: -o-linear-gradient(top, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 50%, #FFF 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .o-childLinkWhite a:hover, .o-childLinkWhite a:active, .o-childLinkWhite a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-linkInvisible {
  background-image: none; }
  .o-linkInvisible:hover, .o-linkInvisible:active, .o-linkInvisible:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.o-childLinkInvisible a {
  background-image: none; }
  .o-childLinkInvisible a:hover, .o-childLinkInvisible a:active, .o-childLinkInvisible a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

/**
 * 1. If IE10/11 compatibility req'd, use height.
 * 2. If you need min-height, wrap in 'u-ieMinHeightBug'.
 * See http://bit.ly/1gy8OJS for details.
 */
.o-aligner {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  height: 100%;
  /* 1 */
  min-height: 100%;
  /* 2 */
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.o-aligner-item {
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1; }

.o-aligner-item--top {
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start; }

.o-aligner-item--bottom {
  -webkit-align-self: flex-end;
  -ms-flex-item-align: end;
  align-self: flex-end; }

.o-aligner-item--fixed {
  -webkit-box-flex: 0;
  -webkit-flex: none;
  -ms-flex: none;
  flex: none;
  max-width: 50%; }

/**
 * Fixes the min-height bug in IE10-11.
 * This class should be added to a container element as described in
 * Flexbug #3. See http://bit.ly/1gy8OJS for details.
 */
.u-ieMinHeightBugFix {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }

.o-ghost {
  font-size: 0;
  height: inherit; }

.o-ghost:before {
  content: "";
  height: 100%;
  margin-left: -1px;
  width: 1px; }

.o-ghost:before,
.o-ghost-child {
  display: inline-block;
  vertical-align: middle; }

.HzRule {
  border: 0;
  border-top: 1px solid #e8e8e8;
  height: 0;
  margin-top: -webkit-calc( 24px - 1px);
  margin-top: calc( 24px - 1px);
  margin-bottom: 24px; }

.Rule {
  border: 0;
  border-top: 1px solid #151515; }

.DivRule--light {
  border: 0;
  border-top: #dbdbdb solid 1px; }

.DivRule--bottom {
  border-bottom: 1px solid #151515; }

.VertRule--left {
  border-left: 1px solid #dbdbdb; }

.o-icon {
  cursor: pointer;
  display: inline-block;
  fill: currentColor;
  height: 32px;
  line-height: 1;
  position: relative;
  text-align: center;
  vertical-align: middle;
  width: 32px; }
  .o-icon:hover, .o-icon:active, .o-icon:focus {
    outline: 0; }
  .o-icon--stroke {
    fill: transparent;
    stroke: currentColor;
    stroke-width: 2px;
    stroke-linejoin: round; }
  .o-icon--nav {
    height: 20px;
    margin-left: 12px;
    width: 15px; }
  .o-icon--sm {
    height: 10px;
    vertical-align: baseline;
    width: 10px; }
    @media (min-width: 544px) {
      .o-icon--sm {
        width: 11px;
        height: 11px; } }
  .o-icon--md {
    width: 27px;
    height: 27px; }
    @media (min-width: 544px) {
      .o-icon--md {
        width: 36px;
        height: 36px; } }
  .o-icon--lg {
    width: 2rem;
    height: 2rem; }
  .o-icon--xl {
    border: 1px solid currentColor;
    height: 48px;
    width: 48px; }
    @media (min-width: 544px) {
      .o-icon--xl {
        height: 60px;
        width: 60px; } }
  .o-icon--super {
    width: 2.5rem;
    height: 2.5rem; }
    @media (min-width: 544px) {
      .o-icon--super {
        width: 3rem;
        height: 3rem; } }
  .o-icon--left {
    margin-right: 3px; }
    @media (min-width: 544px) {
      .o-icon--left {
        margin-right: 4px; } }
  .o-icon--leftSm {
    margin-right: 1px; }
    @media (min-width: 544px) {
      .o-icon--leftSm {
        margin-right: 0.125rem; } }
  .o-icon--right {
    margin-left: 8px; }
    @media (min-width: 544px) {
      .o-icon--right {
        margin-left: 12px; } }
  .o-icon--rightSm {
    margin-left: 1px; }
    @media (min-width: 544px) {
      .o-icon--rightSm {
        margin-left: 0.125rem; } }
  .o-icon + [class^="-arrow-inline"] {
    vertical-align: super; }
  .o-icon--textAlign {
    line-height: inherit;
    -webkit-transform: translateY(-2px);
    -ms-transform: translateY(-2px);
    transform: translateY(-2px);
    vertical-align: middle; }
  .o-icon--textLgAlign {
    -webkit-transform: translateY(1px);
    -ms-transform: translateY(1px);
    transform: translateY(1px); }
  .o-icon--buttonAlign {
    line-height: inherit;
    -webkit-transform: translateY(-2px);
    -ms-transform: translateY(-2px);
    transform: translateY(-2px);
    vertical-align: middle; }
  .o-icon--formAlign {
    position: relative;
    vertical-align: top; }
  .o-icon--mediaAlign {
    -webkit-transform: translateY(-0.25rem);
    -ms-transform: translateY(-0.25rem);
    transform: translateY(-0.25rem); }

.c-imageBlend {
  background-blend-mode: multiply;
  background-color: rgba(21, 21, 21, 0.8); }

.c-imageBlend--just {
  background-blend-mode: multiply;
  background-color: rgba(21, 21, 21, 0.4); }

.o-coverImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none; }

.o-coverImage--dark {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%; }
  .o-coverImage--dark:before {
    bottom: 0;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    top: 0;
    background-image: -webkit-gradient(linear, left top, left bottom, from(#151515), to(rgba(21, 21, 21, 0.2)));
    background-image: -webkit-linear-gradient(top, #151515 0%, rgba(21, 21, 21, 0.2) 100%);
    background-image: -o-linear-gradient(top, #151515 0%, rgba(21, 21, 21, 0.2) 100%);
    background-image: linear-gradient(to bottom, #151515 0%, rgba(21, 21, 21, 0.2) 100%);
    background-blend-mode: multiply;
    content: " ";
    opacity: 1; }

@media (max-width: 767px) {
  .o-coverImage--blends {
    background-position-x: 0; } }

.o-containImage {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none;
  background-size: contain; }

.FlexEmbed-fitImage {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%; }

.FlexEmbed-content--dark:before {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(21, 21, 21, 0.9)), to(rgba(21, 21, 21, 0)));
  background-image: -webkit-linear-gradient(top, rgba(21, 21, 21, 0.9) 0%, rgba(21, 21, 21, 0) 100%);
  background-image: -o-linear-gradient(top, rgba(21, 21, 21, 0.9) 0%, rgba(21, 21, 21, 0) 100%);
  background-image: linear-gradient(to bottom, rgba(21, 21, 21, 0.9) 0%, rgba(21, 21, 21, 0) 100%);
  background-blend-mode: multiply;
  content: " ";
  opacity: 1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.c-text--xs {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 10px; }
  @media (min-width: 544px) {
    .c-text--xs {
      font-size: 11px; } }
  @media (min-width: 1200px) {
    .c-text--xs {
      font-size: 12px; } }
  .c-text--xs > li,
  .c-text--xs > li a,
  .c-text--xs > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--sm {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 10px; }
  @media (min-width: 544px) {
    .c-text--sm {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-text--sm {
      font-size: 14px; } }
  .c-text--sm > li,
  .c-text--sm > li a,
  .c-text--sm > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 14px; }
  @media (min-width: 544px) {
    .c-text {
      font-size: 16px; } }
  @media (min-width: 1200px) {
    .c-text {
      font-size: 19px; } }
  .c-text > li,
  .c-text > li a,
  .c-text > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--medium {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 14px;
  color: gray; }
  @media (min-width: 544px) {
    .c-text--medium {
      font-size: 16px; } }
  @media (min-width: 1200px) {
    .c-text--medium {
      font-size: 19px; } }
  .c-text--medium > li,
  .c-text--medium > li a,
  .c-text--medium > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--intro {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 14px;
  color: gray;
  margin-bottom: 12px; }
  @media (min-width: 544px) {
    .c-text--intro {
      font-size: 16px; } }
  @media (min-width: 1200px) {
    .c-text--intro {
      font-size: 19px; } }
  .c-text--intro > li,
  .c-text--intro > li a,
  .c-text--intro > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text--aside {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-text--aside {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-text--aside {
      font-size: 14px; } }
  .c-text--aside > li,
  .c-text--aside > li a,
  .c-text--aside > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-text--aside {
      line-height: 1.25; } }

.c-text--meta {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 10px;
  color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-text--meta {
      font-size: 14px; } }
  .c-text--meta > li,
  .c-text--meta > li a,
  .c-text--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-text--meta > a {
    border-color: transparent !important; }
    .c-text--meta > a:hover, .c-text--meta > a:active, .c-text--meta > a:focus {
      border-color: gray !important; }
  @media (min-width: 544px) {
    .c-text--meta {
      margin: auto; } }

.c-text-block > * {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 14px; }
  @media (min-width: 544px) {
    .c-text-block > * {
      font-size: 16px; } }
  @media (min-width: 1200px) {
    .c-text-block > * {
      font-size: 19px; } }
  .c-text-block > * > li,
  .c-text-block > * > li a,
  .c-text-block > * > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-text-block--footer {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  margin: 0; }
  .c-text-block--footer::before {
    background-color: rgba(253, 253, 253, 0.2);
    content: " ";
    display: block;
    height: 1px;
    margin: 24px 0 27.6px;
    width: 2.5%; }
  .c-text-block--footer > * {
    color: #151515;
    font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.0125em;
    line-height: 1.5;
    font-size: 14px;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-text-block--footer > * {
        font-size: 16px; } }
    @media (min-width: 1200px) {
      .c-text-block--footer > * {
        font-size: 19px; } }
    .c-text-block--footer > * > li,
    .c-text-block--footer > * > li a,
    .c-text-block--footer > * > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }

.c-list--itemTag {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 10px;
  display: inline-block;
  width: 18px; }
  @media (min-width: 544px) {
    .c-list--itemTag {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-list--itemTag {
      font-size: 14px; } }
  .c-list--itemTag > li,
  .c-list--itemTag > li a,
  .c-list--itemTag > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.025em;
  line-height: 1.5;
  font-size: 10px;
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
  color: gray;
  margin-bottom: 30px; }
  @media (min-width: 544px) {
    .c-list--meta {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-list--meta {
      font-size: 14px; } }
  .c-list--meta > li,
  .c-list--meta > li a,
  .c-list--meta > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-list--meta-title {
  color: #151515 !important;
  margin: 30px 0 15px !important; }
  .c-list--meta-title:first-child {
    margin-top: 0 !important; }

.u-textWtLt {
  font-family: Light, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtRg {
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

.u-textWtMd {
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important; }

ul, ol, dl,
p, address,
table, time,
fieldset, figcaption,
pre, a {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.0125em;
  line-height: 1.5;
  font-size: 14px; }
  @media (min-width: 544px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 16px; } }
  @media (min-width: 1200px) {
    ul, ol, dl,
    p, address,
    table, time,
    fieldset, figcaption,
    pre, a {
      font-size: 19px; } }
  ul > li,
  ul > li a,
  ul > a, ol > li,
  ol > li a,
  ol > a, dl > li,
  dl > li a,
  dl > a,
  p > li,
  p > li a,
  p > a, address > li,
  address > li a,
  address > a,
  table > li,
  table > li a,
  table > a, time > li,
  time > li a,
  time > a,
  fieldset > li,
  fieldset > li a,
  fieldset > a, figcaption > li,
  figcaption > li a,
  figcaption > a,
  pre > li,
  pre > li a,
  pre > a, a > li,
  a > li a,
  a > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

em,
.u-textEm {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal; }

b,
strong,
.u-textBold {
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  margin-bottom: 9px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    b,
    strong,
    .u-textBold {
      font-size: 13px; } }
  @media (min-width: 1200px) {
    b,
    strong,
    .u-textBold {
      font-size: 15px; } }
  b > li,
  b > li a,
  b > a,
  strong > li,
  strong > li a,
  strong > a,
  .u-textBold > li,
  .u-textBold > li a,
  .u-textBold > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    b,
    strong,
    .u-textBold {
      line-height: 1.25; } }

blockquote,
.Blockquote {
  color: gray;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  font-size: 14px;
  margin-bottom: 18px; }
  @media (min-width: 544px) {
    blockquote,
    .Blockquote {
      font-size: 16px;
      margin-bottom: 24px; } }

.c-display {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: -0.005em;
  line-height: 1.1;
  margin-bottom: 0;
  text-align: left;
  font-size: 40px; }
  @media (min-width: 544px) {
    .c-display {
      font-size: 54px; } }
  @media (min-width: 1200px) {
    .c-display {
      font-size: 60px; } }
  .c-display > li,
  .c-display > li a,
  .c-display > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 24px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline {
      font-size: 54px; } }
  @media (min-width: 1200px) {
    .c-headline {
      font-size: 72px; } }
  .c-headline > li,
  .c-headline > li a,
  .c-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--md {
  color: #151515;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--md {
      font-size: 22px; } }
  @media (min-width: 1200px) {
    .c-headline--md {
      font-size: 27px; } }
  .c-headline--md > li,
  .c-headline--md > li a,
  .c-headline--md > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--sm {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--sm {
      font-size: 21px; } }
  @media (min-width: 1200px) {
    .c-headline--sm {
      font-size: 23px; } }
  .c-headline--sm > li,
  .c-headline--sm > li a,
  .c-headline--sm > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline--xs {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.1em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 10px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase; }
  @media (min-width: 544px) {
    .c-headline--xs {
      font-size: 12px; } }
  .c-headline--xs > li,
  .c-headline--xs > li a,
  .c-headline--xs > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }

.c-headline em {
  font-family: inherit;
  font-style: normal;
  font-weight: normal; }

h2 + h3 {
  margin-top: 4.8px; }

h3 + p {
  margin-top: 9.6px; }

@media (min-width: 992px) {
  span.u-lg-lineBreak {
    display: table !important;
    margin: auto; } }

@media (min-width: 544px) {
  .u-sm-lineBreak {
    display: table !important; } }

@media (max-width: 1079px) {
  span.u-lgDown-lineBreak {
    display: table !important;
    margin: auto; } }

@media (max-width: 767px) {
  span.u-smDown-lineBreak {
    display: table !important; } }

@media (max-width: 767px) {
  .u-smDown-hide {
    display: none !important; } }

.c-content--page,
.c-content--post {
  padding-bottom: 6.875vh !important; }

.c-content .FlexEmbed,
.c-postCell .FlexEmbed {
  background-color: #151515; }

.c-header {
  padding: 4.125vh 0;
  position: relative; }

@media (min-width: 544px) {
  .c-header-brand {
    margin-bottom: 4.125vh; } }

.c-header-logo > img {
  margin-bottom: 0;
  width: 150px; }
  @media (min-width: 544px) {
    .c-header-logo > img {
      width: 225px; } }
  @media (min-width: 1200px) {
    .c-header-logo > img {
      width: 260px; } }

.c-header-infoAlign {
  border-bottom: 1px solid #151515;
  padding-bottom: 7px;
  -webkit-transform: translate(0, 7px);
  -ms-transform: translate(0, 7px);
  transform: translate(0, 7px); }

.c-header-info {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  color: #151515; }
  @media (min-width: 544px) {
    .c-header-info {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-header-info {
      font-size: 14px; } }
  .c-header-info > li,
  .c-header-info > li a,
  .c-header-info > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-header-info {
      line-height: 1.25; } }

.c-postGrid > * {
  -webkit-flex-basis: -webkit-calc(100% / 2);
  -ms-flex-preferred-size: calc(100% / 2);
  flex-basis: calc(100% / 2); }
  @media (min-width: 544px) {
    .c-postGrid > * {
      -webkit-flex-basis: -webkit-calc(100% / 3);
      -ms-flex-preferred-size: calc(100% / 3);
      flex-basis: calc(100% / 3); } }
  @media (min-width: 1200px) {
    .c-postGrid > * {
      -webkit-flex-basis: -webkit-calc(100% / 5);
      -ms-flex-preferred-size: calc(100% / 5);
      flex-basis: calc(100% / 5); } }
  @media (min-width: 544px) {
    .three .c-postGrid > * {
      -webkit-flex-basis: -webkit-calc(100% / 3);
      -ms-flex-preferred-size: calc(100% / 3);
      flex-basis: calc(100% / 3); } }
  @media (min-width: 544px) {
    .four .c-postGrid > * {
      -webkit-flex-basis: -webkit-calc(100% / 4);
      -ms-flex-preferred-size: calc(100% / 4);
      flex-basis: calc(100% / 4); } }
  .c-post-info .c-postGrid > * {
    margin: 0;
    -webkit-flex-basis: -webkit-calc(100% / 4);
    -ms-flex-preferred-size: calc(100% / 4);
    flex-basis: calc(100% / 4); }
    @media (min-width: 544px) {
      .c-post-info .c-postGrid > * {
        -webkit-flex-basis: -webkit-calc(100% / 7);
        -ms-flex-preferred-size: calc(100% / 7);
        flex-basis: calc(100% / 7); } }
  @media (min-width: 544px) {
    .c-post-next .c-postGrid > * {
      -webkit-flex-basis: -webkit-calc(100% / 5);
      -ms-flex-preferred-size: calc(100% / 5);
      flex-basis: calc(100% / 5); } }

.c-postGrid .FlexEmbed-ratio {
  padding-bottom: 35vh; }
  @media (min-width: 544px) {
    .c-postGrid .FlexEmbed-ratio {
      padding-bottom: 25vh; } }
  @media (min-width: 768px) {
    .c-postGrid .FlexEmbed-ratio {
      padding-bottom: 50vh; } }
  .c-post-next .c-postGrid .FlexEmbed-ratio {
    padding-bottom: 20vh; }

a.c-postCell {
  display: block;
  width: 100%;
  border: 0;
  position: relative; }
  a.c-postCell:hover .o-linkBuriedTarget, a.c-postCell:active .o-linkBuriedTarget, a.c-postCell:focus .o-linkBuriedTarget {
    background-color: #151515; }
  a.c-postCell .FlexEmbed {
    margin: 1px 0.5px 0; }
  a.c-postCell:hover .c-postCell-image, a.c-postCell:active .c-postCell-image, a.c-postCell:focus .c-postCell-image {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
    background-color: rgba(21, 21, 21, 0.4);
    -webkit-filter: grayscale(0);
    filter: grayscale(0); }
  a.c-postCell:hover .c-postCell-subheadline, a.c-postCell:active .c-postCell-subheadline, a.c-postCell:focus .c-postCell-subheadline {
    -webkit-transition-property: all;
    -o-transition-property: all;
    transition-property: all;
    -webkit-transition-duration: 500ms;
    -o-transition-duration: 500ms;
    transition-duration: 500ms;
    -webkit-transition-timing-function: ease-out;
    -o-transition-timing-function: ease-out;
    transition-timing-function: ease-out;
    color: #FFF; }

.c-postCell-image {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-blend-mode: multiply;
  background-color: rgba(21, 21, 21, 0.8);
  transition-property: all;
  transition-duration: 500ms;
  transition-timing-function: ease-out;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  display: block;
  height: 100%;
  margin: 0 auto;
  width: 100%;
  content: none;
  -webkit-filter: grayscale(100%);
  filter: grayscale(100%); }

.c-postCell-headline,
.c-postCell-subheadline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  color: #FFF;
  padding: 0 15%;
  text-align: center; }
  @media (min-width: 544px) {
    .c-postCell-headline,
    .c-postCell-subheadline {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-postCell-headline,
    .c-postCell-subheadline {
      font-size: 14px; } }
  .c-postCell-headline > li,
  .c-postCell-headline > li a,
  .c-postCell-headline > a,
  .c-postCell-subheadline > li,
  .c-postCell-subheadline > li a,
  .c-postCell-subheadline > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-postCell-headline,
    .c-postCell-subheadline {
      line-height: 1.25; } }
  .c-postCell-headline:not(:first-child),
  .c-postCell-subheadline:not(:first-child) {
    margin-top: 6px; }

.c-postCell-headline {
  color: #FFF; }

.c-postCell-subheadline {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  color: #b3b3b3;
  display: block;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.FlexEmbed-ratio--hero {
  padding-bottom: 90%; }
  @media (min-width: 544px) {
    .FlexEmbed-ratio--hero {
      padding-bottom: 56.25%; } }
  @media (min-width: 1200px) {
    .FlexEmbed-ratio--hero {
      padding-bottom: 50%; } }

.FlexEmbed-ratio--heroHalf {
  padding-bottom: 90%; }
  @media (min-width: 544px) {
    .FlexEmbed-ratio--heroHalf {
      padding-bottom: 56.25%; } }
  @media (min-width: 1200px) {
    .FlexEmbed-ratio--heroHalf {
      padding-bottom: 25%; } }

.FlexEmbed-ratio--heroVideo {
  padding-bottom: 56.25%; }

.c-post-hgroup {
  margin: 4.125vh; }
  @media (min-width: 544px) {
    .c-post-hgroup {
      max-width: 80vw;
      margin: 0 auto; } }
  @media (min-width: 1200px) {
    .c-post-hgroup {
      max-width: 60vw; } }

.c-post-headline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.25em;
  line-height: 1.25;
  margin-bottom: 0;
  text-align: left;
  font-size: 24px;
  text-transform: uppercase;
  letter-spacing: 0.45em; }
  @media (min-width: 544px) {
    .c-post-headline {
      font-size: 54px; } }
  @media (min-width: 1200px) {
    .c-post-headline {
      font-size: 72px; } }
  .c-post-headline > li,
  .c-post-headline > li a,
  .c-post-headline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 544px) {
    .c-post-headline {
      width: 80%;
      margin-left: 0; } }
  @media (max-width: 767px) {
    .c-post-headline {
      margin-left: 1.5%; } }

.c-post-subheadline {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  margin-top: 12px; }
  @media (min-width: 544px) {
    .c-post-subheadline {
      font-size: 21px; } }
  @media (min-width: 1200px) {
    .c-post-subheadline {
      font-size: 23px; } }
  .c-post-subheadline > li,
  .c-post-subheadline > li a,
  .c-post-subheadline > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  .c-post-subheadline p {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 10px;
    margin-bottom: 9px;
    text-transform: uppercase;
    color: gray;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-post-subheadline p {
        font-size: 13px; } }
    @media (min-width: 1200px) {
      .c-post-subheadline p {
        font-size: 15px; } }
    .c-post-subheadline p > li,
    .c-post-subheadline p > li a,
    .c-post-subheadline p > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-post-subheadline p {
        line-height: 1.25; } }

.c-post-headline,
.c-post-subheadline {
  color: #FFF;
  text-align: center;
  width: 100%; }

@media (min-width: 1080px) {
  .c-post-info {
    margin: 0;
    position: absolute;
    -webkit-transform: translateY(-100%);
    -ms-transform: translateY(-100%);
    transform: translateY(-100%);
    width: 100%; } }

.c-post-article {
  margin-top: 5.5vh; }
  @media (min-width: 1200px) {
    .c-post-article {
      margin-top: 6.875vh; } }

.s-post p,
.s-post ul,
.s-post a {
  font-family: NoticiaText-Regular, Georgia, "Times New Roman", "Times", serif;
  letter-spacing: 0; }

.s-post a {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
  background-repeat: repeat-x;
  background-size: 1px 2px;
  background-position: 0 100%;
  color: currentColor;
  padding-bottom: 0;
  text-decoration: none; }
  .s-post a:hover, .s-post a:active, .s-post a:focus {
    background-image: none;
    color: inherit;
    text-decoration: none; }

.s-post strong {
  text-transform: uppercase; }

.s-post em {
  font-family: NoticiaText-Italic; }

.s-post h2:not(:first-child),
.s-post h3:not(:first-child) {
  margin-top: 4.125vh; }

.s-post h2:not(:last-child),
.s-post h3:not(:last-child) {
  margin-bottom: 18px; }

.s-post h2 {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .s-post h2 {
      font-size: 21px; } }
  @media (min-width: 1200px) {
    .s-post h2 {
      font-size: 23px; } }
  .s-post h2 > li,
  .s-post h2 > li a,
  .s-post h2 > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 544px) {
    .s-post h2 {
      width: 85%; } }

.s-post h3 {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .s-post h3 {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .s-post h3 {
      font-size: 14px; } }
  .s-post h3 > li,
  .s-post h3 > li a,
  .s-post h3 > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .s-post h3 {
      line-height: 1.25; } }

.s-post hr {
  border: 0;
  border-top: 1px solid #e8e8e8;
  margin: 36px 0; }

.s-post blockquote p {
  border-left: 1px solid #b3b3b3;
  color: gray;
  padding-left: 24px; }

.s-post figure {
  padding-bottom: 9px; }
  .s-post figure:not(:first-child) {
    margin-top: 4.125vh; }

@media (min-width: 544px) {
  .s-post {
    margin-right: 24px; } }

@media (min-width: 1200px) {
  .s-post {
    margin-right: 48px; } }

.s-post-list {
  -webkit-column-count: 2;
  column-count: 2; }

.s-post table {
  border-collapse: collapse;
  font-family: NoticiaText-Regular, Georgia, "Times New Roman", "Times", serif;
  letter-spacing: 0;
  margin: 4.125vh 0; }
  .s-post table thead tr {
    background-color: rgba(21, 21, 21, 0.15); }
  .s-post table th {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.125em;
    line-height: 1.5;
    margin-bottom: 0;
    text-align: left;
    font-size: 18px;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    text-transform: uppercase;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    padding: 12px; }
    @media (min-width: 544px) {
      .s-post table th {
        font-size: 21px; } }
    @media (min-width: 1200px) {
      .s-post table th {
        font-size: 23px; } }
    .s-post table th > li,
    .s-post table th > li a,
    .s-post table th > a {
      border-bottom: 0;
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
  .s-post table tbody tr:nth-child(odd) {
    background-color: rgba(21, 21, 21, 0.15); }
  .s-post table tbody tr:nth-child(even) {
    background-color: rgba(21, 21, 21, 0.09); }
  .s-post table td {
    padding: 12px;
    vertical-align: baseline; }
    .s-post table td:first-child {
      color: #151515;
      font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
      letter-spacing: 0.075em;
      line-height: 1.5;
      font-size: 10px;
      text-transform: uppercase;
      border-right: 1px solid #b3b3b3;
      line-height: 1.5;
      text-align: right; }
      @media (min-width: 544px) {
        .s-post table td:first-child {
          font-size: 12px; } }
      @media (min-width: 1200px) {
        .s-post table td:first-child {
          font-size: 14px; } }
      .s-post table td:first-child > li,
      .s-post table td:first-child > li a,
      .s-post table td:first-child > a {
        color: currentColor;
        font-family: inherit;
        font-size: inherit;
        margin: 0; }
      @media (max-width: 767px) {
        .s-post table td:first-child {
          line-height: 1.25; } }
      @media (min-width: 544px) {
        .s-post table td:first-child {
          width: -webkit-calc(100% / 3);
          width: calc(100% / 3); } }

.c-post-next {
  margin-top: 11vh; }
  .c-post-next h3 {
    margin-bottom: 2.75vh; }

.c-post-meta {
  background-color: #fdfdfd;
  margin: 0;
  padding: 1.1vh 1.375vh;
  border: 1px solid #151515; }
  @media (min-width: 544px) {
    .c-post-meta {
      padding: 0.6875vh 1.375vh 1.1vh; } }
  .c-post-meta + .c-post-meta {
    margin-left: -1px; }
  .c-post-meta:nth-child(n + 5) {
    border-top: 0; }
  .c-post-meta:nth-child(5) {
    margin-left: 0; }
  @media (min-width: 1080px) {
    .c-post-meta {
      border: 0;
      margin: 0; }
      .c-post-meta:not(:first-child) {
        border-left: 1px solid #151515; } }
  .c-post-meta span,
  .c-post-meta span a {
    color: #151515;
    font-family: Black, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.96;
    font-size: 10px;
    text-transform: uppercase; }
    @media (min-width: 544px) {
      .c-post-meta span,
      .c-post-meta span a {
        font-size: 11px; } }
    @media (min-width: 1200px) {
      .c-post-meta span,
      .c-post-meta span a {
        font-size: 12px; } }
    .c-post-meta span > li,
    .c-post-meta span > li a,
    .c-post-meta span > a,
    .c-post-meta span a > li,
    .c-post-meta span a > li a,
    .c-post-meta span a > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-post-meta span,
      .c-post-meta span a {
        line-height: 1.25; } }
  @media (max-width: 767px) {
    .c-post-meta span {
      display: block;
      margin-bottom: 0.6875vh; } }
  .c-post-meta p {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 10px;
    margin-bottom: 9px;
    text-transform: uppercase;
    margin-bottom: 0; }
    @media (min-width: 544px) {
      .c-post-meta p {
        font-size: 13px; } }
    @media (min-width: 1200px) {
      .c-post-meta p {
        font-size: 15px; } }
    .c-post-meta p > li,
    .c-post-meta p > li a,
    .c-post-meta p > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-post-meta p {
        line-height: 1.25; } }
  .c-post-meta p a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
    background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-repeat: repeat-x;
    background-size: 1px 2px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none;
    letter-spacing: 0.075em; }
    .c-post-meta p a:hover, .c-post-meta p a:active, .c-post-meta p a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }
  .c-post-meta--single {
    text-align: center; }

.c-post-share {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }
  .c-post-share:not(:first-child) {
    margin-top: 4.125vh; }
  @media (min-width: 544px) {
    .c-post-share {
      display: block; } }
  .c-post-share > a {
    background-image: none;
    color: #b3b3b3;
    display: inline-block;
    text-align: center; }
    .c-post-share > a:hover, .c-post-share > a:active, .c-post-share > a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }
    .c-post-share > a:not(:first-child) {
      margin-left: -1px; }
    @media (min-width: 544px) {
      .c-post-share > a {
        display: block; }
        .c-post-share > a:not(:first-child) {
          margin-left: 0;
          margin-top: -1px; } }
    .c-post-share > a:hover, .c-post-share > a:active, .c-post-share > a:focus {
      color: #b3b3b3; }

.c-post-endBlock {
  color: #151515;
  font-family: Black, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.96;
  font-size: 10px;
  text-transform: uppercase;
  border-top: 1px solid #e8e8e8;
  color: gray;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  margin-top: 22.5px;
  padding: 0.825vh 0 0; }
  @media (min-width: 544px) {
    .c-post-endBlock {
      font-size: 11px; } }
  @media (min-width: 1200px) {
    .c-post-endBlock {
      font-size: 12px; } }
  .c-post-endBlock > li,
  .c-post-endBlock > li a,
  .c-post-endBlock > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-post-endBlock {
      line-height: 1.25; } }
  .c-post-endBlock a {
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, rgba(38, 38, 38, 0)), color-stop(50%, rgba(38, 38, 38, 0.4)));
    background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: -o-linear-gradient(top, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-image: linear-gradient(to bottom, rgba(38, 38, 38, 0) 50%, rgba(38, 38, 38, 0.4) 50%);
    background-repeat: repeat-x;
    background-size: 1px 2px;
    background-position: 0 100%;
    color: currentColor;
    padding-bottom: 0;
    text-decoration: none; }
    .c-post-endBlock a:hover, .c-post-endBlock a:active, .c-post-endBlock a:focus {
      background-image: none;
      color: inherit;
      text-decoration: none; }

.c-post-supporters {
  margin: 9px 0 0;
  opacity: 0.5; }
  .c-post-supporters img {
    height: 40px;
    margin-bottom: 18px; }
    .c-post-supporters img:not(:first-child) {
      margin-left: 36px; }
    .c-post-supporters img:nth-child(4n) {
      margin-top: 9px; }
    @media (min-width: 992px) {
      .c-post-supporters img {
        margin-top: 0 !important; } }
    @media (min-width: 1200px) {
      .c-post-supporters img {
        height: 50px;
        width: auto; } }
    .c-post-supporters img.portrait {
      height: 60px;
      width: auto; }
      @media (min-width: 544px) {
        .c-post-supporters img.portrait {
          height: 80px; } }

.c-footer {
  padding: 5.5vh 0;
  position: relative; }
  @media (min-width: 1200px) {
    .c-footer {
      padding: 6.875vh 0; } }
  .c-footer p,
  .c-footer ul,
  .c-footer li,
  .c-footer span,
  .c-footer a {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 10px;
    text-transform: uppercase; }
    @media (min-width: 544px) {
      .c-footer p,
      .c-footer ul,
      .c-footer li,
      .c-footer span,
      .c-footer a {
        font-size: 12px; } }
    @media (min-width: 1200px) {
      .c-footer p,
      .c-footer ul,
      .c-footer li,
      .c-footer span,
      .c-footer a {
        font-size: 14px; } }
    .c-footer p > li,
    .c-footer p > li a,
    .c-footer p > a,
    .c-footer ul > li,
    .c-footer ul > li a,
    .c-footer ul > a,
    .c-footer li > li,
    .c-footer li > li a,
    .c-footer li > a,
    .c-footer span > li,
    .c-footer span > li a,
    .c-footer span > a,
    .c-footer a > li,
    .c-footer a > li a,
    .c-footer a > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-footer p,
      .c-footer ul,
      .c-footer li,
      .c-footer span,
      .c-footer a {
        line-height: 1.25; } }
  .c-footer ul {
    list-style-type: none;
    margin-left: 0; }
  .c-footer--rule {
    border-top: 1px solid #151515; }

@media (max-width: 767px) {
  .c-footer-block {
    border-top: 1px solid #e8e8e8;
    margin-top: 5.5vh;
    padding-top: 5.5vh; } }

.c-footer-logo > img {
  margin-top: 0;
  width: 150px; }
  @media (min-width: 544px) {
    .c-footer-logo > img {
      width: 180px; } }

@media (max-width: 767px) {
  .c-footer-hideMobileLogo {
    display: none; } }

.c-footer-infoDetails,
.c-footer-newsForm {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  @media (min-width: 992px) {
    .c-footer-infoDetails,
    .c-footer-newsForm {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
      -ms-flex-direction: row;
      flex-direction: row; } }

.c-footer-newsForm {
  margin-bottom: 4.125vh; }
  .c-footer-newsForm > form {
    width: 100%; }

.c-footer-infoDetails > * {
  margin-bottom: 0; }
  .c-footer-infoDetails > * li {
    line-height: 1.96; }
  .c-footer-infoDetails > *:not(:first-child) {
    margin-top: 1.375vh; }
  @media (min-width: 992px) {
    .c-footer-infoDetails > *:not(:first-child) {
      margin-top: 0;
      margin-left: 2.75vh; } }
  @media (min-width: 1200px) {
    .c-footer-infoDetails > *:not(:first-child) {
      margin-left: 4.125vh; } }

.u-footerRowItem {
  display: inline-block;
  line-height: 1.5 !important;
  margin-top: -webkit-calc( 1.375vh + 9px);
  margin-top: calc( 1.375vh + 9px); }

.u-footerBackTop {
  display: none;
  position: absolute;
  top: 2px;
  right: 24px; }
  @media (min-width: 544px) {
    .u-footerBackTop {
      display: block;
      right: 36px; } }

.c-footer .o-listClean {
  margin-bottom: 0; }

.c-footer-block p,
.c-footer-block ul,
.c-footer-block li,
.c-footer-block span,
.c-footer-block a,
.c-footer-info p,
.c-footer-info ul,
.c-footer-info li,
.c-footer-info span,
.c-footer-info a {
  color: #636363; }

.c-nav {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin: 0;
  padding: 0 36px; }
  @media (min-width: 992px) {
    .c-nav {
      padding: 0 4%; } }
  @media (min-width: 1440px) {
    .c-nav {
      padding: 0 12%; } }
  @media (min-width: 2000px) {
    .c-nav {
      padding: 0 18%; } }
  @media (max-width: 767px) {
    .c-nav {
      display: none; } }
  .c-footer .c-nav {
    margin-bottom: 6.875vh; }
    @media (max-width: 767px) {
      .c-footer .c-nav {
        border-top: 1px solid #e8e8e8;
        margin-top: 5.5vh;
        padding-top: 5.5vh; } }

.c-nav-item {
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  margin: 0; }
  .c-nav-item a {
    color: #151515;
    font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
    letter-spacing: 0.075em;
    line-height: 1.5;
    font-size: 10px;
    text-transform: uppercase;
    border-bottom: 1px solid transparent;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif !important;
    padding-bottom: 6px; }
    @media (min-width: 544px) {
      .c-nav-item a {
        font-size: 12px; } }
    @media (min-width: 1200px) {
      .c-nav-item a {
        font-size: 14px; } }
    .c-nav-item a > li,
    .c-nav-item a > li a,
    .c-nav-item a > a {
      color: currentColor;
      font-family: inherit;
      font-size: inherit;
      margin: 0; }
    @media (max-width: 767px) {
      .c-nav-item a {
        line-height: 1.25; } }
    @media (max-width: 767px) {
      .c-nav-item a {
        line-height: 36px;
        padding-bottom: 1px; } }
  .c-nav-item.is-active a {
    border-color: #151515; }
  .c-nav-item:hover a, .c-nav-item:active a, .c-nav-item:focus a {
    border-color: #151515;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (max-width: 767px) {
    .c-footer .c-nav-item:not(:first-child) {
      margin-top: 1.375vh; } }
  .c-footer .c-nav-item.is-active a {
    border-color: currentColor; }

.c-nav-trigger {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  border: 1px solid #e8e8e8;
  border-radius: 3px;
  line-height: 2 !important;
  padding: 6px 12px;
  position: absolute;
  right: 24px;
  top: 0; }
  @media (min-width: 544px) {
    .c-nav-trigger {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .c-nav-trigger {
      font-size: 14px; } }
  .c-nav-trigger > li,
  .c-nav-trigger > li a,
  .c-nav-trigger > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-nav-trigger {
      line-height: 1.25; } }
  .c-nav-trigger:before {
    content: '\2630';
    margin-right: 3px; }
  @media (min-width: 544px) {
    .c-nav-trigger {
      display: none; } }

.t-button {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-color: #151515;
  border-color: #151515;
  border-radius: 0;
  border-style: solid;
  border-width: 1px;
  padding: 6px 36px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  color: #fdfdfd;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px !important; }
  .t-button[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button:hover, .t-button:active, .t-button:focus {
    background-color: #151515;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .t-button {
      font-size: 14px; } }
  .t-button > li,
  .t-button > li a,
  .t-button > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .t-button {
      line-height: 1.25; } }
  .t-button:hover, .t-button:active, .t-button:focus {
    color: #fdfdfd;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.t-button--full {
  text-align: center;
  width: 100%; }

.t-button--lineHeight {
  line-height: 44px !important;
  padding-top: 0;
  padding-bottom: 0; }

.t-button--rev {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-color: #151515;
  border-color: #151515;
  border-radius: 0;
  border-style: solid;
  border-width: 1px;
  padding: 6px 36px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  color: #fdfdfd;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px !important;
  background-color: transparent;
  border-color: currentColor;
  border-width: 1px; }
  .t-button--rev[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    background-color: #151515;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--rev {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .t-button--rev {
      font-size: 14px; } }
  .t-button--rev > li,
  .t-button--rev > li a,
  .t-button--rev > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .t-button--rev {
      line-height: 1.25; } }
  .t-button--rev:hover, .t-button--rev:active, .t-button--rev:focus {
    color: #fdfdfd;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

/* uncss:ignore */
.t-button--primary {
  -webkit-transition-property: all;
  -o-transition-property: all;
  transition-property: all;
  -webkit-transition-duration: 500ms;
  -o-transition-duration: 500ms;
  transition-duration: 500ms;
  -webkit-transition-timing-function: ease-out;
  -o-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  background-color: #151515;
  border-color: #151515;
  border-radius: 0;
  border-style: solid;
  border-width: 1px;
  padding: 6px 36px;
  font-stretch: normal;
  font-style: normal;
  font-weight: normal;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  color: #fdfdfd;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  line-height: 44px !important;
  text-align: center;
  padding: 6px 24px;
  width: 100%; }
  .t-button--primary[disabled] {
    border-color: #b3b3b3;
    background-color: #b3b3b3;
    cursor: not-allowed;
    opacity: 0.4; }
  .t-button--primary:hover, .t-button--primary:active, .t-button--primary:focus {
    background-color: #151515;
    outline: none !important; }
  @media (min-width: 544px) {
    .t-button--primary {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    .t-button--primary {
      font-size: 14px; } }
  .t-button--primary > li,
  .t-button--primary > li a,
  .t-button--primary > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .t-button--primary {
      line-height: 1.25; } }
  .t-button--primary:hover, .t-button--primary:active, .t-button--primary:focus {
    color: #fdfdfd;
    font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }

.t-buttonClose {
  color: #151515;
  position: fixed;
  right: 12px;
  top: 12px;
  z-index: 1000;
  right: 24px;
  top: 31px; }
  .t-buttonClose:hover, .t-buttonClose:active, .t-buttonClose:focus {
    outline: none; }

input:hover, input:active, input:focus,
textarea:hover,
textarea:active,
textarea:focus,
select:hover,
select:active,
select:focus,
label:hover,
label:active,
label:focus {
  outline: 0; }

input[type="text"],
input[type="email"],
input[type="tel"],
input[type="date"],
input[type="password"],
.select select,
textarea {
  background: transparent;
  border: 0;
  display: inline-block;
  resize: none;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.5;
  font-size: 10px;
  text-transform: uppercase;
  background-color: #fdfdfd;
  border: 1px solid #dbdbdb;
  border-radius: 0;
  line-height: 44px !important;
  padding: 0 12px;
  -webkit-transition: all 500ms ease-out;
  -o-transition: all 500ms ease-out;
  transition: all 500ms ease-out; }
  @media (min-width: 544px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="date"],
    input[type="password"],
    .select select,
    textarea {
      font-size: 12px; } }
  @media (min-width: 1200px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="date"],
    input[type="password"],
    .select select,
    textarea {
      font-size: 14px; } }
  input[type="text"] > li,
  input[type="text"] > li a,
  input[type="text"] > a,
  input[type="email"] > li,
  input[type="email"] > li a,
  input[type="email"] > a,
  input[type="tel"] > li,
  input[type="tel"] > li a,
  input[type="tel"] > a,
  input[type="date"] > li,
  input[type="date"] > li a,
  input[type="date"] > a,
  input[type="password"] > li,
  input[type="password"] > li a,
  input[type="password"] > a,
  .select select > li,
  .select select > li a,
  .select select > a,
  textarea > li,
  textarea > li a,
  textarea > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="date"],
    input[type="password"],
    .select select,
    textarea {
      line-height: 1.25; } }
  input[type="text"]:-webkit-autofill,
  input[type="email"]:-webkit-autofill,
  input[type="tel"]:-webkit-autofill,
  input[type="date"]:-webkit-autofill,
  input[type="password"]:-webkit-autofill,
  .select select:-webkit-autofill,
  textarea:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 6.25rem #f7f7f7 inset;
    -webkit-text-fill-color: #151515;
    background-clip: padding-box; }
  input[type="text"]::-webkit-input-placeholder,
  input[type="email"]::-webkit-input-placeholder,
  input[type="tel"]::-webkit-input-placeholder,
  input[type="date"]::-webkit-input-placeholder,
  input[type="password"]::-webkit-input-placeholder,
  .select select::-webkit-input-placeholder,
  textarea::-webkit-input-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]:-moz-placeholder,
  input[type="email"]:-moz-placeholder,
  input[type="tel"]:-moz-placeholder,
  input[type="date"]:-moz-placeholder,
  input[type="password"]:-moz-placeholder,
  .select select:-moz-placeholder,
  textarea:-moz-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]::-moz-placeholder,
  input[type="email"]::-moz-placeholder,
  input[type="tel"]::-moz-placeholder,
  input[type="date"]::-moz-placeholder,
  input[type="password"]::-moz-placeholder,
  .select select::-moz-placeholder,
  textarea::-moz-placeholder {
    color: rgba(21, 21, 21, 0.7); }
  input[type="text"]:-ms-input-placeholder,
  input[type="email"]:-ms-input-placeholder,
  input[type="tel"]:-ms-input-placeholder,
  input[type="date"]:-ms-input-placeholder,
  input[type="password"]:-ms-input-placeholder,
  .select select:-ms-input-placeholder,
  textarea:-ms-input-placeholder {
    color: rgba(21, 21, 21, 0.7); }

textarea {
  line-height: 1.5; }

input[type="date"],
option[type="selected"] {
  color: rgba(21, 21, 21, 0.5); }

.c-formWrapper-note {
  color: #151515;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.125em;
  line-height: 1.5;
  margin-bottom: 0;
  text-align: left;
  font-size: 18px;
  font-family: Medium, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  text-transform: uppercase;
  font-family: Bold, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  background-color: rgba(21, 21, 21, 0.15);
  margin: 5.5vh 0 0;
  padding: 12px 24px; }
  @media (min-width: 544px) {
    .c-formWrapper-note {
      font-size: 21px; } }
  @media (min-width: 1200px) {
    .c-formWrapper-note {
      font-size: 23px; } }
  .c-formWrapper-note > li,
  .c-formWrapper-note > li a,
  .c-formWrapper-note > a {
    border-bottom: 0;
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (min-width: 992px) {
    .c-formWrapper-note {
      padding: 24px 20% 24px 48px; } }
  .c-formWrapper-note ~ .c-formWrapper {
    margin-top: 0;
    padding-top: 18px; }
    @media (min-width: 992px) {
      .c-formWrapper-note ~ .c-formWrapper {
        padding-top: 36px; } }

.c-formWrapper {
  background-color: rgba(21, 21, 21, 0.09);
  margin: 5.5vh 0 0;
  padding: 24px; }
  @media (min-width: 992px) {
    .c-formWrapper {
      padding: 48px; } }

.c-form {
  margin-top: 48px; }
  .c-formWrapper .c-form {
    margin-top: 0; }

.c-form-labelBlock {
  margin-top: 24px; }
  .c-form-labelBlock ~ .select,
  .c-form-labelBlock > input,
  .c-form-labelBlock > textarea {
    margin-top: 5px; }

.c-form label,
.c-form .label {
  color: #151515;
  font-family: Black, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif;
  letter-spacing: 0.075em;
  line-height: 1.96;
  font-size: 10px;
  text-transform: uppercase;
  color: #151515;
  display: block;
  font-family: Regular, -apple-system, BlinkMacSystemFont, "Roboto", "Helvetica Neue", "Droid Sans", "Segoe UI", "Fira Sans", "Ubuntu", sans-serif; }
  @media (min-width: 544px) {
    .c-form label,
    .c-form .label {
      font-size: 11px; } }
  @media (min-width: 1200px) {
    .c-form label,
    .c-form .label {
      font-size: 12px; } }
  .c-form label > li,
  .c-form label > li a,
  .c-form label > a,
  .c-form .label > li,
  .c-form .label > li a,
  .c-form .label > a {
    color: currentColor;
    font-family: inherit;
    font-size: inherit;
    margin: 0; }
  @media (max-width: 767px) {
    .c-form label,
    .c-form .label {
      line-height: 1.25; } }
  @media (max-width: 767px) {
    .c-form label,
    .c-form .label {
      line-height: 2; } }

.c-form .select {
  position: relative; }
  .c-form .select:after {
    position: absolute;
    top: 50%;
    right: 1.25rem;
    display: inline-block;
    content: "";
    width: 0;
    height: 0;
    margin-top: -.15rem;
    pointer-events: none;
    border-top: .35rem solid;
    border-right: .35rem solid transparent;
    border-bottom: .35rem solid transparent;
    border-left: .35rem solid transparent; }

.c-form .select select {
  color: #9a9a9a;
  cursor: pointer;
  outline: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none; }

.c-form-alert {
  color: #C60C0C;
  position: absolute;
  top: 66px;
  right: 0; }

/* uncss:ignore */
.c-icon {
  width: 179px;
  height: 70px;
  display: inline-block;
  fill: #151515;
  line-height: 1;
  position: relative;
  text-align: center;
  vertical-align: middle; }
  .c-icon:hover, .c-icon:active, .c-icon:focus {
    outline: 0; }

.c-shareWrapper {
  position: relative;
  height: 100%; }

.c-share {
  height: 100vh;
  position: fixed;
  right: 0;
  top: 0; }

.affix,
.affix-bottom {
  top: 48px;
  width: 268px; }

@media (min-width: 544px) {
  .affix {
    position: fixed; } }

@media (min-width: 544px) {
  .affix-bottom {
    position: absolute; } }

.u-marginNTD3 {
  margin-top: -8px !important; }

@media (max-width: 543px) {
  .u-smDown-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
    -webkit-order: -1 !important;
    -ms-flex-order: -1 !important;
    order: -1 !important; } }

.u-hide {
  display: none !important; }

@media (min-width: 544px) {
  .u-sm-hide {
    display: none !important; } }

@media (max-width: 767px) {
  .u-smDown-hide {
    display: none !important; } }

.u-posRelative {
  position: relative !important; }

.u-colorBase {
  color: #dbdbdb !important; }

.u-colorMuted {
  color: #b3b3b3 !important; }

.u-colorMedium {
  color: gray !important; }

.u-colorDark {
  color: #636363 !important; }

.u-colorBrand {
  color: #151515 !important; }

.u-colorNeutralDark {
  color: #dcd8d1 !important; }

.u-inlineBlockWrapper > * {
  display: inline-block; }

.u-blockSpaceT {
  margin-top: 5.5vh; }

.u-marginT0 {
  margin-top: 0 !important; }

.u-space0 {
  margin: 0 !important; }

.u-spaceT1of4 {
  margin-top: 6px; }

.u-spaceTD2 {
  margin-top: 12px !important; }

.u-spaceT {
  margin-top: 24px !important; }

.u-spaceT2 {
  margin-top: 48px !important; }

.u-spaceB {
  margin-bottom: 24px !important; }

.u-spaceB2 {
  margin-bottom: 48px !important; }

.u-spaceB4 {
  margin-bottom: 96px !important; }

@media (min-width: 544px) {
  .u-sm-spaceLN1 {
    margin-left: -1px; } }

@media (min-width: 544px) {
  .u-sm-spaceT {
    margin-top: 24px; } }

@media (min-width: 544px) {
  .u-sm-spaceT2 {
    margin-top: 48px; } }

@media (max-width: 543px) {
  .u-smDown-spaceR {
    margin-right: 24px; } }

@media (max-width: 543px) {
  .u-smDown-spaceTD2 {
    margin-top: 12px; } }

@media (max-width: 543px) {
  .u-smDown-spaceT {
    margin-top: 24px; } }

@media (max-width: 543px) {
  .u-smDown-spaceT2 {
    margin-top: 48px; } }

@media (max-width: 543px) {
  .u-smDown-blockR--3by4 {
    margin-right: 4.125vh; } }

@media (max-width: 543px) {
  .u-smDown-blockT--3by4 {
    margin-top: 4.125vh; } }

@media (max-width: 543px) {
  .u-smDown-blockB--3by4 {
    margin-bottom: 4.125vh; } }

.u-sm-blockB--1by4 {
  margin-bottom: 1.375vh; }

.u-sm-blockB--1by3 {
  margin-bottom: 1.83333vh; }

.u-sm-blockB--1by2 {
  margin-bottom: 2.75vh; }

.u-sm-blockT--1by4 {
  margin-top: 1.375vh; }

.u-sm-blockT--1by3 {
  margin-top: 1.83333vh; }

.u-sm-blockT--1by2 {
  margin-top: 2.75vh; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcGxpY2F0aW9uLmNzcyIsIl92ZW5kb3Iubm9ybWFsaXplLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYmFzZS5zY3NzIiwiX3Rvb2xzLmZ1bmN0aW9ucy5zY3NzIiwiX3Rvb2xzLnNldHRpbmdzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS1zaXplLnNjc3MiLCJfdG9vbHMubWl4aW5zLmJyZWFrcG9pbnRzLnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS1mbGV4Ym94LnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MudS10ZXh0LnNjc3MiLCJfdmVuZG9yLnN1aXRjc3MuYy1idXR0b24uc2NzcyIsIl92ZW5kb3Iuc3VpdGNzcy5jLWZsZXhlbWJlZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zY3NzIiwiX3ZlbmRvci5zdWl0Y3NzLmMtZ3JpZC5zZXR0aW5ncy5zY3NzIiwiX2Jhc2UucGFnZS5zY3NzIiwiX2Jhc2UubGluay5zY3NzIiwiX3Rvb2xzLm1peGlucy5zY3NzIiwiX2Jhc2UuaW1hZ2Uuc2NzcyIsIl9iYXNlLnR5cGUuc2NzcyIsIl9vYmplY3QucG9zaXRpb24uc2NzcyIsIl9vYmplY3QuY29udGFpbmVyLnNjc3MiLCJfb2JqZWN0LmdyaWQuc2NzcyIsIl9vYmplY3QuY3Vyc29yLnNjc3MiLCJfb2JqZWN0Lmxpc3Quc2NzcyIsIl9vYmplY3QubGluay5zY3NzIiwiX29iamVjdC5hbGlnbmVyLnNjc3MiLCJfb2JqZWN0LnJ1bGUuc2NzcyIsIl9vYmplY3QuaWNvbi5zY3NzIiwiX29iamVjdC5pbWFnZWJsZW5kLnNjc3MiLCJfb2JqZWN0LmNvdmVyaW1hZ2Uuc2NzcyIsIl9vYmplY3QuZml0aW1hZ2Uuc2NzcyIsIl90eXBlLnRleHQuc2NzcyIsIl90eXBlLmhlYWRsaW5lLnNjc3MiLCJfdHlwZS5oZWxwZXJzLnNjc3MiLCJfdHlwZS5saW5lYnJlYWsuc2NzcyIsIl9sYXlvdXQuYm9keS5zY3NzIiwiX2xheW91dC5oZWFkZXIuc2NzcyIsIl9sYXlvdXQucG9zdC5zY3NzIiwiX2xheW91dC51dGlscy5zY3NzIiwiX3ZlbmRvci5mYW1pbHkuc2NzcyIsIl9sYXlvdXQucG9zdC5tZXRhLnNjc3MiLCJfbGF5b3V0LmZvb3Rlci5zY3NzIiwiX2xheW91dC5uYXYuc2NzcyIsIl9jb21wb25lbnQuYnV0dG9uLnNjc3MiLCJfY29tcG9uZW50LmZvcm0uc2NzcyIsIl9jb21wb25lbnQuaWNvbi5zY3NzIiwiX2NvbXBvbmVudC5zaGFyZS5zY3NzIiwiX2NvbXBvbmVudC5hZmZpeC5zY3NzIiwiX3V0aWxpdGllcy5oZWxwZXJzLmJhc2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUI7QUNRakIsNEVBQTRFO0FBRTVFOzs7R0FHRztBQUVIO0VBQ0Usd0JBQXVCO0VBQUcsT0FBTztFQUNqQywyQkFBMEI7RUFBRyxPQUFPO0VBQ3BDLCtCQUE4QjtFQUFHLE9BQU8sRUFDekM7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLFVBQVMsRUFDVjs7QUFFRDtnRkFDZ0Y7QUFFaEY7Ozs7R0FJRztBQUVIOzs7Ozs7Ozs7Ozs7RUFXVSxPQUFPO0VBQ2YsZUFBYyxFQUNmOztBQUVEOztHQUVHO0FBRUg7Ozs7RUFJRSxzQkFBcUIsRUFDdEI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLGNBQWE7RUFDYixVQUFTLEVBQ1Y7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLHlCQUF3QixFQUN6Qjs7QUFFRDs7O0dBR0c7QUFFSDs7RUFFRSxjQUFhLEVBQ2Q7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVIO0VBQ0UsOEJBQTZCO0VBQUcsT0FBTztFQUN2QyxzQ0FBcUM7RUFBRyxPQUFPLEVBQ2hEOztBQUVEOzs7R0FHRztBQUVIOztFQUVFLGlCQUFnQixFQUNqQjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7RUFDRSxvQkFBbUI7RUFBRyxPQUFPO0VBQzdCLDJCQUEwQjtFQUFHLE9BQU87RUFDcEMsa0NBQWlDO0VBQUcsT0FBTyxFQUM1Qzs7QUFFRDs7R0FFRztB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O0VBekdDLGUxQkx1QztFMEJNdkMsaUoxQmtMa0o7RTBCakxsSix3QkFnQytCO0VBL0IvQixpQjFCcUJtQztFMEJsQm5DLGdCMUJ3RTJCLEUwQjJCYTtFeEJ0RnZDO0l3QnNGRjtNQWxHb0MsZ0IxQndFUixFMEIwQmEsRUFBQTtFeEJ0RnZDO0l3QnNGRjtNQWpHb0MsZ0IxQndFUixFMEJ5QmEsRUFBQTtFQTlGdEM7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUF3RkY7RUExR0MsZTFCTHVDO0UwQk12QyxpSjFCa0xrSjtFMEJqTGxKLHlCQXNDb0M7RUFyQ3BDLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQmtGMkIsRTBCa0JhO0V4QnZGdkM7SXdCdUZGO01BbkdvQyxnQjFCa0ZSLEUwQmlCYSxFQUFBO0V4QnZGdkM7SXdCdUZGO01BbEdvQyxnQjFCa0ZSLEUwQmdCYSxFQUFBO0VBL0Z0Qzs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQXlGRjtFQTNHQyxlMUJMdUM7RTBCTXZDLGlKMUJrTGtKO0UwQmpMbEoseUJBc0NvQztFQXJDcEMsaUIxQnFCbUM7RTBCbEJuQyxnQjFCa0YyQjtFMEJtQlcsWTNCb0JLLEUyQnBCcUI7RXhCeEYvRDtJd0J3RkY7TUFwR29DLGdCMUJrRlIsRTBCa0JxQyxFQUFBO0V4QnhGL0Q7SXdCd0ZGO01BbkdvQyxnQjFCa0ZSLEUwQmlCcUMsRUFBQTtFQWhHOUQ7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUEwRkY7RUE1R0MsZTFCTHVDO0UwQk12QyxpSjFCa0xrSjtFMEJqTGxKLHlCQXNDb0M7RUFyQ3BDLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQmtGMkI7RTBCb0JXLFkzQm1CSztFMkJuQm1CLG9CM0JzQ2xDLEUyQnRDK0Q7RXhCekYxRjtJd0J5RkY7TUFyR29DLGdCMUJrRlIsRTBCbUJnRSxFQUFBO0V4QnpGMUY7SXdCeUZGO01BcEdvQyxnQjFCa0ZSLEUwQmtCZ0UsRUFBQTtFQWpHekY7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUE0RkY7RUE5R0MsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QixFQW9CWTtFeEIzRnZDO0l3QjJGRjtNQXZHb0MsZ0IxQndFUixFMEIrQmEsRUFBQTtFeEIzRnZDO0l3QjJGRjtNQXRHb0MsZ0IxQndFUixFMEI4QmEsRUFBQTtFQW5HdEM7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDtFeEJjQTtJd0I4RUY7TUFqQlEsa0JBQWlCLEVBaUJnQixFQUFBOztBQUt6QztFQW5IQyxlMUJMdUM7RTBCTXZDLGlKMUJrTGtKO0UwQmpMbEosd0JBZ0MrQjtFQS9CL0IsaUIxQnFCbUM7RTBCbEJuQyxnQjFCd0UyQjtFMEJ1QzNCLHVCQUFpQyxFQWVqQztFeEJqSEM7SXdCZ0dGO01BNUdvQyxnQjFCd0VSLEUwQnFEM0IsRUFBQTtFeEJqSEM7SXdCZ0dGO01BM0dvQyxnQjFCd0VSLEUwQm9EM0IsRUFBQTtFQXpIRTs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUO0VBaUdGO0lBTUUscUNBQW9DLEVBS3BDO0lBWEY7TUFTRyw4QkFBd0MsRWZyRXhDO0VUcENEO0l3QmdHRjtNQWNFLGFBQVksRUFHYixFQUFBOztBQU9EO0VBM0lDLGUxQkx1QztFMEJNdkMsaUoxQmtMa0o7RTBCakxsSix5QkFzQ29DO0VBckNwQyxpQjFCcUJtQztFMEJsQm5DLGdCMUJrRjJCLEUwQm1EZTtFeEJ4SHpDO0l3QndIRjtNQXBJb0MsZ0IxQmtGUixFMEJrRGUsRUFBQTtFeEJ4SHpDO0l3QndIRjtNQW5Jb0MsZ0IxQmtGUixFMEJpRGUsRUFBQTtFQWhJeEM7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUEySEY7RVIvSEMsc0JBQXFCO0VBQ3JCLGVBQWM7RUFDZCxnQkFBZTtFUStIZixVQUFTLEVBZVQ7RUFqQkQ7SUFLRSwyQzFCN0lzQztJMEI4SXRDLGFBQVk7SUFDWixlQUFjO0lBQ2QsWUFBVztJQUNYLHNCM0JKMkI7STJCSzNCLFlBQVcsRUFDWDtFQVhGO0lBN0lDLGUxQkx1QztJMEJNdkMsaUoxQmtMa0o7STBCakxsSix5QkFzQ29DO0lBckNwQyxpQjFCcUJtQztJMEJsQm5DLGdCMUJrRjJCO0kwQm9FMUIsaUJBQWdCLEVBQ2hCO0l4QjFJQTtNd0IwSEY7UUF0SW9DLGdCMUJrRlIsRTBCb0UxQixFQUFBO0l4QjFJQTtNd0IwSEY7UUFySW9DLGdCMUJrRlIsRTBCbUUxQixFQUFBO0lBbEpDOzs7TUFHRCxvQkFBbUI7TUFDbkIscUJBQW9CO01BQ3BCLG1CQUFrQjtNQUNsQixVQUFTLEVBQ1Q7O0FBcUpGO0VBdktDLGUxQkx1QztFMEJNdkMsaUoxQmtMa0o7RTBCakxsSix3QkFnQytCO0VBL0IvQixpQjFCcUJtQztFMEJsQm5DLGdCMUJ3RTJCO0UwQjJGM0Isc0JBQXFCO0VBQ3JCLFkzQnhCNEIsRTJCeUI1QjtFeEJ4SkM7SXdCb0pGO01BaEtvQyxnQjFCd0VSLEUwQjRGM0IsRUFBQTtFeEJ4SkM7SXdCb0pGO01BL0pvQyxnQjFCd0VSLEUwQjJGM0IsRUFBQTtFQWhLRTs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQTJKRjtFQTdLQyxlMUJMdUM7RTBCTXZDLGlKMUJrTGtKO0UwQmpMbEosd0JBZ0MrQjtFQS9CL0IsaUIxQnFCbUM7RTBCbEJuQyxnQjFCd0UyQjtFa0JoRTNCLHNCQUFxQjtFQUNyQixlQUFjO0VBQ2QsZ0JBQWU7RVFnS2YsWTNCakQyQztFMkJrRDNDLG9CM0IvQjRCLEUyQmdDNUI7RXhCL0pDO0l3QjBKRjtNQXRLb0MsZ0IxQndFUixFMEJtRzNCLEVBQUE7RXhCL0pDO0l3QjBKRjtNQXJLb0MsZ0IxQndFUixFMEJrRzNCLEVBQUE7RUF2S0U7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUFrS0Y7RUFDQywwQkFBK0I7RUFDL0IsK0JBQTZDLEVBSzdDO0VBUEQ7SUFLRSx5QkFBd0IsRUFDeEI7O0FBUUY7RUFBcUIsMEpBQXdDLEVBQUk7O0FBQ2pFO0VBQXFCLDRKQUEwQyxFQUFJOztBQUNuRTtFQUFxQiwySkFBeUMsRUFBSTs7QUFjbEU7Ozs7O0VBbE5DLGUxQkx1QztFMEJNdkMsaUoxQmtMa0o7RTBCakxsSix5QkFzQ29DO0VBckNwQyxpQjFCcUJtQztFMEJsQm5DLGdCMUJrRjJCLEUwQmdJM0I7RXhCck1DO0l3QitMRjs7Ozs7TUEzTW9DLGdCMUJrRlIsRTBCK0gzQixFQUFBO0V4QnJNQztJd0IrTEY7Ozs7O01BMU1vQyxnQjFCa0ZSLEUwQjhIM0IsRUFBQTtFQTdNRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQXdNRjs7RWY3T0kscUJBQW9CO0VBQ3ZCLG1CQUFrQjtFQUNsQixvQkFBbUIsRWUrT25COztBQUVEOzs7RWZuUEkscUJBQW9CO0VBQ3ZCLG1CQUFrQjtFQUNsQixvQkFBbUI7RWVpQm5CLGUxQkx1QztFMEJNdkMsZ0oxQmtMa0o7RTBCakxsSix3QkF5RG1DO0VBeERuQyxpQjFCcUJtQztFMEJsQm5DLGdCMUI2RTJCO0UwQnRCeEIsbUJBQW9DO0VBQ3BDLDBCQUF5QixFQXdLNUI7RXhCbk5DO0l3QjZNRjs7O01Bek5vQyxnQjFCNkVSLEUwQmtKM0IsRUFBQTtFeEJuTkM7SXdCNk1GOzs7TUF4Tm9DLGdCMUI2RVIsRTBCaUozQixFQUFBO0VBM05FOzs7Ozs7Ozs7SUFHRCxvQkFBbUI7SUFDbkIscUJBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixVQUFTLEVBQ1Q7RXhCY0E7SXdCZ01GOzs7TUEvSlEsa0JBQWlCLEVBcUt4QixFQUFBOztBQUVEOztFQUlDLFkzQjdHMkM7RTJCOEczQyxpSjFCMURrSjtFMEIyRGxKLGdCMUJ0SjJCO0UwQnVKM0Isb0IzQjdGNEIsRTJCbUc1QjtFeEJsT0M7SXdCcU5GOztNQVVFLGdCMUJ6SjBCO00wQjBKMUIsb0IzQmpHMkIsRTJCbUc1QixFQUFBOztBQ2hMRDtFQWhGQyxlM0JNdUM7RTJCTHZDLGdKM0I2TGtKO0UyQjVMbEoseUJBNkJvQztFQTVCcEMsaUJBNkI0QjtFQTFCNUIsaUJBVnFCO0VBV3JCLGlCQUFnQjtFQUdoQixnQjNCa0gyQixFMkI1Q2dCO0V6QmxEMUM7SXlCa0RGO01BckVvQyxnQjNCa0hSLEUyQjdDZ0IsRUFBQTtFekJsRDFDO0l5QmtERjtNQXBFb0MsZ0IzQmtIUixFMkI5Q2dCLEVBQUE7RUFqRXpDOzs7SUFHRCxpQkFBZ0I7SUFDaEIsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQTBERjtFQWpGQyxlM0JNdUM7RTJCTHZDLGdKM0I2TGtKO0UyQjVMbEosdUJBc0NrQztFQXJDbEMsa0JBUnNCO0VBV3RCLGlCQVZxQjtFQVdyQixpQkFBZ0I7RUFHaEIsZ0IzQjZHMkI7RTJCN0V4QiwwQkFBeUIsRUF1Q2dCO0V6Qm5EM0M7SXlCbURGO01BdEVvQyxnQjNCNkdSLEUyQnZDaUIsRUFBQTtFekJuRDNDO0l5Qm1ERjtNQXJFb0MsZ0IzQjZHUixFMkJ4Q2lCLEVBQUE7RUFsRTFDOzs7SUFHRCxpQkFBZ0I7SUFDaEIsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQTJERjtFQWxGQyxlM0JNdUM7RTJCTHZDLGlKM0I2TGtKO0UyQjVMbEosdUJBK0NrQztFQTlDbEMsa0JBUnNCO0VBV3RCLGlCQVZxQjtFQVdyQixpQkFBZ0I7RUFHaEIsZ0IzQm1HMkI7RTJCMUR4QiwwQkFBeUIsRUErQmtCO0V6QnBEN0M7SXlCb0RGO01BdkVvQyxnQjNCbUdSLEUyQjVCbUIsRUFBQTtFekJwRDdDO0l5Qm9ERjtNQXRFb0MsZ0IzQm1HUixFMkI3Qm1CLEVBQUE7RUFuRTVDOzs7SUFHRCxpQkFBZ0I7SUFDaEIsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQTRERjtFQW5GQyxlM0JNdUM7RTJCTHZDLGdKM0I2TGtKO0UyQjVMbEosd0JBdURtQztFQXREbkMsaUJBdUR5QjtFQXBEekIsaUJBVnFCO0VBV3JCLGlCQUFnQjtFQUdoQixnQjNCd0cyQjtFMkJ0RHhCLGdKM0JrSStJO0UyQmpJL0ksMEJBQXlCLEVBc0JrQjtFekJyRDdDO0l5QnFERjtNQXhFb0MsZ0IzQndHUixFMkJoQ21CLEVBQUE7RXpCckQ3QztJeUJxREY7TUF2RW9DLGdCM0J3R1IsRTJCakNtQixFQUFBO0VBcEU1Qzs7O0lBR0QsaUJBQWdCO0lBQ2hCLG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDs7QUE2REY7RUFwRkMsZTNCTXVDO0UyQkx2QyxnSjNCNkxrSjtFMkI1TGxKLHNCQWlFaUM7RUFoRWpDLGtCQVJzQjtFQVd0QixpQkFWcUI7RUFXckIsaUJBQWdCO0VBR2hCLGdCM0IrRTJCO0UyQnBCeEIsZ0ozQnlIK0k7RTJCeEgvSSwwQkFBeUIsRUFja0I7RXpCdEQ3QztJeUJzREY7TUF6RW9DLGdCM0IrRVIsRTJCTm1CLEVBQUE7RUFyRTVDOzs7SUFHRCxpQkFBZ0I7SUFDaEIsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUOztBQWdFRjtFQUNDLHFCQUFvQjtFQUNwQixtQkFBa0I7RUFDbEIsb0JBQW1CLEVBQ25COztBQ3JERDtFQUFXLGtCN0J1SGtCLEU2QnZIUTs7QUFDckM7RUFBVyxrQjdCc0hrQixFNkJ0SFE7O0ExQlRuQztFMkJyQ0U7SUFDSSwwQkFBeUI7SUFDekIsYUFBWSxFQUNmLEVBQUE7O0EzQmtDSDtFMkI5QkU7SUFDSSwwQkFBeUIsRUFFNUIsRUFBQTs7QTNCd0NIO0UyQmxDRTtJQUNJLDBCQUF5QjtJQUN6QixhQUFZLEVBQ2YsRUFBQTs7QTNCK0JIO0UyQjNCRTtJQUNJLDBCQUF5QixFQUU1QixFQUFBOztBM0J3Qkg7RTJCcEJFO0lBQ0kseUJBQXdCLEVBQzNCLEVBQUE7O0FDNUJMOztFQUVJLG1DQUE2QyxFQUVoRDs7QUFXRDs7RUFFSSwwQjlCUm9DLEU4QlN2Qzs7QUMxQkQ7RUFDSSxtQkFBK0I7RUFDbEMsbUJBQWtCLEVBS2xCOztBN0JrQ0M7RTZCaENGO0lBRVEsdUJBQWlDLEVBR3hDLEVBQUE7O0FBRUQ7RUFDSSxpQkFBZ0I7RUFDaEIsYUFBWSxFQUlmO0U3Qm1CQztJNkJ6QkY7TUFJdUMsYUFBWSxFQUVsRCxFQUFBO0U3Qm1CQztJNkJ6QkY7TUFLdUMsYUFBWSxFQUNsRCxFQUFBOztBQUdEO0VBQ0ksaUMvQk1vQztFK0JKcEMsb0JBQW1CO0VBQ25CLHFDQUE0QjtFQUE1QixpQ0FBNEI7RUFBNUIsNkJBQTRCLEVBQy9COztBQUVEO0VMVkMsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QjtFSzlFekIsZS9CRm9DLEUrQkt2QztFN0JJQztJNkJURjtNTEhvQyxnQjFCd0VSLEUrQmhFM0IsRUFBQTtFN0JJQztJNkJURjtNTEZvQyxnQjFCd0VSLEUrQmpFM0IsRUFBQTtFTEpFOzs7SUFHRCxvQkFBbUI7SUFDbkIscUJBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixVQUFTLEVBQ1Q7RXhCY0E7STZCdEJGO01MbUZRLGtCQUFpQixFSzlFeEIsRUFBQTs7QUMxQkQ7RUFDSSwyQ0FBMEI7RUFBMUIsd0NBQTBCO0VBQTFCLDJCQUEwQixFQXNCN0I7RTlCT0M7SThCOUJGO01BRXVDLDJDQUEwQjtNQUExQix3Q0FBMEI7TUFBMUIsMkJBQTBCLEVBcUJoRSxFQUFBO0U5Qk9DO0k4QjlCRjtNQUd1QywyQ0FBMEI7TUFBMUIsd0NBQTBCO01BQTFCLDJCQUEwQixFQW9CaEUsRUFBQTtFOUJPQztJUzhERDtNcUJwRnVFLDJDQUEwQjtNQUExQix3Q0FBMEI7TUFBMUIsMkJBQTBCLEVyQnNGaEcsRUFBQTtFVGhFQTtJUzhERDtNcUJuRnNFLDJDQUEwQjtNQUExQix3Q0FBMEI7TUFBMUIsMkJBQTBCLEVyQnFGL0YsRUFBQTtFQUZEO0lxQi9FTyxVQUFTO0lBQ1QsMkNBQTBCO0lBQTFCLHdDQUEwQjtJQUExQiwyQkFBMEIsRXJCZ0ZoQztJVGhFQTtNUzhERDtRcUI1RTBDLDJDQUEwQjtRQUExQix3Q0FBMEI7UUFBMUIsMkJBQTBCLEVyQjhFbkUsRUFBQTtFVGhFQTtJUzhERDtNcUJ2RTBDLDJDQUEwQjtNQUExQix3Q0FBMEI7TUFBMUIsMkJBQTBCLEVyQnlFbkUsRUFBQTs7QXFCNURGO0VBQ0kscUJBQW9CLEVBUXZCO0U5QmJDO0k4QklGO01BRXVDLHFCQUFvQixFQU8xRCxFQUFBO0U5QmJDO0k4QklGO01BR3VDLHFCQUFvQixFQU0xRCxFQUFBO0VyQmlEQTtJcUJwRE8scUJBQW9CLEVyQnNEMUI7O0FxQnRDRjtFYjNDQyxlQUFjO0VBQ2QsWUFBVztFYTRDUixVQUFTO0VBRVQsbUJBQWtCLEVBbUJyQjtFYjlEQztJQUNDLDBCbkJHcUMsRW1CRnJDO0VhcUNIO0lBUVEsb0JBQW1CLEVBQ3RCO0VBVEw7SXJCaURDLGlDQUZjO0lBRWQsNEJBRmM7SUFFZCx5QkFGYztJQUdkLG1DWHFEMkI7SVdyRDNCLDhCWHFEMkI7SVdyRDNCLDJCWHFEMkI7SVdwRDNCLDZDWDBEOEI7SVcxRDlCLHdDWDBEOEI7SVcxRDlCLHFDWDBEOEI7SWdDL0ZuQix3Q2hDaEU0QjtJZ0NpRTVCLDZCQUFvQjtJQUFwQixxQkFBb0IsRUFDdkI7RUFoQlQ7SXJCaURDLGlDQUZjO0lBRWQsNEJBRmM7SUFFZCx5QkFGYztJQUdkLG1DWHFEMkI7SVdyRDNCLDhCWHFEMkI7SVdyRDNCLDJCWHFEMkI7SVdwRDNCLDZDWDBEOEI7SVcxRDlCLHdDWDBEOEI7SVcxRDlCLHFDWDBEOEI7SWdDekZuQixZaEM1RXlCLEVnQzZFNUI7O0FBSVQ7RXJCd0JDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DWHFEMkI7RVdyRDNCLDhCWHFEMkI7RVdyRDNCLDJCWHFEMkI7RVdwRDNCLDZDWDBEOEI7RVcxRDlCLHdDWDBEOEI7RVcxRDlCLHFDWDBEOEI7RXVCdkszQixnQ0FIZ0I7RUFJaEIsd0N2Qk9vQztFV21HdkMseUJBRmM7RUFHZCwyQlhxRDJCO0VXcEQzQixxQ1gwRDhCO0V3QjdLOUIsNkJBQTRCO0VBQzVCLDZCQUE0QjtFQUM1Qix1QkFBc0I7RUFDdEIsZUFBYztFQUNkLGFBQVk7RUFFWixlQUFjO0VBRWQsWUFBVztFQWFWLGNBQWE7RVF3RVgsZ0NBQXVCO0VBQXZCLHdCQUF1QixFQUMxQjs7QUFFRDs7RU43RUMsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QjtFTVZ6QixZaEMzRmlDO0VnQzRGakMsZUFBYztFQUNkLG1CQUFrQixFQUtyQjtFOUJwRUM7SThCMERGOztNTnRFb0MsZ0IxQndFUixFZ0NRM0IsRUFBQTtFOUJwRUM7SThCMERGOztNTnJFb0MsZ0IxQndFUixFZ0NPM0IsRUFBQTtFTjVFRTs7Ozs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUO0V4QmNBO0k4QjZDRjs7TU5nQlEsa0JBQWlCLEVNTnhCLEVBQUE7RUFWRDs7SUFRUSxnQmpDNkRxQixFaUM1RHhCOztBQUdMO0VBQ0ksWWhDckdpQyxFZ0NzR3BDOztBQUVEO0VyQkNDLGlDQUZjO0VBRWQsNEJBRmM7RUFFZCx5QkFGYztFQUdkLG1DWHFEMkI7RVdyRDNCLDhCWHFEMkI7RVdyRDNCLDJCWHFEMkI7RVdwRDNCLDZDWDBEOEI7RVcxRDlCLHdDWDBEOEI7RVcxRDlCLHFDWDBEOEI7RWdDM0QzQixlakNnQ3dDO0VpQy9CeEMsZUFBYztFQUNkLGlKaENrRitJ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VEY7UVhIb0MsZ0IxQndFUixFcUNyRHZCLEVBQUE7SW5DUEg7TW1DVEY7UVhGb0MsZ0IxQndFUixFcUN0RHZCLEVBQUE7SVhmRjs7O01BR0Qsb0JBQW1CO01BQ25CLHFCQUFvQjtNQUNwQixtQkFBa0I7TUFDbEIsVUFBUyxFQUNUO0l4QmNBO01tQ3RCRjtRWG1GUSxrQkFBaUIsRVduRXBCLEVBQUE7SW5DTUg7TW1DdEJGO1FBYVksa0JyQzJHZ0I7UXFDMUdoQixvQkFBbUIsRUFFMUIsRUFBQTtFQWhCTDtJQW9CWSxzQnJDbkM0QixFcUNvQy9CO0VBckJUO0lBMEJZLHNCckN6QzRCO0lxQzBDNUIsOElyQzhJdUksRXFDN0kxSTtFbkNOUDtJU2lERDtNMEJyQ2lDLG9CRG5FRSxFQ21FOEIsRUFBQTtFMUJxQ2pFO0kwQmxDdUIsMkJBQTBCLEVBQUs7O0FBS3ZEO0VYcERDLGUxQkx1QztFMEJNdkMsZ0oxQmtMa0o7RTBCakxsSix3QkFzRm1DO0VBckZuQyxpQjFCcUJtQztFMEJsQm5DLGdCMUJ3RTJCO0UwQll4QiwwQkFBeUI7RVdwQ3pCLDBCdEN5RXdDO0VzQ3hFeEMsbUJBQWtCO0VBRWxCLDBCQUF5QjtFQUN6QixrQkFBaUI7RUFDakIsbUJBQWtCO0VBQ2xCLFl0Q3NGeUI7RXNDckZ6QixPQUFNLEVBVVQ7RW5DcERDO0ltQ2lDRjtNWDdDb0MsZ0IxQndFUixFcUNSM0IsRUFBQTtFbkNwREM7SW1DaUNGO01YNUNvQyxnQjFCd0VSLEVxQ1QzQixFQUFBO0VYNURFOzs7SUFHRCxvQkFBbUI7SUFDbkIscUJBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixVQUFTLEVBQ1Q7RXhCY0E7SW1Db0JGO01YeUNRLGtCQUFpQixFV3RCeEIsRUFBQTtFQW5CRDtJQVlRLGlCQUFnQjtJQUNoQixrQkFBaUIsRUFDcEI7RW5DL0NIO0ltQ2lDRjtNQWlCUSxjQUFhLEVBRXBCLEVBQUE7O0FDNUJEO0UzQm1EQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1hxRDJCO0VXckQzQiw4QlhxRDJCO0VXckQzQiwyQlhxRDJCO0VXcEQzQiw2Q1gwRDhCO0VXMUQ5Qix3Q1gwRDhCO0VXMUQ5QixxQ1gwRDhCO0VzQy9LM0IsMEJ0Q2dCb0M7RXNDZnBDLHNCdENlb0M7RXNDZHBDLGlCQUFnQjtFQUNoQixvQkFBbUI7RUFDbkIsa0JBQWlCO0VBRWpCLGtCdkNpS3lCO0VZckt6QixxQkFBb0I7RUFDdkIsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFZWlCbkIsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QjtFWXhFekIsZXRDYm9DO0VzQ2NwQyw4SXRDZ0srSTtFc0MvSi9JLDZCQUF1RCxFQXlCMUQ7RUE5Q0c7SUFDSSxzQnZDK0hvQztJdUM5SHBDLDBCdkM4SG9DO0l1QzdIcEMsb0JBQW1CO0lBQ25CLGFBQVksRUFDZjtFM0IrQ0g7STJCNUNNLDBCdENHZ0M7SXNDRmhDLHlCQUF3QixFM0IrQzdCO0VUcENEO0lvQ3dCRjtNWnBDb0MsZ0IxQndFUixFc0NsQzNCLEVBQUE7RXBDMUJDO0lvQ3dCRjtNWm5Db0MsZ0IxQndFUixFc0NuQzNCLEVBQUE7RVpsQ0U7OztJQUdELG9CQUFtQjtJQUNuQixxQkFBb0I7SUFDcEIsbUJBQWtCO0lBQ2xCLFVBQVMsRUFDVDtFeEJjQTtJb0NXRjtNWmtEUSxrQkFBaUIsRVloRHhCLEVBQUE7RTNCTUM7STJCdEJNLGV0Q3hCZ0M7SXNDeUJoQyw4SXRDcUoySSxFVzVIaEo7O0EyQlJIO0VBSUksbUJBQWtCO0VBQ2xCLFlBQVcsRUFDZDs7QUFFRDtFQUNJLDZCQUF1RDtFQUN2RCxlQUFjO0VBQ2Qsa0JBQWlCLEVBQ3BCOztBQUVEO0UzQmlDQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1hxRDJCO0VXckQzQiw4QlhxRDJCO0VXckQzQiwyQlhxRDJCO0VXcEQzQiw2Q1gwRDhCO0VXMUQ5Qix3Q1gwRDhCO0VXMUQ5QixxQ1gwRDhCO0VzQy9LM0IsMEJ0Q2dCb0M7RXNDZnBDLHNCdENlb0M7RXNDZHBDLGlCQUFnQjtFQUNoQixvQkFBbUI7RUFDbkIsa0JBQWlCO0VBRWpCLGtCdkNpS3lCO0VZckt6QixxQkFBb0I7RUFDdkIsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFZWlCbkIsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QjtFWXhFekIsZXRDYm9DO0VzQ2NwQyw4SXRDZ0srSTtFc0MvSi9JLDZCQUF1RDtFQTJDdkQsOEJBQTZCO0VBQzdCLDJCQUEwQjtFQUMxQixrQkFBaUIsRUFDcEI7RUFuRUc7SUFDSSxzQnZDK0hvQztJdUM5SHBDLDBCdkM4SG9DO0l1QzdIcEMsb0JBQW1CO0lBQ25CLGFBQVksRUFDZjtFM0IrQ0g7STJCNUNNLDBCdENHZ0M7SXNDRmhDLHlCQUF3QixFM0IrQzdCO0VUcENEO0lvQzBDRjtNWnREb0MsZ0IxQndFUixFc0NiM0IsRUFBQTtFcEMvQ0M7SW9DMENGO01ackRvQyxnQjFCd0VSLEVzQ2QzQixFQUFBO0VadkRFOzs7SUFHRCxvQkFBbUI7SUFDbkIscUJBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixVQUFTLEVBQ1Q7RXhCY0E7SW9DNkJGO01aZ0NRLGtCQUFpQixFWTNCeEIsRUFBQTtFM0JmQztJMkJ0Qk0sZXRDeEJnQztJc0N5QmhDLDhJdENxSjJJLEVXNUhoSjs7QTJCOEJILGtCQUFrQjtBQUNsQjtFM0JRQyxpQ0FGYztFQUVkLDRCQUZjO0VBRWQseUJBRmM7RUFHZCxtQ1hxRDJCO0VXckQzQiw4QlhxRDJCO0VXckQzQiwyQlhxRDJCO0VXcEQzQiw2Q1gwRDhCO0VXMUQ5Qix3Q1gwRDhCO0VXMUQ5QixxQ1gwRDhCO0VzQy9LM0IsMEJ0Q2dCb0M7RXNDZnBDLHNCdENlb0M7RXNDZHBDLGlCQUFnQjtFQUNoQixvQkFBbUI7RUFDbkIsa0JBQWlCO0VBRWpCLGtCdkNpS3lCO0VZckt6QixxQkFBb0I7RUFDdkIsbUJBQWtCO0VBQ2xCLG9CQUFtQjtFZWlCbkIsZTFCTHVDO0UwQk12QyxnSjFCa0xrSjtFMEJqTGxKLHdCQXNGbUM7RUFyRm5DLGlCMUJxQm1DO0UwQmxCbkMsZ0IxQndFMkI7RTBCWXhCLDBCQUF5QjtFWXhFekIsZXRDYm9DO0VzQ2NwQyw4SXRDZ0srSTtFc0MvSi9JLDZCQUF1RDtFQW9FdkQsbUJBQWtCO0VBQ2xCLGtCdkN5RHlCO0V1Q3hEekIsWUFBVyxFQVNkO0VBcEdHO0lBQ0ksc0J2QytIb0M7SXVDOUhwQywwQnZDOEhvQztJdUM3SHBDLG9CQUFtQjtJQUNuQixhQUFZLEVBQ2Y7RTNCK0NIO0kyQjVDTSwwQnRDR2dDO0lzQ0ZoQyx5QkFBd0IsRTNCK0M3QjtFVHBDRDtJb0NtRUY7TVovRW9DLGdCMUJ3RVIsRXNDb0IzQixFQUFBO0VwQ2hGQztJb0NtRUY7TVo5RW9DLGdCMUJ3RVIsRXNDbUIzQixFQUFBO0VaeEZFOzs7SUFHRCxvQkFBbUI7SUFDbkIscUJBQW9CO0lBQ3BCLG1CQUFrQjtJQUNsQixVQUFTLEVBQ1Q7RXhCY0E7SW9Dc0RGO01aT1Esa0JBQWlCLEVZTXhCLEVBQUE7RTNCaERDO0kyQnRCTSxldEN4QmdDO0lzQ3lCaEMsOEl0Q3FKMkksRVc1SGhKOztBMkJ3TEg7RUFDSSxldEN0T29DO0VzQ3VPcEMsZ0JBQWU7RUFDZixZdkNoR3lCO0V1Q2lHekIsVXZDakd5QjtFdUNrR3pCLGN0QzVFa0I7RXNDbUZkLFl2Q3pHcUI7RXVDMEdyQixVQUFTLEVBRWhCO0UzQjNNQztJMkJvTU0sY0FBYSxFM0JoTWxCOztBQUpEOzs7Ozs7Ozs7O0U0QnJFRSxXQUFVLEU1QnlFWDs7QTRCbEVIOzs7Ozs7O0VBT0Usd0JBQXVCO0VBQ3JCLFVBQVM7RUFDVCxzQkFBcUI7RUFFckIsYUFBWTtFQUNaLFlBQVc7RUFDWCx5QkFBZ0I7RUFBaEIsc0JBQWdCO0VBQWhCLGlCQUFnQjtFYkZuQixlMUJMdUM7RTBCTXZDLGdKMUJrTGtKO0UwQmpMbEosd0JBc0ZtQztFQXJGbkMsaUIxQnFCbUM7RTBCbEJuQyxnQjFCd0UyQjtFMEJZeEIsMEJBQXlCO0VhakZ6QiwwQnZDSm9DO0V1Q0twQywwQnhDcUh3QztFd0NwSHhDLGlCQUFnQjtFQUNoQiw2QkFBdUQ7RUFDekQsZ0J4Q3FJMkI7RXdDcEkzQix1Q3ZDNEk2QjtFdUM1STdCLGtDdkM0STZCO0V1QzVJN0IsK0J2QzRJNkIsRXVDcEg5QjtFckNuQkM7SXFDOUJGOzs7Ozs7O01ia0JvQyxnQjFCd0VSLEV1Q3pDM0IsRUFBQTtFckNuQkM7SXFDOUJGOzs7Ozs7O01ibUJvQyxnQjFCd0VSLEV1QzFDM0IsRUFBQTtFYjNCRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBR0Qsb0JBQW1CO0lBQ25CLHFCQUFvQjtJQUNwQixtQkFBa0I7SUFDbEIsVUFBUyxFQUNUO0V4QmNBO0lxQzNDRjs7Ozs7OztNYndHUSxrQkFBaUIsRWF2RHhCLEVBQUE7RUFqREQ7Ozs7Ozs7SUFxQ0ksZ0RBQXVEO0lBQ3ZELGlDdkNqQm9DO0l1Q2tCcEMsNkJBQTRCLEVBQzdCO0VBeENIOzs7Ozs7O0lBNkNpQyw2QnZDdkNPLEV1Q3VDc0I7RUE3QzlEOzs7Ozs7O0lBOENpQyw2QnZDeENPLEV1Q3dDc0I7RUE5QzlEOzs7Ozs7O0lBK0NpQyw2QnZDekNPLEV1Q3lDc0I7RUEvQzlEOzs7Ozs7O0lBZ0RpQyw2QnZDMUNPLEV1QzBDc0I7O0FBSTlEO0VBQ0ksaUJ2Q2xCZ0MsRXVDb0JuQzs7QUFNRDs7RUFFSSw2QnZDekRvQyxFdUMwRHZDOztBQU9EO0VadkVDLGUzQk11QztFMkJMdkMsZ0ozQjZMa0o7RTJCNUxsSix3QkF1RG1DO0VBdERuQyxpQkF1RHlCO0VBcER6QixpQkFWcUI7RUFXckIsaUJBQWdCO0VBR2hCLGdCM0J3RzJCO0UyQnREeEIsZ0ozQmtJK0k7RTJCakkvSSwwQkFBeUI7RVlZekIsOEl2Q3FIK0k7RXVDaEhqSix5Q3ZDekRzQztFdUMyRHBDLGtCQUF1QjtFQUN6QixtQnhDNEUyQixFd0M5RDVCO0VyQ2pFQztJcUN5Q0Y7TVo1RG9DLGdCM0J3R1IsRXVDcEIzQixFQUFBO0VyQ2pFQztJcUN5Q0Y7TVozRG9DLGdCM0J3R1IsRXVDckIzQixFQUFBO0Va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b250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlLFxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBsaW5lLWhlaWdodCBmb3IgYWxsIGhlYWRpbmdzIGluIENocm9tZSBtb2JpbGUsIEZpcmVmb3gsXG4gKiBpT1MgU2FmYXJpLCBNaWNyb3NvZnQgRWRnZSBhbmQgSUUuXG4gKi9cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5vcHRncm91cCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sXG5pbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0OyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEEgdGhpbiBsYXllciBvbiB0b3Agb2Ygbm9ybWFsaXplLmNzcyB0aGF0IHByb3ZpZGVzIGEgc3RhcnRpbmcgcG9pbnQgbW9yZVxuICogc3VpdGFibGUgZm9yIHdlYiBhcHBsaWNhdGlvbnMuXG4gKi9cbi8qKlxuICogUHJldmVudCBtYXJnaW4gYW5kIGJvcmRlciBmcm9tIGFmZmVjdGluZyBlbGVtZW50IHdpZHRoLlxuICogaHR0cHM6Ly9nb28uZ2wvcFl0Yks3XG4gKlxuICovXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbi8qKlxuICogUmVtb3ZlcyB0aGUgZGVmYXVsdCBzcGFjaW5nIGFuZCBib3JkZXIgZm9yIGFwcHJvcHJpYXRlIGVsZW1lbnRzLlxuICovXG5ibG9ja3F1b3RlLFxuZGwsXG5kZCxcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNixcbmZpZ3VyZSxcbnAsXG5wcmUge1xuICBtYXJnaW46IDA7IH1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yOyB9XG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAwO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuaWZyYW1lIHtcbiAgYm9yZGVyOiAwOyB9XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBTdXBwcmVzcyB0aGUgZm9jdXMgb3V0bGluZSBvbiBlbGVtZW50cyB0aGF0IGNhbm5vdCBiZSBhY2Nlc3NlZCB2aWEga2V5Ym9hcmQuXG4gKiBUaGlzIHByZXZlbnRzIGFuIHVud2FudGVkIGZvY3VzIG91dGxpbmUgZnJvbSBhcHBlYXJpbmcgYXJvdW5kIGVsZW1lbnRzIHRoYXRcbiAqIG1pZ2h0IHN0aWxsIHJlc3BvbmQgdG8gcG9pbnRlciBldmVudHMuXG4gKi9cblt0YWJpbmRleD1cIi0xXCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50OyB9XG5cbi5taXN0IC5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGNmYWMwOyB9XG5cbi5taXN0IC5jb250ZW50IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTY4YjsgfVxuXG4ubWlzdCAuZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzg1Yzc5YzsgfVxuXG4uc3ByaW5nIC5oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmYWM3OyB9XG5cbi5zcHJpbmcgLmNvbnRlbnQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzI0NTRlOyB9XG5cbi5zcHJpbmcgLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmIxNTg7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBUaGluO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9UaGluLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL1RoaW4uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9UaGluLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9UaGluLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9UaGluLnN2ZyNUaGluXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IExpZ2h0O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9MaWdodC5lb3RcIik7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9MaWdodC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0xpZ2h0LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9MaWdodC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvTGlnaHQuc3ZnI0xpZ2h0XCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXI7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIuZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JlZ3VsYXIuc3ZnI1JlZ3VsYXJcIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogUmVndWxhcjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci5lb3RcIik7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9SZWd1bGFyLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvUmVndWxhci5zdmcjUmVndWxhclwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW07XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL01lZGl1bS5lb3RcIik7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9NZWRpdW0uZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL01lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvTWVkaXVtLnN2ZyNNZWRpdW1cIikgZm9ybWF0KFwic3ZnXCIpOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogQm9sZDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvQm9sZC5lb3RcIik7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy9Cb2xkLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi9hc3NldHMvZm9udHMvQm9sZC5zdmcjQm9sZFwiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBCbGFjaztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvQmxhY2suZW90XCIpO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMvQmxhY2suZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy9CbGFjay53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMvQmxhY2sudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzL0JsYWNrLnN2ZyNCbGFja1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBOb3RpY2lhVGV4dC1SZWd1bGFyO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiL2Fzc2V0cy9mb250cy1zZXJpZi9Ob3RpY2lhVGV4dC1SZWd1bGFyLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzLXNlcmlmL05vdGljaWFUZXh0LVJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy1zZXJpZi9Ob3RpY2lhVGV4dC1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy1zZXJpZi9Ob3RpY2lhVGV4dC1SZWd1bGFyLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy1zZXJpZi9Ob3RpY2lhVGV4dC1SZWd1bGFyLnN2ZyNOb3RpY2lhVGV4dC1SZWd1bGFyXCIpIGZvcm1hdChcInN2Z1wiKTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IE5vdGljaWFUZXh0LUl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi9hc3NldHMvZm9udHMtc2VyaWYvTm90aWNpYVRleHQtSXRhbGljLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzLXNlcmlmL05vdGljaWFUZXh0LUl0YWxpYy5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvYXNzZXRzL2ZvbnRzLXNlcmlmL05vdGljaWFUZXh0LUl0YWxpYy53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi9hc3NldHMvZm9udHMtc2VyaWYvTm90aWNpYVRleHQtSXRhbGljLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL2Fzc2V0cy9mb250cy1zZXJpZi9Ob3RpY2lhVGV4dC1JdGFsaWMuc3ZnI05vdGljaWFUZXh0LUl0YWxpY1wiKSBmb3JtYXQoXCJzdmdcIik7IH1cblxuLyoqXG4gKiBAZGVmaW5lIHV0aWxpdGllc1xuICogU2l6aW5nIHV0aWxpdGllc1xuICovXG4vKiBQcm9wb3J0aW9uYWwgd2lkdGhzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBTcGVjaWZ5IHRoZSBwcm9wb3J0aW9uYWwgd2lkdGggb2YgYW4gb2JqZWN0LlxuICogSW50ZW50aW9uYWwgcmVkdW5kYW5jeSBidWlsZCBpbnRvIGVhY2ggc2V0IG9mIHVuaXQgY2xhc3Nlcy5cbiAqIFN1cHBvcnRzOiAyLCAzLCA0LCA1LCA2LCA4LCAxMCwgMTIgcGFydFxuICpcbiAqIDEuIFVzZSBgZmxleC1iYXNpczogYXV0b2Agd2l0aCBhIHdpZHRoIHRvIGF2b2lkIGJveC1zaXppbmcgYnVnIGluIElFMTAvMTFcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsTURcbiAqL1xuW2NsYXNzKj1cInUtc2l6ZVwiXSB7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbiAgLyogMSAqLyB9XG5cbi51LXNpemUxb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjEwIHtcbiAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxb2Y4IHtcbiAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjYsXG4udS1zaXplMm9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjUsXG4udS1zaXplMm9mMTAge1xuICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjQsXG4udS1zaXplMm9mOCxcbi51LXNpemUzb2YxMiB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplM29mMTAge1xuICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjMsXG4udS1zaXplMm9mNixcbi51LXNpemU0b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuXG4udS1zaXplM29mOCB7XG4gIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUyb2Y1LFxuLnUtc2l6ZTRvZjEwIHtcbiAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU1b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTFvZjIsXG4udS1zaXplMm9mNCxcbi51LXNpemUzb2Y2LFxuLnUtc2l6ZTRvZjgsXG4udS1zaXplNW9mMTAsXG4udS1zaXplNm9mMTIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTdvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDcgLyAxMikgIWltcG9ydGFudDsgfVxuXG4udS1zaXplM29mNSxcbi51LXNpemU2b2YxMCB7XG4gIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuXG4udS1zaXplNW9mOCB7XG4gIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUyb2YzLFxuLnUtc2l6ZTRvZjYsXG4udS1zaXplOG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMiAvIDMpICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTdvZjEwIHtcbiAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUzb2Y0LFxuLnUtc2l6ZTZvZjgsXG4udS1zaXplOW9mMTIge1xuICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTRvZjUsXG4udS1zaXplOG9mMTAge1xuICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTVvZjYsXG4udS1zaXplMTBvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemU3b2Y4IHtcbiAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7IH1cblxuLnUtc2l6ZTlvZjEwIHtcbiAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG5cbi51LXNpemUxMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfVxuXG4vKiBJbnRyaW5zaWMgd2lkdGhzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgc2hyaW5rIHdyYXAgaXRzIGNvbnRlbnQuXG4gKi9cbi51LXNpemVGaXQge1xuICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICpcbiAqIDEuIEJlIGV4cGxpY2l0IHRvIHdvcmsgYXJvdW5kIElFMTAgYnVnIHdpdGggc2hvcnRoYW5kIGZsZXhcbiAqICAgIGh0dHA6Ly9naXQuaW8vdmxsQzdcbiAqIDIuIElFMTAgaWdub3JlcyBwcmV2aW91cyBgZmxleC1iYXNpc2AgdmFsdWUuIFNldHRpbmcgYWdhaW4gaGVyZSBmaXhlc1xuICogICAgaHR0cDovL2dpdC5pby92bGxNdFxuICovXG4udS1zaXplRmlsbCB7XG4gIGZsZXg6IDEgMSAwJSAhaW1wb3J0YW50O1xuICAvKiAxICovXG4gIGZsZXgtYmFzaXM6IDAlICFpbXBvcnRhbnQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFuIGFsdGVybmF0aXZlIG1ldGhvZCB0byBtYWtlIGFuIGVsZW1lbnQgZmlsbCB0aGUgcmVtYWluaW5nIHNwYWNlLlxuICogRGlzdHJpYnV0ZXMgc3BhY2UgYmFzZWQgb24gdGhlIGluaXRpYWwgd2lkdGggYW5kIGhlaWdodCBvZiB0aGUgZWxlbWVudFxuICpcbiAqIGh0dHA6Ly93d3cudzMub3JnL1RSL2Nzcy1mbGV4Ym94L2ltYWdlcy9yZWwtdnMtYWJzLWZsZXguc3ZnXG4gKi9cbi51LXNpemVGaWxsQWx0IHtcbiAgZmxleDogMSAxIGF1dG8gIWltcG9ydGFudDtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogTWFrZSBhbiBlbGVtZW50IHRoZSB3aWR0aCBvZiBpdHMgcGFyZW50LlxuICovXG4udS1zaXplRnVsbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3ggIWltcG9ydGFudDtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuXG5bY2xhc3MqPVwidS14cy1zaXplXCJdIHtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjEwIHtcbiAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxb2Y4IHtcbiAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjYsXG4udS14cy1zaXplMm9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjUsXG4udS14cy1zaXplMm9mMTAge1xuICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjQsXG4udS14cy1zaXplMm9mOCxcbi51LXhzLXNpemUzb2YxMiB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplM29mMTAge1xuICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjMsXG4udS14cy1zaXplMm9mNixcbi51LXhzLXNpemU0b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplM29mOCB7XG4gIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUyb2Y1LFxuLnUteHMtc2l6ZTRvZjEwIHtcbiAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU1b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTFvZjIsXG4udS14cy1zaXplMm9mNCxcbi51LXhzLXNpemUzb2Y2LFxuLnUteHMtc2l6ZTRvZjgsXG4udS14cy1zaXplNW9mMTAsXG4udS14cy1zaXplNm9mMTIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTdvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDcgLyAxMikgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplM29mNSxcbi51LXhzLXNpemU2b2YxMCB7XG4gIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuXG4udS14cy1zaXplNW9mOCB7XG4gIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUyb2YzLFxuLnUteHMtc2l6ZTRvZjYsXG4udS14cy1zaXplOG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMiAvIDMpICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTdvZjEwIHtcbiAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUzb2Y0LFxuLnUteHMtc2l6ZTZvZjgsXG4udS14cy1zaXplOW9mMTIge1xuICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTRvZjUsXG4udS14cy1zaXplOG9mMTAge1xuICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTVvZjYsXG4udS14cy1zaXplMTBvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemU3b2Y4IHtcbiAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7IH1cblxuLnUteHMtc2l6ZTlvZjEwIHtcbiAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG5cbi51LXhzLXNpemUxMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgW2NsYXNzKj1cInUtc20tc2l6ZVwiXSB7XG4gICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mOCB7XG4gICAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTFvZjYsXG4gIC51LXNtLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUxb2Y1LFxuICAudS1zbS1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMW9mNCxcbiAgLnUtc20tc2l6ZTJvZjgsXG4gIC51LXNtLXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUxb2YzLFxuICAudS1zbS1zaXplMm9mNixcbiAgLnUtc20tc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUyb2Y1LFxuICAudS1zbS1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTFvZjIsXG4gIC51LXNtLXNpemUyb2Y0LFxuICAudS1zbS1zaXplM29mNixcbiAgLnUtc20tc2l6ZTRvZjgsXG4gIC51LXNtLXNpemU1b2YxMCxcbiAgLnUtc20tc2l6ZTZvZjEyIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemUzb2Y1LFxuICAudS1zbS1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplNW9mOCB7XG4gICAgd2lkdGg6IDYyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc20tc2l6ZTJvZjMsXG4gIC51LXNtLXNpemU0b2Y2LFxuICAudS1zbS1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplM29mNCxcbiAgLnUtc20tc2l6ZTZvZjgsXG4gIC51LXNtLXNpemU5b2YxMiB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemU0b2Y1LFxuICAudS1zbS1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplNW9mNixcbiAgLnUtc20tc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXNtLXNpemU3b2Y4IHtcbiAgICB3aWR0aDogODcuNSUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuICAudS1zbS1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICBbY2xhc3MqPVwidS1tZC1zaXplXCJdIHtcbiAgICBmbGV4LWJhc2lzOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2YxMCB7XG4gICAgd2lkdGg6IDEwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2Y4IHtcbiAgICB3aWR0aDogMTIuNSUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMW9mNixcbiAgLnUtbWQtc2l6ZTJvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTFvZjUsXG4gIC51LW1kLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxb2Y0LFxuICAudS1tZC1zaXplMm9mOCxcbiAgLnUtbWQtc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTNvZjEwIHtcbiAgICB3aWR0aDogMzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTFvZjMsXG4gIC51LW1kLXNpemUyb2Y2LFxuICAudS1tZC1zaXplNG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplM29mOCB7XG4gICAgd2lkdGg6IDM3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTJvZjUsXG4gIC51LW1kLXNpemU0b2YxMCB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU1b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMW9mMixcbiAgLnUtbWQtc2l6ZTJvZjQsXG4gIC51LW1kLXNpemUzb2Y2LFxuICAudS1tZC1zaXplNG9mOCxcbiAgLnUtbWQtc2l6ZTVvZjEwLFxuICAudS1tZC1zaXplNm9mMTIge1xuICAgIHdpZHRoOiA1MCUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplN29mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTNvZjUsXG4gIC51LW1kLXNpemU2b2YxMCB7XG4gICAgd2lkdGg6IDYwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuICAudS1tZC1zaXplMm9mMyxcbiAgLnUtbWQtc2l6ZTRvZjYsXG4gIC51LW1kLXNpemU4b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU3b2YxMCB7XG4gICAgd2lkdGg6IDcwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUzb2Y0LFxuICAudS1tZC1zaXplNm9mOCxcbiAgLnUtbWQtc2l6ZTlvZjEyIHtcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTRvZjUsXG4gIC51LW1kLXNpemU4b2YxMCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU1b2Y2LFxuICAudS1tZC1zaXplMTBvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbWQtc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemU5b2YxMCB7XG4gICAgd2lkdGg6IDkwJSAhaW1wb3J0YW50OyB9XG4gIC51LW1kLXNpemUxMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIFtjbGFzcyo9XCJ1LWxnLXNpemVcIl0ge1xuICAgIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjEwIHtcbiAgICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjgge1xuICAgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxb2Y2LFxuICAudS1sZy1zaXplMm9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gNikgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMW9mNSxcbiAgLnUtbGctc2l6ZTJvZjEwIHtcbiAgICB3aWR0aDogMjAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTFvZjQsXG4gIC51LWxnLXNpemUyb2Y4LFxuICAudS1sZy1zaXplM29mMTIge1xuICAgIHdpZHRoOiAyNSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplM29mMTAge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMW9mMyxcbiAgLnUtbGctc2l6ZTJvZjYsXG4gIC51LWxnLXNpemU0b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUzb2Y4IHtcbiAgICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplMm9mNSxcbiAgLnUtbGctc2l6ZTRvZjEwIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTVvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUxb2YyLFxuICAudS1sZy1zaXplMm9mNCxcbiAgLnUtbGctc2l6ZTNvZjYsXG4gIC51LWxnLXNpemU0b2Y4LFxuICAudS1sZy1zaXplNW9mMTAsXG4gIC51LWxnLXNpemU2b2YxMiB7XG4gICAgd2lkdGg6IDUwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemU3b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDcgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplM29mNSxcbiAgLnUtbGctc2l6ZTZvZjEwIHtcbiAgICB3aWR0aDogNjAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTVvZjgge1xuICAgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLXNpemUyb2YzLFxuICAudS1sZy1zaXplNG9mNixcbiAgLnUtbGctc2l6ZThvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMiAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTdvZjEwIHtcbiAgICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTNvZjQsXG4gIC51LWxnLXNpemU2b2Y4LFxuICAudS1sZy1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplNG9mNSxcbiAgLnUtbGctc2l6ZThvZjEwIHtcbiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTVvZjYsXG4gIC51LWxnLXNpemUxMG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gNikgIWltcG9ydGFudDsgfVxuICAudS1sZy1zaXplN29mOCB7XG4gICAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctc2l6ZTExb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDExIC8gMTIpICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTA4MHB4KSB7XG4gIFtjbGFzcyo9XCJ1LWxnLWZvci1jb250YWluZXItbGctc2l6ZVwiXSB7XG4gICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTFvZjEwIHtcbiAgICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMW9mOCB7XG4gICAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMW9mNixcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMm9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gNikgIWltcG9ydGFudDsgfVxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemUxb2Y1LFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemUyb2YxMCB7XG4gICAgd2lkdGg6IDIwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTFvZjQsXG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTJvZjgsXG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTNvZjEyIHtcbiAgICB3aWR0aDogMjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplM29mMTAge1xuICAgIHdpZHRoOiAzMCUgIWltcG9ydGFudDsgfVxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemUxb2YzLFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemUyb2Y2LFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU0b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTJvZjUsXG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTRvZjEwIHtcbiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMW9mMixcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMm9mNCxcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplM29mNixcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplNG9mOCxcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplNW9mMTAsXG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTZvZjEyIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplN29mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplM29mNSxcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU1b2Y4IHtcbiAgICB3aWR0aDogNjIuNSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemUyb2YzLFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU0b2Y2LFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU4b2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTdvZjEwIHtcbiAgICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplM29mNCxcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplNm9mOCxcbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplOW9mMTIge1xuICAgIHdpZHRoOiA3NSUgIWltcG9ydGFudDsgfVxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU0b2Y1LFxuICAudS1sZy1mb3ItY29udGFpbmVyLWxnLXNpemU4b2YxMCB7XG4gICAgd2lkdGg6IDgwJSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTVvZjYsXG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTdvZjgge1xuICAgIHdpZHRoOiA4Ny41JSAhaW1wb3J0YW50OyB9XG4gIC51LWxnLWZvci1jb250YWluZXItbGctc2l6ZTlvZjEwIHtcbiAgICB3aWR0aDogOTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtbGctZm9yLWNvbnRhaW5lci1sZy1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgW2NsYXNzKj1cInUteGwtc2l6ZVwiXSB7XG4gICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMW9mOCB7XG4gICAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTFvZjYsXG4gIC51LXhsLXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2Y1LFxuICAudS14bC1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMW9mNCxcbiAgLnUteGwtc2l6ZTJvZjgsXG4gIC51LXhsLXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUxb2YzLFxuICAudS14bC1zaXplMm9mNixcbiAgLnUteGwtc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUyb2Y1LFxuICAudS14bC1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTFvZjIsXG4gIC51LXhsLXNpemUyb2Y0LFxuICAudS14bC1zaXplM29mNixcbiAgLnUteGwtc2l6ZTRvZjgsXG4gIC51LXhsLXNpemU1b2YxMCxcbiAgLnUteGwtc2l6ZTZvZjEyIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemUzb2Y1LFxuICAudS14bC1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplNW9mOCB7XG4gICAgd2lkdGg6IDYyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUteGwtc2l6ZTJvZjMsXG4gIC51LXhsLXNpemU0b2Y2LFxuICAudS14bC1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplM29mNCxcbiAgLnUteGwtc2l6ZTZvZjgsXG4gIC51LXhsLXNpemU5b2YxMiB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU0b2Y1LFxuICAudS14bC1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplNW9mNixcbiAgLnUteGwtc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXhsLXNpemU3b2Y4IHtcbiAgICB3aWR0aDogODcuNSUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuICAudS14bC1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNzAwcHgpIHtcbiAgW2NsYXNzKj1cInUtc3Utc2l6ZVwiXSB7XG4gICAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMW9mMTAge1xuICAgIHdpZHRoOiAxMCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMW9mOCB7XG4gICAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTFvZjYsXG4gIC51LXN1LXNpemUyb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2Y1LFxuICAudS1zdS1zaXplMm9mMTAge1xuICAgIHdpZHRoOiAyMCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMW9mNCxcbiAgLnUtc3Utc2l6ZTJvZjgsXG4gIC51LXN1LXNpemUzb2YxMiB7XG4gICAgd2lkdGg6IDI1JSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUzb2YxMCB7XG4gICAgd2lkdGg6IDMwJSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUxb2YzLFxuICAudS1zdS1zaXplMm9mNixcbiAgLnUtc3Utc2l6ZTRvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMSAvIDMpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTNvZjgge1xuICAgIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUyb2Y1LFxuICAudS1zdS1zaXplNG9mMTAge1xuICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplNW9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiA1IC8gMTIpICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTFvZjIsXG4gIC51LXN1LXNpemUyb2Y0LFxuICAudS1zdS1zaXplM29mNixcbiAgLnUtc3Utc2l6ZTRvZjgsXG4gIC51LXN1LXNpemU1b2YxMCxcbiAgLnUtc3Utc2l6ZTZvZjEyIHtcbiAgICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTdvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemUzb2Y1LFxuICAudS1zdS1zaXplNm9mMTAge1xuICAgIHdpZHRoOiA2MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplNW9mOCB7XG4gICAgd2lkdGg6IDYyLjUlICFpbXBvcnRhbnQ7IH1cbiAgLnUtc3Utc2l6ZTJvZjMsXG4gIC51LXN1LXNpemU0b2Y2LFxuICAudS1zdS1zaXplOG9mMTIge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplN29mMTAge1xuICAgIHdpZHRoOiA3MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplM29mNCxcbiAgLnUtc3Utc2l6ZTZvZjgsXG4gIC51LXN1LXNpemU5b2YxMiB7XG4gICAgd2lkdGg6IDc1JSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU0b2Y1LFxuICAudS1zdS1zaXplOG9mMTAge1xuICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplNW9mNixcbiAgLnUtc3Utc2l6ZTEwb2YxMiB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyA2KSAhaW1wb3J0YW50OyB9XG4gIC51LXN1LXNpemU3b2Y4IHtcbiAgICB3aWR0aDogODcuNSUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplOW9mMTAge1xuICAgIHdpZHRoOiA5MCUgIWltcG9ydGFudDsgfVxuICAudS1zdS1zaXplMTFvZjEyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICogMTEgLyAxMikgIWltcG9ydGFudDsgfSB9XG5cbi8qKiBAZGVmaW5lIHV0aWxpdGllcyAqL1xuLyogQXBwbGllcyB0byBmbGV4IGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29udGFpbmVyXG4gKi9cbi51LWZsZXgge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleElubGluZSB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4ICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBEaXJlY3Rpb246IHJvd1xuICovXG4udS1mbGV4Um93IHtcbiAgZmxleC1kaXJlY3Rpb246IHJvdyAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhSb3dSZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBEaXJlY3Rpb246IGNvbHVtblxuICovXG4udS1mbGV4Q29sIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbiAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhDb2xSZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBXcmFwXG4gKi9cbi51LWZsZXhXcmFwIHtcbiAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleE5vV3JhcCB7XG4gIGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleFdyYXBSZXZlcnNlIHtcbiAgZmxleC13cmFwOiB3cmFwLXJldmVyc2UgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIEFsaWduIGl0ZW1zIGFsb25nIHRoZSBtYWluIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGUgZmxleCBjb250YWluZXJcbiAqL1xuLnUtZmxleEp1c3RpZnlTdGFydCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhKdXN0aWZ5RW5kIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhKdXN0aWZ5Q2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4SnVzdGlmeUJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4SnVzdGlmeUFyb3VuZCB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBBbGlnbiBpdGVtcyBpbiB0aGUgY3Jvc3MgYXhpcyBvZiB0aGUgY3VycmVudCBsaW5lIG9mIHRoZSBmbGV4IGNvbnRhaW5lclxuICogU2ltaWxhciB0byBganVzdGlmeS1jb250ZW50YCBidXQgaW4gdGhlIHBlcnBlbmRpY3VsYXIgZGlyZWN0aW9uXG4gKi9cbi51LWZsZXhBbGlnbkl0ZW1zU3RhcnQge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnbkl0ZW1zRW5kIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduSXRlbXNDZW50ZXIge1xuICBhbGlnbi1pdGVtczogY2VudGVyICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduSXRlbXNTdHJldGNoIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25JdGVtc0Jhc2VsaW5lIHtcbiAgYWxpZ24taXRlbXM6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBBbGlnbnMgaXRlbXMgd2l0aGluIHRoZSBmbGV4IGNvbnRhaW5lciB3aGVuIHRoZXJlIGlzIGV4dHJhXG4gKiBzcGFjZSBpbiB0aGUgY3Jvc3MtYXhpc1xuICpcbiAqIEhhcyBubyBlZmZlY3Qgd2hlbiB0aGVyZSBpcyBvbmx5IG9uZSBsaW5lIG9mIGZsZXggaXRlbXMuXG4gKi9cbi51LWZsZXhBbGlnbkNvbnRlbnRTdGFydCB7XG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25Db250ZW50RW5kIHtcbiAgYWxpZ24tY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25Db250ZW50Q2VudGVyIHtcbiAgYWxpZ24tY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduQ29udGVudFN0cmV0Y2gge1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduQ29udGVudEJldHdlZW4ge1xuICBhbGlnbi1jb250ZW50OiBzcGFjZS1iZXR3ZWVuICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEFsaWduQ29udGVudEFyb3VuZCB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogMS4gU2V0IHRoZSBmbGV4LXNocmluayBkZWZhdWx0IGV4cGxpY2l0bHkgdG8gZml4IElFMTAgLSBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKi9cbi8qIHBvc3Rjc3MtYmVtLWxpbnRlcjogaWdub3JlICovXG4udS1mbGV4ID4gKixcbi51LWZsZXhJbmxpbmUgPiAqIHtcbiAgZmxleC1zaHJpbms6IDE7XG4gIC8qIDEgKi8gfVxuXG4vKiBBcHBsaWVzIHRvIGZsZXggaXRlbXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIE92ZXJyaWRlIGRlZmF1bHQgYWxpZ25tZW50IG9mIHNpbmdsZSBpdGVtIHdoZW4gc3BlY2lmaWVkIGJ5IGBhbGlnbi1pdGVtc2BcbiAqL1xuLnUtZmxleEFsaWduU2VsZlN0YXJ0IHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnblNlbGZFbmQge1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZCAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnblNlbGZDZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25TZWxmU3RyZXRjaCB7XG4gIGFsaWduLXNlbGY6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxuXG4udS1mbGV4QWxpZ25TZWxmQmFzZWxpbmUge1xuICBhbGlnbi1zZWxmOiBiYXNlbGluZSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhBbGlnblNlbGZBdXRvIHtcbiAgYWxpZ24tc2VsZjogYXV0byAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogQ2hhbmdlIG9yZGVyIHdpdGhvdXQgZWRpdGluZyB1bmRlcmx5aW5nIEhUTUxcbiAqL1xuLnUtZmxleE9yZGVyRmlyc3Qge1xuICBvcmRlcjogLTEgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4T3JkZXJMYXN0IHtcbiAgb3JkZXI6IDEgIWltcG9ydGFudDsgfVxuXG4udS1mbGV4T3JkZXJOb25lIHtcbiAgb3JkZXI6IDAgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIFNwZWNpZnkgdGhlIGZsZXggZ3JvdyBmYWN0b3IsIHdoaWNoIGRldGVybWluZXMgaG93IG11Y2ggdGhlIGZsZXggaXRlbSB3aWxsXG4gKiBncm93IHJlbGF0aXZlIHRvIHRoZSByZXN0IG9mIHRoZSBmbGV4IGl0ZW1zIGluIHRoZSBmbGV4IGNvbnRhaW5lci5cbiAqXG4gKiBTdXBwb3J0cyAxLTUgcHJvcG9ydGlvbnNcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgLSBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzLiBVc2luZyB0aGlzXG4gKiAgICBpbnN0ZWFkIG9mIGBhdXRvYCBhcyB0aGlzIG1hdGNoZXMgd2hhdCB0aGUgZGVmYXVsdCB3b3VsZCBiZSB3aXRoIGBmbGV4YFxuICogICAgc2hvcnRoYW5kIC0gaHR0cDovL2dpdC5pby92bGxXeFxuICovXG4udS1mbGV4R3JvdzEge1xuICBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDtcbiAgLyogMSAqLyB9XG5cbi51LWZsZXhHcm93MiB7XG4gIGZsZXg6IDIgMSAwJSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhHcm93MyB7XG4gIGZsZXg6IDMgMSAwJSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhHcm93NCB7XG4gIGZsZXg6IDQgMSAwJSAhaW1wb3J0YW50OyB9XG5cbi51LWZsZXhHcm93NSB7XG4gIGZsZXg6IDUgMSAwJSAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogQWxpZ25pbmcgd2l0aCBgYXV0b2AgbWFyZ2luc1xuICogaHR0cDovL3d3dy53My5vcmcvVFIvY3NzLWZsZXhib3gtMS8jYXV0by1tYXJnaW5zXG4gKi9cbi51LWZsZXhFeHBhbmQge1xuICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4RXhwYW5kTGVmdCB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEV4cGFuZFJpZ2h0IHtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuLnUtZmxleEV4cGFuZFRvcCB7XG4gIG1hcmdpbi10b3A6IGF1dG8gIWltcG9ydGFudDsgfVxuXG4udS1mbGV4RXhwYW5kQm90dG9tIHtcbiAgbWFyZ2luLWJvdHRvbTogYXV0byAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogV29yZCBicmVha2luZ1xuICpcbiAqIEJyZWFrIHN0cmluZ3Mgd2hlbiB0aGVpciBsZW5ndGggZXhjZWVkcyB0aGUgd2lkdGggb2YgdGhlaXIgY29udGFpbmVyLlxuICovXG4udS10ZXh0QnJlYWsge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDsgfVxuXG4vKipcbiAqIEhvcml6b250YWwgdGV4dCBhbGlnbm1lbnRcbiAqL1xuLnUtdGV4dENlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRMZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9XG5cbi51LXRleHRSaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH1cblxuLyoqXG4gKiBJbmhlcml0IHRoZSBhbmNlc3RvcidzIHRleHQgY29sb3IuXG4gKi9cbi51LXRleHRJbmhlcml0Q29sb3Ige1xuICBjb2xvcjogaW5oZXJpdCAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogRW5hYmxlcyBmb250IGtlcm5pbmcgaW4gYWxsIGJyb3dzZXJzLlxuICogaHR0cDovL2Jsb2cudHlwZWtpdC5jb20vMjAxNC8wMi8wNS9rZXJuaW5nLW9uLXRoZS13ZWIvXG4gKlxuICogMS4gQ2hyb21lIChub3QgV2luZG93cyksIEZpcmVmb3gsIElFIDEwK1xuICogMi4gU2FmYXJpIDcgYW5kIGZ1dHVyZSBicm93c2Vyc1xuICogMy4gQ2hyb21lIChub3QgV2luZG93cyksIEZpcmVmb3gsIFNhZmFyaSA2KywgaU9TLCBBbmRyb2lkXG4gKi9cbi51LXRleHRLZXJuIHtcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImtlcm5cIiAxO1xuICAvKiAxICovXG4gIGZvbnQta2VybmluZzogbm9ybWFsO1xuICAvKiAyICovXG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgd2hpdGVzcGFjZSB3cmFwcGluZ1xuICovXG4udS10ZXh0Tm9XcmFwIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50OyB9XG5cbi8qKlxuICogVGV4dCB0cnVuY2F0aW9uXG4gKlxuICogUHJldmVudCB0ZXh0IGZyb20gd3JhcHBpbmcgb250byBtdWx0aXBsZSBsaW5lcywgYW5kIHRydW5jYXRlIHdpdGggYW5cbiAqIGVsbGlwc2lzLlxuICpcbiAqIDEuIEVuc3VyZSB0aGF0IHRoZSBub2RlIGhhcyBhIG1heGltdW0gd2lkdGggYWZ0ZXIgd2hpY2ggdHJ1bmNhdGlvbiBjYW5cbiAqICAgIG9jY3VyLlxuICogMi4gRml4IGZvciBJRSA4LzkgaWYgYHdvcmQtd3JhcDogYnJlYWstd29yZGAgaXMgaW4gZWZmZWN0IG9uIGFuY2VzdG9yXG4gKiAgICBub2Rlcy5cbiAqL1xuLnUtdGV4dFRydW5jYXRlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcCAhaW1wb3J0YW50O1xuICB3b3JkLXdyYXA6IG5vcm1hbCAhaW1wb3J0YW50O1xuICAvKiAyICovIH1cblxuLyoqIEBkZWZpbmUgQnV0dG9uICovXG4vKipcbiAqIFRoZSBidXR0b24gY2xhc3NlcyBhcmUgYmVzdCBhcHBsaWVkIHRvIGxpbmtzIGFuZCBidXR0b25zLlxuICogVGhlc2UgY29tcG9uZW50cyBjYW4gYmUgdXNlZCBpbiBmb3JtcywgYXMgY2FsbHMgdG8gYWN0aW9uLCBvciBhcyBwYXJ0IG9mIHRoZVxuICogZ2VuZXJhbCBVSSBvZiB0aGUgc2l0ZS9hcHAuXG4gKi9cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG4uQnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudGNvbG9yO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC8qIDQgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBleGNlc3MgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCtcbiAqL1xuLkJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFdvcmsgYXJvdW5kIGEgRmlyZWZveC9JRSBidWcgd2hlcmUgdGhlIHRyYW5zcGFyZW50IGBidXR0b25gIGJhY2tncm91bmRcbiAqIHJlc3VsdHMgaW4gYSBsb3NzIG9mIHRoZSBkZWZhdWx0IGBidXR0b25gIGZvY3VzIHN0eWxlcy5cbiAqL1xuLkJ1dHRvbjpmb2N1cyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQ7XG4gIG91dGxpbmU6IDVweCBhdXRvIC13ZWJraXQtZm9jdXMtcmluZy1jb2xvcjsgfVxuXG4vKipcbiAqIFVJIHN0YXRlc1xuICovXG4uQnV0dG9uOmhvdmVyLFxuLkJ1dHRvbjpmb2N1cyxcbi5CdXR0b246YWN0aXZlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5CdXR0b246ZGlzYWJsZWQsXG4uQnV0dG9uLmlzLWRpc2FibGVkIHtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBvcGFjaXR5OiB2YXIoLS1CdXR0b24tZGlzYWJsZWQtb3BhY2l0eSk7XG4gIG9wYWNpdHk6IDAuNjsgfVxuXG4vKiogQGRlZmluZSBGbGV4RW1iZWQgKi9cbi8qKlxuICogRmxleGlibGUgbWVkaWEgZW1iZWRzXG4gKlxuICogRm9yIHVzZSB3aXRoIG1lZGlhIGVtYmVkcyDigJMgc3VjaCBhcyB2aWRlb3MsIHNsaWRlc2hvd3MsIG9yIGV2ZW4gaW1hZ2VzIOKAk1xuICogdGhhdCBuZWVkIHRvIHJldGFpbiBhIHNwZWNpZmljIGFzcGVjdCByYXRpbyBidXQgYWRhcHQgdG8gdGhlIHdpZHRoIG9mIHRoZWlyXG4gKiBjb250YWluaW5nIGVsZW1lbnQuXG4gKlxuICogQmFzZWQgb246IGh0dHA6Ly9hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlL2NyZWF0aW5nLWludHJpbnNpYy1yYXRpb3MtZm9yLXZpZGVvXG4gKi9cbi5GbGV4RW1iZWQge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi8qKlxuICogVGhlIGFzcGVjdC1yYXRpbyBoYWNrIGlzIGFwcGxpZWQgdG8gYW4gZW1wdHkgZWxlbWVudCBiZWNhdXNlIGl0IGFsbG93c1xuICogdGhlIGNvbXBvbmVudCB0byByZXNwZWN0IGBtYXgtaGVpZ2h0YC4gRGVmYXVsdCBhc3BlY3QgcmF0aW8gaXMgMToxLlxuICovXG4uRmxleEVtYmVkLXJhdGlvIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmctYm90dG9tOiAxMDAlO1xuICB3aWR0aDogMTAwJTsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiAzOjEgYXNwZWN0IHJhdGlvXG4gKi9cbi5GbGV4RW1iZWQtcmF0aW8tLTNieTEge1xuICBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogMjoxIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0yYnkxIHtcbiAgcGFkZGluZy1ib3R0b206IDUwJTsgfVxuXG4vKipcbiAqIE1vZGlmaWVyOiAxNjo5IGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS0xNmJ5OSB7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogNDozIGFzcGVjdCByYXRpb1xuICovXG4uRmxleEVtYmVkLXJhdGlvLS00YnkzIHtcbiAgcGFkZGluZy1ib3R0b206IDc1JTsgfVxuXG4vKipcbiAqIEZpdCB0aGUgY29udGVudCB0byB0aGUgYXNwZWN0IHJhdGlvXG4gKi9cbi5GbGV4RW1iZWQtY29udGVudCB7XG4gIGJvdHRvbTogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuLyoqIEBkZWZpbmUgR3JpZCAqL1xuLyoqXG4gKiBDb3JlIGdyaWQgY29tcG9uZW50XG4gKlxuICogRE8gTk9UIGFwcGx5IGRpbWVuc2lvbiBvciBvZmZzZXQgdXRpbGl0aWVzIHRvIHRoZSBgR3JpZGAgZWxlbWVudC4gQWxsIGNlbGxcbiAqIHdpZHRocyBhbmQgb2Zmc2V0cyBzaG91bGQgYmUgYXBwbGllZCB0byBjaGlsZCBncmlkIGNlbGxzLlxuICovXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWxsIGNvbnRlbnQgbXVzdCBiZSBjb250YWluZWQgd2l0aGluIGNoaWxkIGBHcmlkLWNlbGxgIGVsZW1lbnRzLlxuICpcbiAqIDEuIEFjY291bnQgZm9yIGJyb3dzZXIgZGVmYXVsdHMgb2YgZWxlbWVudHMgdGhhdCBtaWdodCBiZSB0aGUgcm9vdCBub2RlIG9mXG4gKiAgICB0aGUgY29tcG9uZW50LlxuICovXG4uR3JpZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC8qIDEgKi9cbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgbWFyZ2luOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBjZW50ZXIgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduQ2VudGVyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogcmlnaHQgYWxpZ24gYWxsIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduUmlnaHQge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IG1pZGRsZS1hbGlnbiBncmlkIGNlbGxzXG4gKi9cbi5HcmlkLS1hbGlnbk1pZGRsZSB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLyoqXG4gKiBNb2RpZmllcjogYm90dG9tLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuLkdyaWQtLWFsaWduQm90dG9tIHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbG93IGNlbGxzIHRvIGVxdWFsIGRpc3RyaWJ1dGUgd2lkdGhcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgaHR0cDovL2dpdC5pby92bGxDN1xuICpcbiAqICAgIFVzZSBgMCVgIHRvIGF2b2lkIGJ1ZyBpbiBJRTEwLzExIHdpdGggdW5pdGxlc3MgZmxleCBiYXNpc1xuICogICAgaHR0cDovL2dpdC5pby92bGxXeFxuICovXG4uR3JpZC0tZml0ID4gLkdyaWQtY2VsbCB7XG4gIGZsZXg6IDEgMSAwJTtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGFsbCBjZWxscyBtYXRjaCBoZWlnaHQgb2YgdGFsbGVzdCBjZWxsIGluIGEgcm93XG4gKi9cbi5HcmlkLS1lcXVhbEhlaWdodCA+IC5HcmlkLWNlbGwge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi8qKlxuICogTW9kaWZpZXI6IGd1dHRlcnNcbiAqL1xuLkdyaWQtLXdpdGhHdXR0ZXIge1xuICBtYXJnaW46IDAgY2FsYygtMC41ICogMThweCk7IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqIDE4cHgpOyB9XG5cbi8qIEdyaWQgY2VsbFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogTm8gZXhwbGljaXQgd2lkdGggYnkgZGVmYXVsdC4gUmVseSBvbiBjb21iaW5pbmcgYEdyaWQtY2VsbGAgd2l0aCBhIGRpbWVuc2lvblxuICogdXRpbGl0eSBvciBhIGNvbXBvbmVudCBjbGFzcyB0aGF0IGV4dGVuZHMgJ0dyaWQnLlxuICpcbiAqIDEuIFNldCBmbGV4IGl0ZW1zIHRvIGZ1bGwgd2lkdGggYnkgZGVmYXVsdFxuICogMi4gRml4IGlzc3VlIHdoZXJlIGVsZW1lbnRzIHdpdGggb3ZlcmZsb3cgZXh0ZW5kIHBhc3QgdGhlXG4gKiAgICBgR3JpZC1jZWxsYCBjb250YWluZXIgLSBodHRwczovL2dpdC5pby92dzVvRlxuICovXG4uR3JpZC1jZWxsIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgZmxleC1iYXNpczogMTAwJTtcbiAgLyogMSAqL1xuICBtaW4td2lkdGg6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIE1vZGlmaWVyOiBob3Jpem9udGFsbHkgY2VudGVyIG9uZSB1bml0XG4gKiBTZXQgYSBzcGVjaWZpYyB1bml0IHRvIGJlIGhvcml6b250YWxseSBjZW50ZXJlZC4gRG9lc24ndCBhZmZlY3RcbiAqIGFueSBvdGhlciB1bml0cy4gQ2FuIHN0aWxsIGNvbnRhaW4gYSBjaGlsZCBgR3JpZGAgb2JqZWN0LlxuICovXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4ueHMtR3JpZC0tYWxpZ25DZW50ZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4ueHMtR3JpZC0tYWxpZ25SaWdodCB7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cblxuLnhzLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4ueHMtR3JpZC0tYWxpZ25Cb3R0b20ge1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cblxuLnhzLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC5zbS1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLnNtLUdyaWQtLWFsaWduUmlnaHQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLnNtLUdyaWQtLWFsaWduTWlkZGxlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zbS1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5zbS1HcmlkLWNlbGwtLWNlbnRlciB7XG4gICAgbWFyZ2luOiAwIGF1dG87IH0gfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1kLUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAubWQtR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAubWQtR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLm1kLUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLm1kLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAubGctR3JpZC0tYWxpZ25DZW50ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC5sZy1HcmlkLS1hbGlnblJpZ2h0IHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XG4gIC5sZy1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubGctR3JpZC0tYWxpZ25Cb3R0b20ge1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsgfVxuICAubGctR3JpZC1jZWxsLS1jZW50ZXIge1xuICAgIG1hcmdpbjogMCBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEwODBweCkge1xuICAubGctZm9yLWNvbnRhaW5lci1sZy1HcmlkLS1hbGlnbkNlbnRlciB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgLmxnLWZvci1jb250YWluZXItbGctR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAubGctZm9yLWNvbnRhaW5lci1sZy1HcmlkLS1hbGlnbk1pZGRsZSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubGctZm9yLWNvbnRhaW5lci1sZy1HcmlkLS1hbGlnbkJvdHRvbSB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gIC5sZy1mb3ItY29udGFpbmVyLWxnLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnhsLUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAueGwtR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAueGwtR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnhsLUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLnhsLUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNzAwcHgpIHtcbiAgLnN1LUdyaWQtLWFsaWduQ2VudGVyIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuc3UtR3JpZC0tYWxpZ25SaWdodCB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAuc3UtR3JpZC0tYWxpZ25NaWRkbGUge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnN1LUdyaWQtLWFsaWduQm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgLnN1LUdyaWQtY2VsbC0tY2VudGVyIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIC0xMnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyIHtcbiAgICAgIG1hcmdpbjogMCAtMjRweDsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgMTJweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlciA+IC5HcmlkLWNlbGwge1xuICAgICAgcGFkZGluZzogMCAyNHB4OyB9IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXJTbSB7XG4gIG1hcmdpbjogMCAtNnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5HcmlkLS13aXRoR3V0dGVyU20ge1xuICAgICAgbWFyZ2luOiAwIC0xMnB4OyB9IH1cblxuLkdyaWQtLXdpdGhHdXR0ZXJTbSA+IC5HcmlkLWNlbGwge1xuICBwYWRkaW5nOiAwIDZweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlclNtID4gLkdyaWQtY2VsbCB7XG4gICAgICBwYWRkaW5nOiAwIDZweDsgfSB9XG5cbi5HcmlkLS13aXRoR3V0dGVyTGcge1xuICBtYXJnaW46IDAgLTI0cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLkdyaWQtLXdpdGhHdXR0ZXJMZyB7XG4gICAgICBtYXJnaW46IDAgLTcycHg7IH0gfVxuXG4uR3JpZC0td2l0aEd1dHRlckxnID4gLkdyaWQtY2VsbCB7XG4gIHBhZGRpbmc6IDAgMjRweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuR3JpZC0td2l0aEd1dHRlckxnID4gLkdyaWQtY2VsbCB7XG4gICAgICBwYWRkaW5nOiAwIDcycHg7IH0gfVxuXG4vKipcbiAgKiBTaW1wbGUgcGFnZS1sZXZlbCBzZXR1cCBmcm9tIEludWl0Q1NTLlxuICAqXG4gICogMS4gU2V0IHRoZSBkZWZhdWx0IGBmb250LXNpemVgIGFuZCBgbGluZS1oZWlnaHRgIGZvciB0aGUgZW50aXJlIHByb2plY3QsXG4gICogICAgc291cmNlZCBmcm9tIG91ciBkZWZhdWx0IHZhcmlhYmxlcy4gVGhlIGBmb250LXNpemVgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3RcbiAgKiAgICBpbiBlbXMsIHRoZSBgbGluZS1oZWlnaHRgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3QgdW5pdGxlc3NseS5cbiAgKiAyLiBGb3JjZSBzY3JvbGxiYXJzIHRvIGFsd2F5cyBiZSB2aXNpYmxlIHRvIHByZXZlbnQgYXdrd2FyZCDigJhqdW1wc+KAmSB3aGVuXG4gICogICAgbmF2aWdhdGluZyBiZXR3ZWVuIHBhZ2VzIHRoYXQgZG8vZG8gbm90IGhhdmUgZW5vdWdoIGNvbnRlbnQgdG8gcHJvZHVjZVxuICAqICAgIHNjcm9sbGJhcnMgbmF0dXJhbGx5LlxuICAqIDMuIEVuc3VyZSB0aGUgcGFnZSBhbHdheXMgZmlsbHMgYXQgbGVhc3QgdGhlIGVudGlyZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0LlxuICAqL1xuaHRtbCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGZkZmQ7XG4gIG1pbi1oZWlnaHQ6IDEwMCU7XG4gIC8qIDMgKi9cbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAvKiAyICovIH1cblxuYSB7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICBhOmhvdmVyLCBhOmFjdGl2ZSwgYTpmb2N1cyB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG4uZ20tc3R5bGUgaW1nLFxuaW1nW3dpZHRoXSxcbmltZ1toZWlnaHRdIHtcbiAgbWF4LXdpZHRoOiBub25lOyB9XG5cbi5vLWltYWdlLS1jaXJjbGUge1xuICBib3JkZXItcmFkaXVzOiA1MCU7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSxcbnVsLCBvbCwgbGksIGRsLCBkZFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbixcbnRhYmxlLCB0aCwgdGQsIGNhcHRpb25cbnByZSwgc21hbGwsXG5lbSwgYiB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuaHRtbCB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgdGV4dC1yZW5kZXJpbmc6IGdlb21ldHJpY1ByZWNpc2lvbjtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG51bCwgb2wsIGxpLCBkbCxcbmJsb2NrcXVvdGUsIHAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZpZWxkc2V0LFxucHJlIHtcbiAgbWFyZ2luLWJvdHRvbTogMThweDsgfVxuXG4uby1wb3NBYnNvbHV0ZUNlbnRlciB7XG4gIGxlZnQ6IDUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cblxuLm8tcG9zRml4ZWRDZW50ZXIge1xuICBsZWZ0OiA1MCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG5cbi5vLXBvc0Z1bGxTY3JlZW4ge1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogYXV0bztcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMDtcbiAgdG9wOiAwOyB9XG5cbi5vLXBvc0Fic29sdXRlQ2VudGVyQWx0IHtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICBtYXJnaW46IGF1dG87XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHRvcDogMDsgfVxuXG4uby1wb3NGdWxsU2NyZWVuLFxuLm8tcG9zRml4ZWRDZW50ZXIge1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47IH1cblxuLm8tY29udGFpbmVyIHtcbiAgaGVpZ2h0OiBpbmhlcml0O1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAxMDgwcHg7XG4gIHBhZGRpbmc6IDAgMjRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5vLWNvbnRhaW5lcjpiZWZvcmUsIC5vLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLm8tY29udGFpbmVyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgcDpsYXN0LWNoaWxkIGEsXG4gIC5vLWNvbnRhaW5lciBsaTpsYXN0LWNoaWxkLFxuICAuby1jb250YWluZXIgbGk6bGFzdC1jaGlsZCBhLFxuICAuby1jb250YWluZXIgb2w6bGFzdC1jaGlsZCxcbiAgLm8tY29udGFpbmVyIG9sOmxhc3QtY2hpbGQgYSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuby1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMCAzNnB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS1tZCB7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogNjYwcHg7XG4gICAgcGFkZGluZzogMCAyNHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5vLWNvbnRhaW5lci0tbWQ6YmVmb3JlLCAuby1jb250YWluZXItLW1kOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAuby1jb250YWluZXItLW1kOmFmdGVyIHtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLm8tY29udGFpbmVyLS1tZCBwOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS1tZCBwOmxhc3QtY2hpbGQgYSxcbiAgICAuby1jb250YWluZXItLW1kIGxpOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS1tZCBsaTpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS1tZCBvbDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0tbWQgb2w6bGFzdC1jaGlsZCBhIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWNvbnRhaW5lci0tbWQge1xuICAgICAgICBwYWRkaW5nOiAwIDM2cHg7IH0gfVxuICAuby1jb250YWluZXItLXhsIHtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgcGFkZGluZzogMCAyNHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5vLWNvbnRhaW5lci0teGw6YmVmb3JlLCAuby1jb250YWluZXItLXhsOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAuby1jb250YWluZXItLXhsOmFmdGVyIHtcbiAgICAgIGNsZWFyOiBib3RoOyB9XG4gICAgLm8tY29udGFpbmVyLS14bCBwOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS14bCBwOmxhc3QtY2hpbGQgYSxcbiAgICAuby1jb250YWluZXItLXhsIGxpOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS14bCBsaTpsYXN0LWNoaWxkIGEsXG4gICAgLm8tY29udGFpbmVyLS14bCBvbDpsYXN0LWNoaWxkLFxuICAgIC5vLWNvbnRhaW5lci0teGwgb2w6bGFzdC1jaGlsZCBhIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWNvbnRhaW5lci0teGwge1xuICAgICAgICBwYWRkaW5nOiAwIDM2cHg7IH0gfVxuICAuby1jb250YWluZXItLXN1cGVyIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMCAzNnB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1jb250YWluZXItLXN1cGVyIHtcbiAgICAgICAgcGFkZGluZzogMCA5NnB4OyB9IH1cbiAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyB7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogMTA4MHB4O1xuICAgIHBhZGRpbmc6IDAgMjRweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbzpiZWZvcmUsIC5vLWNvbnRhaW5lci0tcG9zdEluZm86YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAgIC5vLWNvbnRhaW5lci0tcG9zdEluZm86YWZ0ZXIge1xuICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAuby1jb250YWluZXItLXBvc3RJbmZvIHA6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXBvc3RJbmZvIHA6bGFzdC1jaGlsZCBhLFxuICAgIC5vLWNvbnRhaW5lci0tcG9zdEluZm8gbGk6bGFzdC1jaGlsZCxcbiAgICAuby1jb250YWluZXItLXBvc3RJbmZvIGxpOmxhc3QtY2hpbGQgYSxcbiAgICAuby1jb250YWluZXItLXBvc3RJbmZvIG9sOmxhc3QtY2hpbGQsXG4gICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyBvbDpsYXN0LWNoaWxkIGEge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyB7XG4gICAgICAgIHBhZGRpbmc6IDAgMzZweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyB7XG4gICAgICAgIHBhZGRpbmc6IDAgMzZweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE3MDBweCkge1xuICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyB7XG4gICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgICAgICBwYWRkaW5nOiAwIDI0cHg7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgICAgICAuby1jb250YWluZXItLXBvc3RJbmZvOmJlZm9yZSwgLm8tY29udGFpbmVyLS1wb3N0SW5mbzphZnRlciB7XG4gICAgICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICAgICAgZGlzcGxheTogdGFibGU7IH1cbiAgICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbzphZnRlciB7XG4gICAgICAgICAgY2xlYXI6IGJvdGg7IH1cbiAgICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyBwOmxhc3QtY2hpbGQsXG4gICAgICAgIC5vLWNvbnRhaW5lci0tcG9zdEluZm8gcDpsYXN0LWNoaWxkIGEsXG4gICAgICAgIC5vLWNvbnRhaW5lci0tcG9zdEluZm8gbGk6bGFzdC1jaGlsZCxcbiAgICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyBsaTpsYXN0LWNoaWxkIGEsXG4gICAgICAgIC5vLWNvbnRhaW5lci0tcG9zdEluZm8gb2w6bGFzdC1jaGlsZCxcbiAgICAgICAgLm8tY29udGFpbmVyLS1wb3N0SW5mbyBvbDpsYXN0LWNoaWxkIGEge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTcwMHB4KSBhbmQgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuby1jb250YWluZXItLXBvc3RJbmZvIHtcbiAgICAgIHBhZGRpbmc6IDAgMzZweDsgfSB9XG5cbi5vLWdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7IH1cblxuLm8tZ3JpZCA+ICoge1xuICBmbGV4OiAxIDAgNWVtOyB9XG5cbi5vLWdyaWQtLXNwYWNlQmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuXG5bZGF0YS1tb2RhbC10b2dnbGVdLFxuW2RhdGEtdG9nZ2xlLWZvbGRdLFxuW2RhdGEtZGlzbWlzc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4gIG1hcmdpbi1sZWZ0OiAxOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxub2wge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7IH1cblxubGkge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIGxpID4gdWwsXG4gIGxpID4gb2wge1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cblxuLm8tbGlzdCB7XG4gIG1hcmdpbi1sZWZ0OiAxOHB4O1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cblxuLm8tbGlzdENsZWFuIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG5cbi5vLWxpc3RJbmxpbmUge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLm8tbGlzdElubGluZSBsaSxcbiAgLm8tbGlzdElubGluZSBkaXYge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgIC5vLWxpc3RJbmxpbmUgbGk6bm90KDpsYXN0LWNoaWxkKSxcbiAgICAuby1saXN0SW5saW5lIGRpdjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNnB4OyB9XG5cbmEge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7IH1cbiAgYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7IH1cblxuLm8tbGlua0J1cmllZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMTJweDsgfVxuICAuby1saW5rQnVyaWVkOmhvdmVyIC5vLWxpbmtCdXJpZWRUYXJnZXQsIC5vLWxpbmtCdXJpZWQ6YWN0aXZlIC5vLWxpbmtCdXJpZWRUYXJnZXQsIC5vLWxpbmtCdXJpZWQ6Zm9jdXMgLm8tbGlua0J1cmllZFRhcmdldCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTsgfVxuXG4uby1saW5rQnVyaWVkVGFyZ2V0IHtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBjb2xvcjogIzE1MTUxNTsgfVxuXG4uby1saW5rIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgzOCwgMzgsIDM4LCAwKSA1MCUsIHJnYmEoMzgsIDM4LCAzOCwgMC40KSA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDJweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWxpbms6aG92ZXIsIC5vLWxpbms6YWN0aXZlLCAuby1saW5rOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmsgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMzgsIDM4LCAzOCwgMCkgNTAlLCByZ2JhKDM4LCAzOCwgMzgsIDAuNCkgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1jaGlsZExpbmsgYTpob3ZlciwgLm8tY2hpbGRMaW5rIGE6YWN0aXZlLCAuby1jaGlsZExpbmsgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tbGlua0dyZXkge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDE3OSwgMTc5LCAxNzksIDApIDUwJSwgI2IzYjNiMyA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDJweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWxpbmtHcmV5OmhvdmVyLCAuby1saW5rR3JleTphY3RpdmUsIC5vLWxpbmtHcmV5OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmtHcmV5IGEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDE3OSwgMTc5LCAxNzksIDApIDUwJSwgI2IzYjNiMyA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDJweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWNoaWxkTGlua0dyZXkgYTpob3ZlciwgLm8tY2hpbGRMaW5rR3JleSBhOmFjdGl2ZSwgLm8tY2hpbGRMaW5rR3JleSBhOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1saW5rTGl0ZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjMyLCAyMzIsIDIzMiwgMCkgNTAlLCAjZThlOGU4IDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMnB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tbGlua0xpdGU6aG92ZXIsIC5vLWxpbmtMaXRlOmFjdGl2ZSwgLm8tbGlua0xpdGU6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWNoaWxkTGlua0xpdGUgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjMyLCAyMzIsIDIzMiwgMCkgNTAlLCAjZThlOGU4IDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMnB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tY2hpbGRMaW5rTGl0ZSBhOmhvdmVyLCAuby1jaGlsZExpbmtMaXRlIGE6YWN0aXZlLCAuby1jaGlsZExpbmtMaXRlIGE6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWxpbmtCcmFuZCB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjEsIDIxLCAyMSwgMCkgNTAlLCAjMTUxNTE1IDUwJSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgYmFja2dyb3VuZC1zaXplOiAxcHggMnB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDEwMCU7XG4gIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIHBhZGRpbmctYm90dG9tOiAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgLm8tbGlua0JyYW5kOmhvdmVyLCAuby1saW5rQnJhbmQ6YWN0aXZlLCAuby1saW5rQnJhbmQ6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWNoaWxkTGlua0JyYW5kIGEge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDIxLCAyMSwgMjEsIDApIDUwJSwgIzE1MTUxNSA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDJweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWNoaWxkTGlua0JyYW5kIGE6aG92ZXIsIC5vLWNoaWxkTGlua0JyYW5kIGE6YWN0aXZlLCAuby1jaGlsZExpbmtCcmFuZCBhOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1saW5rV2hpdGUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDUwJSwgI0ZGRiA1MCUpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtc2l6ZTogMXB4IDJweDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICBjb2xvcjogY3VycmVudENvbG9yO1xuICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5vLWxpbmtXaGl0ZTpob3ZlciwgLm8tbGlua1doaXRlOmFjdGl2ZSwgLm8tbGlua1doaXRlOmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGNvbG9yOiBpbmhlcml0O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uby1jaGlsZExpbmtXaGl0ZSBhIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSA1MCUsICNGRkYgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAuby1jaGlsZExpbmtXaGl0ZSBhOmhvdmVyLCAuby1jaGlsZExpbmtXaGl0ZSBhOmFjdGl2ZSwgLm8tY2hpbGRMaW5rV2hpdGUgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm8tbGlua0ludmlzaWJsZSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IH1cbiAgLm8tbGlua0ludmlzaWJsZTpob3ZlciwgLm8tbGlua0ludmlzaWJsZTphY3RpdmUsIC5vLWxpbmtJbnZpc2libGU6Zm9jdXMge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6IGluaGVyaXQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5vLWNoaWxkTGlua0ludmlzaWJsZSBhIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsgfVxuICAuby1jaGlsZExpbmtJbnZpc2libGUgYTpob3ZlciwgLm8tY2hpbGRMaW5rSW52aXNpYmxlIGE6YWN0aXZlLCAuby1jaGlsZExpbmtJbnZpc2libGUgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBJZiBJRTEwLzExIGNvbXBhdGliaWxpdHkgcmVxJ2QsIHVzZSBoZWlnaHQuXG4gKiAyLiBJZiB5b3UgbmVlZCBtaW4taGVpZ2h0LCB3cmFwIGluICd1LWllTWluSGVpZ2h0QnVnJy5cbiAqIFNlZSBodHRwOi8vYml0Lmx5LzFneThPSlMgZm9yIGRldGFpbHMuXG4gKi9cbi5vLWFsaWduZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLyogMiAqL1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4uby1hbGlnbmVyLWl0ZW0ge1xuICBmbGV4OiAxOyB9XG5cbi5vLWFsaWduZXItaXRlbS0tdG9wIHtcbiAgYWxpZ24tc2VsZjogZmxleC1zdGFydDsgfVxuXG4uby1hbGlnbmVyLWl0ZW0tLWJvdHRvbSB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kOyB9XG5cbi5vLWFsaWduZXItaXRlbS0tZml4ZWQge1xuICBmbGV4OiBub25lO1xuICBtYXgtd2lkdGg6IDUwJTsgfVxuXG4vKipcbiAqIEZpeGVzIHRoZSBtaW4taGVpZ2h0IGJ1ZyBpbiBJRTEwLTExLlxuICogVGhpcyBjbGFzcyBzaG91bGQgYmUgYWRkZWQgdG8gYSBjb250YWluZXIgZWxlbWVudCBhcyBkZXNjcmliZWQgaW5cbiAqIEZsZXhidWcgIzMuIFNlZSBodHRwOi8vYml0Lmx5LzFneThPSlMgZm9yIGRldGFpbHMuXG4gKi9cbi51LWllTWluSGVpZ2h0QnVnRml4IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuXG4uby1naG9zdCB7XG4gIGZvbnQtc2l6ZTogMDtcbiAgaGVpZ2h0OiBpbmhlcml0OyB9XG5cbi5vLWdob3N0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IC0xcHg7XG4gIHdpZHRoOiAxcHg7IH1cblxuLm8tZ2hvc3Q6YmVmb3JlLFxuLm8tZ2hvc3QtY2hpbGQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cblxuLkh6UnVsZSB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7XG4gIGhlaWdodDogMDtcbiAgbWFyZ2luLXRvcDogY2FsYyggMjRweCAtIDFweCk7XG4gIG1hcmdpbi1ib3R0b206IDI0cHg7IH1cblxuLlJ1bGUge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMTUxNTE1OyB9XG5cbi5EaXZSdWxlLS1saWdodCB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogI2RiZGJkYiBzb2xpZCAxcHg7IH1cblxuLkRpdlJ1bGUtLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMTUxNTE1OyB9XG5cbi5WZXJ0UnVsZS0tbGVmdCB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2RiZGJkYjsgfVxuXG4uby1pY29uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZpbGw6IGN1cnJlbnRDb2xvcjtcbiAgaGVpZ2h0OiAzMnB4O1xuICBsaW5lLWhlaWdodDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHdpZHRoOiAzMnB4OyB9XG4gIC5vLWljb246aG92ZXIsIC5vLWljb246YWN0aXZlLCAuby1pY29uOmZvY3VzIHtcbiAgICBvdXRsaW5lOiAwOyB9XG4gIC5vLWljb24tLXN0cm9rZSB7XG4gICAgZmlsbDogdHJhbnNwYXJlbnQ7XG4gICAgc3Ryb2tlOiBjdXJyZW50Q29sb3I7XG4gICAgc3Ryb2tlLXdpZHRoOiAycHg7XG4gICAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDsgfVxuICAuby1pY29uLS1uYXYge1xuICAgIGhlaWdodDogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogMTJweDtcbiAgICB3aWR0aDogMTVweDsgfVxuICAuby1pY29uLS1zbSB7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgICB3aWR0aDogMTBweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8taWNvbi0tc20ge1xuICAgICAgICB3aWR0aDogMTFweDtcbiAgICAgICAgaGVpZ2h0OiAxMXB4OyB9IH1cbiAgLm8taWNvbi0tbWQge1xuICAgIHdpZHRoOiAyN3B4O1xuICAgIGhlaWdodDogMjdweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8taWNvbi0tbWQge1xuICAgICAgICB3aWR0aDogMzZweDtcbiAgICAgICAgaGVpZ2h0OiAzNnB4OyB9IH1cbiAgLm8taWNvbi0tbGcge1xuICAgIHdpZHRoOiAycmVtO1xuICAgIGhlaWdodDogMnJlbTsgfVxuICAuby1pY29uLS14bCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuICAgIGhlaWdodDogNDhweDtcbiAgICB3aWR0aDogNDhweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLm8taWNvbi0teGwge1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIHdpZHRoOiA2MHB4OyB9IH1cbiAgLm8taWNvbi0tc3VwZXIge1xuICAgIHdpZHRoOiAyLjVyZW07XG4gICAgaGVpZ2h0OiAyLjVyZW07IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWljb24tLXN1cGVyIHtcbiAgICAgICAgd2lkdGg6IDNyZW07XG4gICAgICAgIGhlaWdodDogM3JlbTsgfSB9XG4gIC5vLWljb24tLWxlZnQge1xuICAgIG1hcmdpbi1yaWdodDogM3B4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS1sZWZ0IHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA0cHg7IH0gfVxuICAuby1pY29uLS1sZWZ0U20ge1xuICAgIG1hcmdpbi1yaWdodDogMXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS1sZWZ0U20ge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuMTI1cmVtOyB9IH1cbiAgLm8taWNvbi0tcmlnaHQge1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5vLWljb24tLXJpZ2h0IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7IH0gfVxuICAuby1pY29uLS1yaWdodFNtIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuby1pY29uLS1yaWdodFNtIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDAuMTI1cmVtOyB9IH1cbiAgLm8taWNvbiArIFtjbGFzc149XCItYXJyb3ctaW5saW5lXCJdIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogc3VwZXI7IH1cbiAgLm8taWNvbi0tdGV4dEFsaWduIHtcbiAgICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAuby1pY29uLS10ZXh0TGdBbGlnbiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDFweCk7IH1cbiAgLm8taWNvbi0tYnV0dG9uQWxpZ24ge1xuICAgIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5vLWljb24tLWZvcm1BbGlnbiB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgLm8taWNvbi0tbWVkaWFBbGlnbiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjI1cmVtKTsgfVxuXG4uYy1pbWFnZUJsZW5kIHtcbiAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjgpOyB9XG5cbi5jLWltYWdlQmxlbmQtLWp1c3Qge1xuICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNCk7IH1cblxuLm8tY292ZXJJbWFnZSB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBjb250ZW50OiBub25lOyB9XG5cbi5vLWNvdmVySW1hZ2UtLWRhcmsge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTsgfVxuICAuby1jb3ZlckltYWdlLS1kYXJrOmJlZm9yZSB7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzE1MTUxNSAwJSwgcmdiYSgyMSwgMjEsIDIxLCAwLjIpIDEwMCUpO1xuICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgb3BhY2l0eTogMTsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLm8tY292ZXJJbWFnZS0tYmxlbmRzIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDA7IH0gfVxuXG4uby1jb250YWluSW1hZ2Uge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTtcbiAgY29udGVudDogbm9uZTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOyB9XG5cbi5GbGV4RW1iZWQtZml0SW1hZ2Uge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICB3aWR0aDogMTAwJTsgfVxuXG4uRmxleEVtYmVkLWNvbnRlbnQtLWRhcms6YmVmb3JlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgyMSwgMjEsIDIxLCAwLjkpIDAlLCByZ2JhKDIxLCAyMSwgMjEsIDApIDEwMCUpO1xuICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuICBjb250ZW50OiBcIiBcIjtcbiAgb3BhY2l0eTogMTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7IH1cblxuLmMtdGV4dC0teHMge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxMHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLXhzIHtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy10ZXh0LS14cyB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICAuYy10ZXh0LS14cyA+IGxpLFxuICAuYy10ZXh0LS14cyA+IGxpIGEsXG4gIC5jLXRleHQtLXhzID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLXNtIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1zbSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtdGV4dC0tc20ge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLmMtdGV4dC0tc20gPiBsaSxcbiAgLmMtdGV4dC0tc20gPiBsaSBhLFxuICAuYy10ZXh0LS1zbSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy10ZXh0IHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtdGV4dCB7XG4gICAgICBmb250LXNpemU6IDE5cHg7IH0gfVxuICAuYy10ZXh0ID4gbGksXG4gIC5jLXRleHQgPiBsaSBhLFxuICAuYy10ZXh0ID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLW1lZGl1bSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogZ3JheTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1tZWRpdW0ge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLXRleHQtLW1lZGl1bSB7XG4gICAgICBmb250LXNpemU6IDE5cHg7IH0gfVxuICAuYy10ZXh0LS1tZWRpdW0gPiBsaSxcbiAgLmMtdGV4dC0tbWVkaXVtID4gbGkgYSxcbiAgLmMtdGV4dC0tbWVkaXVtID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLWludHJvIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiBncmF5O1xuICBtYXJnaW4tYm90dG9tOiAxMnB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLWludHJvIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy10ZXh0LS1pbnRybyB7XG4gICAgICBmb250LXNpemU6IDE5cHg7IH0gfVxuICAuYy10ZXh0LS1pbnRybyA+IGxpLFxuICAuYy10ZXh0LS1pbnRybyA+IGxpIGEsXG4gIC5jLXRleHQtLWludHJvID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLXRleHQtLWFzaWRlIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXRleHQtLWFzaWRlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy10ZXh0LS1hc2lkZSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy10ZXh0LS1hc2lkZSA+IGxpLFxuICAuYy10ZXh0LS1hc2lkZSA+IGxpIGEsXG4gIC5jLXRleHQtLWFzaWRlID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5jLXRleHQtLWFzaWRlIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cblxuLmMtdGV4dC0tbWV0YSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEwcHg7XG4gIGNvbG9yOiBncmF5ICFpbXBvcnRhbnQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC0tbWV0YSB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtdGV4dC0tbWV0YSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy10ZXh0LS1tZXRhID4gbGksXG4gIC5jLXRleHQtLW1ldGEgPiBsaSBhLFxuICAuYy10ZXh0LS1tZXRhID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5jLXRleHQtLW1ldGEgPiBhIHtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7IH1cbiAgICAuYy10ZXh0LS1tZXRhID4gYTpob3ZlciwgLmMtdGV4dC0tbWV0YSA+IGE6YWN0aXZlLCAuYy10ZXh0LS1tZXRhID4gYTpmb2N1cyB7XG4gICAgICBib3JkZXItY29sb3I6IGdyYXkgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy10ZXh0LS1tZXRhIHtcbiAgICAgIG1hcmdpbjogYXV0bzsgfSB9XG5cbi5jLXRleHQtYmxvY2sgPiAqIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtdGV4dC1ibG9jayA+ICoge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLXRleHQtYmxvY2sgPiAqIHtcbiAgICAgIGZvbnQtc2l6ZTogMTlweDsgfSB9XG4gIC5jLXRleHQtYmxvY2sgPiAqID4gbGksXG4gIC5jLXRleHQtYmxvY2sgPiAqID4gbGkgYSxcbiAgLmMtdGV4dC1ibG9jayA+ICogPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtdGV4dC1ibG9jay0tZm9vdGVyIHtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBtYXJnaW46IDA7IH1cbiAgLmMtdGV4dC1ibG9jay0tZm9vdGVyOjpiZWZvcmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjUzLCAyNTMsIDI1MywgMC4yKTtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDI0cHggMCAyNy42cHg7XG4gICAgd2lkdGg6IDIuNSU7IH1cbiAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqIHtcbiAgICAgICAgZm9udC1zaXplOiAxOXB4OyB9IH1cbiAgICAuYy10ZXh0LWJsb2NrLS1mb290ZXIgPiAqID4gbGksXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGxpIGEsXG4gICAgLmMtdGV4dC1ibG9jay0tZm9vdGVyID4gKiA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5jLWxpc3QtLWl0ZW1UYWcge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxOHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWxpc3QtLWl0ZW1UYWcge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLWxpc3QtLWl0ZW1UYWcge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLmMtbGlzdC0taXRlbVRhZyA+IGxpLFxuICAuYy1saXN0LS1pdGVtVGFnID4gbGkgYSxcbiAgLmMtbGlzdC0taXRlbVRhZyA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1saXN0LS1tZXRhIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBjb2xvcjogZ3JheTtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1saXN0LS1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1saXN0LS1tZXRhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC5jLWxpc3QtLW1ldGEgPiBsaSxcbiAgLmMtbGlzdC0tbWV0YSA+IGxpIGEsXG4gIC5jLWxpc3QtLW1ldGEgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cblxuLmMtbGlzdC0tbWV0YS10aXRsZSB7XG4gIGNvbG9yOiAjMTUxNTE1ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogMzBweCAwIDE1cHggIWltcG9ydGFudDsgfVxuICAuYy1saXN0LS1tZXRhLXRpdGxlOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFd0THQge1xuICBmb250LWZhbWlseTogTGlnaHQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IH1cblxuLnUtdGV4dFd0Umcge1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgfVxuXG4udS10ZXh0V3RNZCB7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IH1cblxudWwsIG9sLCBkbCxcbnAsIGFkZHJlc3MsXG50YWJsZSwgdGltZSxcbmZpZWxkc2V0LCBmaWdjYXB0aW9uLFxucHJlLCBhIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDE0cHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgdWwsIG9sLCBkbCxcbiAgICBwLCBhZGRyZXNzLFxuICAgIHRhYmxlLCB0aW1lLFxuICAgIGZpZWxkc2V0LCBmaWdjYXB0aW9uLFxuICAgIHByZSwgYSB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgdWwsIG9sLCBkbCxcbiAgICBwLCBhZGRyZXNzLFxuICAgIHRhYmxlLCB0aW1lLFxuICAgIGZpZWxkc2V0LCBmaWdjYXB0aW9uLFxuICAgIHByZSwgYSB7XG4gICAgICBmb250LXNpemU6IDE5cHg7IH0gfVxuICB1bCA+IGxpLFxuICB1bCA+IGxpIGEsXG4gIHVsID4gYSwgb2wgPiBsaSxcbiAgb2wgPiBsaSBhLFxuICBvbCA+IGEsIGRsID4gbGksXG4gIGRsID4gbGkgYSxcbiAgZGwgPiBhLFxuICBwID4gbGksXG4gIHAgPiBsaSBhLFxuICBwID4gYSwgYWRkcmVzcyA+IGxpLFxuICBhZGRyZXNzID4gbGkgYSxcbiAgYWRkcmVzcyA+IGEsXG4gIHRhYmxlID4gbGksXG4gIHRhYmxlID4gbGkgYSxcbiAgdGFibGUgPiBhLCB0aW1lID4gbGksXG4gIHRpbWUgPiBsaSBhLFxuICB0aW1lID4gYSxcbiAgZmllbGRzZXQgPiBsaSxcbiAgZmllbGRzZXQgPiBsaSBhLFxuICBmaWVsZHNldCA+IGEsIGZpZ2NhcHRpb24gPiBsaSxcbiAgZmlnY2FwdGlvbiA+IGxpIGEsXG4gIGZpZ2NhcHRpb24gPiBhLFxuICBwcmUgPiBsaSxcbiAgcHJlID4gbGkgYSxcbiAgcHJlID4gYSwgYSA+IGxpLFxuICBhID4gbGkgYSxcbiAgYSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG5lbSxcbi51LXRleHRFbSB7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuYixcbnN0cm9uZyxcbi51LXRleHRCb2xkIHtcbiAgZm9udC1zdHJldGNoOiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgYixcbiAgICBzdHJvbmcsXG4gICAgLnUtdGV4dEJvbGQge1xuICAgICAgZm9udC1zaXplOiAxM3B4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIGIsXG4gICAgc3Ryb25nLFxuICAgIC51LXRleHRCb2xkIHtcbiAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gIGIgPiBsaSxcbiAgYiA+IGxpIGEsXG4gIGIgPiBhLFxuICBzdHJvbmcgPiBsaSxcbiAgc3Ryb25nID4gbGkgYSxcbiAgc3Ryb25nID4gYSxcbiAgLnUtdGV4dEJvbGQgPiBsaSxcbiAgLnUtdGV4dEJvbGQgPiBsaSBhLFxuICAudS10ZXh0Qm9sZCA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICBiLFxuICAgIHN0cm9uZyxcbiAgICAudS10ZXh0Qm9sZCB7XG4gICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG5cbmJsb2NrcXVvdGUsXG4uQmxvY2txdW90ZSB7XG4gIGNvbG9yOiBncmF5O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLWJvdHRvbTogMThweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICBibG9ja3F1b3RlLFxuICAgIC5CbG9ja3F1b3RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDI0cHg7IH0gfVxuXG4uYy1kaXNwbGF5IHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDA1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogNDBweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1kaXNwbGF5IHtcbiAgICAgIGZvbnQtc2l6ZTogNTRweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1kaXNwbGF5IHtcbiAgICAgIGZvbnQtc2l6ZTogNjBweDsgfSB9XG4gIC5jLWRpc3BsYXkgPiBsaSxcbiAgLmMtZGlzcGxheSA+IGxpIGEsXG4gIC5jLWRpc3BsYXkgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuXG4uYy1oZWFkbGluZSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMjVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDU0cHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtaGVhZGxpbmUge1xuICAgICAgZm9udC1zaXplOiA3MnB4OyB9IH1cbiAgLmMtaGVhZGxpbmUgPiBsaSxcbiAgLmMtaGVhZGxpbmUgPiBsaSBhLFxuICAuYy1oZWFkbGluZSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS1tZCB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogUmVndWxhciwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLW1kIHtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1oZWFkbGluZS0tbWQge1xuICAgICAgZm9udC1zaXplOiAyN3B4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLW1kID4gbGksXG4gIC5jLWhlYWRsaW5lLS1tZCA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS1tZCA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS1zbSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMTI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtaGVhZGxpbmUtLXNtIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1oZWFkbGluZS0tc20ge1xuICAgICAgZm9udC1zaXplOiAyM3B4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXNtID4gbGksXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS1zbSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lLS14cyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMWVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAxMHB4O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1oZWFkbGluZS0teHMge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgLmMtaGVhZGxpbmUtLXhzID4gbGksXG4gIC5jLWhlYWRsaW5lLS14cyA+IGxpIGEsXG4gIC5jLWhlYWRsaW5lLS14cyA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5jLWhlYWRsaW5lIGVtIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5oMiArIGgzIHtcbiAgbWFyZ2luLXRvcDogNC44cHg7IH1cblxuaDMgKyBwIHtcbiAgbWFyZ2luLXRvcDogOS42cHg7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gIHNwYW4udS1sZy1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC51LXNtLWxpbmVCcmVhayB7XG4gICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDc5cHgpIHtcbiAgc3Bhbi51LWxnRG93bi1saW5lQnJlYWsge1xuICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luOiBhdXRvOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIHNwYW4udS1zbURvd24tbGluZUJyZWFrIHtcbiAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1oaWRlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4uYy1jb250ZW50LS1wYWdlLFxuLmMtY29udGVudC0tcG9zdCB7XG4gIHBhZGRpbmctYm90dG9tOiA2Ljg3NXZoICFpbXBvcnRhbnQ7IH1cblxuLmMtY29udGVudCAuRmxleEVtYmVkLFxuLmMtcG9zdENlbGwgLkZsZXhFbWJlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7IH1cblxuLmMtaGVhZGVyIHtcbiAgcGFkZGluZzogNC4xMjV2aCAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC5jLWhlYWRlci1icmFuZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNC4xMjV2aDsgfSB9XG5cbi5jLWhlYWRlci1sb2dvID4gaW1nIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgd2lkdGg6IDE1MHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRlci1sb2dvID4gaW1nIHtcbiAgICAgIHdpZHRoOiAyMjVweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1oZWFkZXItbG9nbyA+IGltZyB7XG4gICAgICB3aWR0aDogMjYwcHg7IH0gfVxuXG4uYy1oZWFkZXItaW5mb0FsaWduIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMxNTE1MTU7XG4gIHBhZGRpbmctYm90dG9tOiA3cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDdweCk7IH1cblxuLmMtaGVhZGVyLWluZm8ge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjMTUxNTE1OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWhlYWRlci1pbmZvIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1oZWFkZXItaW5mbyB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1oZWFkZXItaW5mbyA+IGxpLFxuICAuYy1oZWFkZXItaW5mbyA+IGxpIGEsXG4gIC5jLWhlYWRlci1pbmZvID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5jLWhlYWRlci1pbmZvIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cblxuLmMtcG9zdEdyaWQgPiAqIHtcbiAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMik7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdEdyaWQgPiAqIHtcbiAgICAgIGZsZXgtYmFzaXM6IGNhbGMoMTAwJSAvIDMpOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLXBvc3RHcmlkID4gKiB7XG4gICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyA1KTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC50aHJlZSAuYy1wb3N0R3JpZCA+ICoge1xuICAgICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMyk7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuZm91ciAuYy1wb3N0R3JpZCA+ICoge1xuICAgICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gNCk7IH0gfVxuICAuYy1wb3N0LWluZm8gLmMtcG9zdEdyaWQgPiAqIHtcbiAgICBtYXJnaW46IDA7XG4gICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gNCk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5jLXBvc3QtaW5mbyAuYy1wb3N0R3JpZCA+ICoge1xuICAgICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyA3KTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3QtbmV4dCAuYy1wb3N0R3JpZCA+ICoge1xuICAgICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gNSk7IH0gfVxuXG4uYy1wb3N0R3JpZCAuRmxleEVtYmVkLXJhdGlvIHtcbiAgcGFkZGluZy1ib3R0b206IDM1dmg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdEdyaWQgLkZsZXhFbWJlZC1yYXRpbyB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjV2aDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgIC5jLXBvc3RHcmlkIC5GbGV4RW1iZWQtcmF0aW8ge1xuICAgICAgcGFkZGluZy1ib3R0b206IDUwdmg7IH0gfVxuICAuYy1wb3N0LW5leHQgLmMtcG9zdEdyaWQgLkZsZXhFbWJlZC1yYXRpbyB7XG4gICAgcGFkZGluZy1ib3R0b206IDIwdmg7IH1cblxuYS5jLXBvc3RDZWxsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICBhLmMtcG9zdENlbGw6aG92ZXIgLm8tbGlua0J1cmllZFRhcmdldCwgYS5jLXBvc3RDZWxsOmFjdGl2ZSAuby1saW5rQnVyaWVkVGFyZ2V0LCBhLmMtcG9zdENlbGw6Zm9jdXMgLm8tbGlua0J1cmllZFRhcmdldCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTsgfVxuICBhLmMtcG9zdENlbGwgLkZsZXhFbWJlZCB7XG4gICAgbWFyZ2luOiAxcHggMC41cHggMDsgfVxuICBhLmMtcG9zdENlbGw6aG92ZXIgLmMtcG9zdENlbGwtaW1hZ2UsIGEuYy1wb3N0Q2VsbDphY3RpdmUgLmMtcG9zdENlbGwtaW1hZ2UsIGEuYy1wb3N0Q2VsbDpmb2N1cyAuYy1wb3N0Q2VsbC1pbWFnZSB7XG4gICAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNCk7XG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMCk7IH1cbiAgYS5jLXBvc3RDZWxsOmhvdmVyIC5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lLCBhLmMtcG9zdENlbGw6YWN0aXZlIC5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lLCBhLmMtcG9zdENlbGw6Zm9jdXMgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUge1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gICAgY29sb3I6ICNGRkY7IH1cblxuLmMtcG9zdENlbGwtaW1hZ2Uge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtYmxlbmQtbW9kZTogbXVsdGlwbHk7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC44KTtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogYWxsO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiA1MDBtcztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2Utb3V0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbnRlbnQ6IG5vbmU7XG4gIGZpbHRlcjogZ3JheXNjYWxlKDEwMCUpOyB9XG5cbi5jLXBvc3RDZWxsLWhlYWRsaW5lLFxuLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjRkZGO1xuICBwYWRkaW5nOiAwIDE1JTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3RDZWxsLWhlYWRsaW5lLFxuICAgIC5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1wb3N0Q2VsbC1oZWFkbGluZSxcbiAgICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAuYy1wb3N0Q2VsbC1oZWFkbGluZSA+IGxpLFxuICAuYy1wb3N0Q2VsbC1oZWFkbGluZSA+IGxpIGEsXG4gIC5jLXBvc3RDZWxsLWhlYWRsaW5lID4gYSxcbiAgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUgPiBsaSxcbiAgLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUgPiBsaSBhLFxuICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAuYy1wb3N0Q2VsbC1oZWFkbGluZSxcbiAgICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gIC5jLXBvc3RDZWxsLWhlYWRsaW5lOm5vdCg6Zmlyc3QtY2hpbGQpLFxuICAuYy1wb3N0Q2VsbC1zdWJoZWFkbGluZTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogNnB4OyB9XG5cbi5jLXBvc3RDZWxsLWhlYWRsaW5lIHtcbiAgY29sb3I6ICNGRkY7IH1cblxuLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGNvbG9yOiAjYjNiM2IzO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFJlZ3VsYXIsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG5cbi5GbGV4RW1iZWQtcmF0aW8tLWhlcm8ge1xuICBwYWRkaW5nLWJvdHRvbTogOTAlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5GbGV4RW1iZWQtcmF0aW8tLWhlcm8ge1xuICAgICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuRmxleEVtYmVkLXJhdGlvLS1oZXJvIHtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA1MCU7IH0gfVxuXG4uRmxleEVtYmVkLXJhdGlvLS1oZXJvSGFsZiB7XG4gIHBhZGRpbmctYm90dG9tOiA5MCU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLkZsZXhFbWJlZC1yYXRpby0taGVyb0hhbGYge1xuICAgICAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuRmxleEVtYmVkLXJhdGlvLS1oZXJvSGFsZiB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMjUlOyB9IH1cblxuLkZsZXhFbWJlZC1yYXRpby0taGVyb1ZpZGVvIHtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuXG4uYy1wb3N0LWhncm91cCB7XG4gIG1hcmdpbjogNC4xMjV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0LWhncm91cCB7XG4gICAgICBtYXgtd2lkdGg6IDgwdnc7XG4gICAgICBtYXJnaW46IDAgYXV0bzsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1wb3N0LWhncm91cCB7XG4gICAgICBtYXgtd2lkdGg6IDYwdnc7IH0gfVxuXG4uYy1wb3N0LWhlYWRsaW5lIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4yNWVtO1xuICBsaW5lLWhlaWdodDogMS4yNTtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogMC40NWVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3QtaGVhZGxpbmUge1xuICAgICAgZm9udC1zaXplOiA1NHB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLXBvc3QtaGVhZGxpbmUge1xuICAgICAgZm9udC1zaXplOiA3MnB4OyB9IH1cbiAgLmMtcG9zdC1oZWFkbGluZSA+IGxpLFxuICAuYy1wb3N0LWhlYWRsaW5lID4gbGkgYSxcbiAgLmMtcG9zdC1oZWFkbGluZSA+IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLXBvc3QtaGVhZGxpbmUge1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgICBtYXJnaW4tbGVmdDogMS41JTsgfSB9XG5cbi5jLXBvc3Qtc3ViaGVhZGxpbmUge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbi10b3A6IDEycHg7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdC1zdWJoZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtcG9zdC1zdWJoZWFkbGluZSB7XG4gICAgICBmb250LXNpemU6IDIzcHg7IH0gfVxuICAuYy1wb3N0LXN1YmhlYWRsaW5lID4gbGksXG4gIC5jLXBvc3Qtc3ViaGVhZGxpbmUgPiBsaSBhLFxuICAuYy1wb3N0LXN1YmhlYWRsaW5lID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgLmMtcG9zdC1zdWJoZWFkbGluZSBwIHtcbiAgICBjb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA5cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBjb2xvcjogZ3JheTtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIC5jLXBvc3Qtc3ViaGVhZGxpbmUgcCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDsgfSB9XG4gICAgLmMtcG9zdC1zdWJoZWFkbGluZSBwID4gbGksXG4gICAgLmMtcG9zdC1zdWJoZWFkbGluZSBwID4gbGkgYSxcbiAgICAuYy1wb3N0LXN1YmhlYWRsaW5lIHAgPiBhIHtcbiAgICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmMtcG9zdC1zdWJoZWFkbGluZSBwIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7IH0gfVxuXG4uYy1wb3N0LWhlYWRsaW5lLFxuLmMtcG9zdC1zdWJoZWFkbGluZSB7XG4gIGNvbG9yOiAjRkZGO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDgwcHgpIHtcbiAgLmMtcG9zdC1pbmZvIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG4gICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uYy1wb3N0LWFydGljbGUge1xuICBtYXJnaW4tdG9wOiA1LjV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLmMtcG9zdC1hcnRpY2xlIHtcbiAgICAgIG1hcmdpbi10b3A6IDYuODc1dmg7IH0gfVxuXG4ucy1wb3N0IHAsXG4ucy1wb3N0IHVsLFxuLnMtcG9zdCBhIHtcbiAgZm9udC1mYW1pbHk6IE5vdGljaWFUZXh0LVJlZ3VsYXIsIEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFwiVGltZXNcIiwgc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwOyB9XG5cbi5zLXBvc3QgYSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMzgsIDM4LCAzOCwgMCkgNTAlLCByZ2JhKDM4LCAzOCwgMzgsIDAuNCkgNTAlKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMTAwJTtcbiAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAucy1wb3N0IGE6aG92ZXIsIC5zLXBvc3QgYTphY3RpdmUsIC5zLXBvc3QgYTpmb2N1cyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLnMtcG9zdCBzdHJvbmcge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5zLXBvc3QgZW0ge1xuICBmb250LWZhbWlseTogTm90aWNpYVRleHQtSXRhbGljOyB9XG5cbi5zLXBvc3QgaDI6bm90KDpmaXJzdC1jaGlsZCksXG4ucy1wb3N0IGgzOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgbWFyZ2luLXRvcDogNC4xMjV2aDsgfVxuXG4ucy1wb3N0IGgyOm5vdCg6bGFzdC1jaGlsZCksXG4ucy1wb3N0IGgzOm5vdCg6bGFzdC1jaGlsZCkge1xuICBtYXJnaW4tYm90dG9tOiAxOHB4OyB9XG5cbi5zLXBvc3QgaDIge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjEyNWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnMtcG9zdCBoMiB7XG4gICAgICBmb250LXNpemU6IDIxcHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLnMtcG9zdCBoMiB7XG4gICAgICBmb250LXNpemU6IDIzcHg7IH0gfVxuICAucy1wb3N0IGgyID4gbGksXG4gIC5zLXBvc3QgaDIgPiBsaSBhLFxuICAucy1wb3N0IGgyID4gYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLnMtcG9zdCBoMiB7XG4gICAgICB3aWR0aDogODUlOyB9IH1cblxuLnMtcG9zdCBoMyB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5zLXBvc3QgaDMge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5zLXBvc3QgaDMge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLnMtcG9zdCBoMyA+IGxpLFxuICAucy1wb3N0IGgzID4gbGkgYSxcbiAgLnMtcG9zdCBoMyA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAucy1wb3N0IGgzIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cblxuLnMtcG9zdCBociB7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7XG4gIG1hcmdpbjogMzZweCAwOyB9XG5cbi5zLXBvc3QgYmxvY2txdW90ZSBwIHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYjNiM2IzO1xuICBjb2xvcjogZ3JheTtcbiAgcGFkZGluZy1sZWZ0OiAyNHB4OyB9XG5cbi5zLXBvc3QgZmlndXJlIHtcbiAgcGFkZGluZy1ib3R0b206IDlweDsgfVxuICAucy1wb3N0IGZpZ3VyZTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogNC4xMjV2aDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnMtcG9zdCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAyNHB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAucy1wb3N0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDQ4cHg7IH0gfVxuXG4ucy1wb3N0LWxpc3Qge1xuICBjb2x1bW4tY291bnQ6IDI7IH1cblxuLnMtcG9zdCB0YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGZvbnQtZmFtaWx5OiBOb3RpY2lhVGV4dC1SZWd1bGFyLCBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBcIlRpbWVzXCIsIHNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgbWFyZ2luOiA0LjEyNXZoIDA7IH1cbiAgLnMtcG9zdCB0YWJsZSB0aGVhZCB0ciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjE1KTsgfVxuICAucy1wb3N0IHRhYmxlIHRoIHtcbiAgICBjb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4xMjVlbTtcbiAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgcGFkZGluZzogMTJweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLnMtcG9zdCB0YWJsZSB0aCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgLnMtcG9zdCB0YWJsZSB0aCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMjNweDsgfSB9XG4gICAgLnMtcG9zdCB0YWJsZSB0aCA+IGxpLFxuICAgIC5zLXBvc3QgdGFibGUgdGggPiBsaSBhLFxuICAgIC5zLXBvc3QgdGFibGUgdGggPiBhIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgLnMtcG9zdCB0YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjE1KTsgfVxuICAucy1wb3N0IHRhYmxlIHRib2R5IHRyOm50aC1jaGlsZChldmVuKSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjA5KTsgfVxuICAucy1wb3N0IHRhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuICAgIC5zLXBvc3QgdGFibGUgdGQ6Zmlyc3QtY2hpbGQge1xuICAgICAgY29sb3I6ICMxNTE1MTU7XG4gICAgICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjYjNiM2IzO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgICAgLnMtcG9zdCB0YWJsZSB0ZDpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgICAgLnMtcG9zdCB0YWJsZSB0ZDpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgICAgIC5zLXBvc3QgdGFibGUgdGQ6Zmlyc3QtY2hpbGQgPiBsaSxcbiAgICAgIC5zLXBvc3QgdGFibGUgdGQ6Zmlyc3QtY2hpbGQgPiBsaSBhLFxuICAgICAgLnMtcG9zdCB0YWJsZSB0ZDpmaXJzdC1jaGlsZCA+IGEge1xuICAgICAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICBtYXJnaW46IDA7IH1cbiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgICAucy1wb3N0IHRhYmxlIHRkOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgICAgLnMtcG9zdCB0YWJsZSB0ZDpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAvIDMpOyB9IH1cblxuLmMtcG9zdC1uZXh0IHtcbiAgbWFyZ2luLXRvcDogMTF2aDsgfVxuICAuYy1wb3N0LW5leHQgaDMge1xuICAgIG1hcmdpbi1ib3R0b206IDIuNzV2aDsgfVxuXG4uYy1wb3N0LW1ldGEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDEuMXZoIDEuMzc1dmg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNTE1MTU7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtcG9zdC1tZXRhIHtcbiAgICAgIHBhZGRpbmc6IDAuNjg3NXZoIDEuMzc1dmggMS4xdmg7IH0gfVxuICAuYy1wb3N0LW1ldGEgKyAuYy1wb3N0LW1ldGEge1xuICAgIG1hcmdpbi1sZWZ0OiAtMXB4OyB9XG4gIC5jLXBvc3QtbWV0YTpudGgtY2hpbGQobiArIDUpIHtcbiAgICBib3JkZXItdG9wOiAwOyB9XG4gIC5jLXBvc3QtbWV0YTpudGgtY2hpbGQoNSkge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMDgwcHgpIHtcbiAgICAuYy1wb3N0LW1ldGEge1xuICAgICAgYm9yZGVyOiAwO1xuICAgICAgbWFyZ2luOiAwOyB9XG4gICAgICAuYy1wb3N0LW1ldGE6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICMxNTE1MTU7IH0gfVxuICAuYy1wb3N0LW1ldGEgc3BhbixcbiAgLmMtcG9zdC1tZXRhIHNwYW4gYSB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IEJsYWNrLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgICBsaW5lLWhlaWdodDogMS45NjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtcG9zdC1tZXRhIHNwYW4sXG4gICAgICAuYy1wb3N0LW1ldGEgc3BhbiBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxMXB4OyB9IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgICAuYy1wb3N0LW1ldGEgc3BhbixcbiAgICAgIC5jLXBvc3QtbWV0YSBzcGFuIGEge1xuICAgICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICAgIC5jLXBvc3QtbWV0YSBzcGFuID4gbGksXG4gICAgLmMtcG9zdC1tZXRhIHNwYW4gPiBsaSBhLFxuICAgIC5jLXBvc3QtbWV0YSBzcGFuID4gYSxcbiAgICAuYy1wb3N0LW1ldGEgc3BhbiBhID4gbGksXG4gICAgLmMtcG9zdC1tZXRhIHNwYW4gYSA+IGxpIGEsXG4gICAgLmMtcG9zdC1tZXRhIHNwYW4gYSA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuYy1wb3N0LW1ldGEgc3BhbixcbiAgICAgIC5jLXBvc3QtbWV0YSBzcGFuIGEge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5jLXBvc3QtbWV0YSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMC42ODc1dmg7IH0gfVxuICAuYy1wb3N0LW1ldGEgcCB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogOXB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtcG9zdC1tZXRhIHAge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIC5jLXBvc3QtbWV0YSBwIHtcbiAgICAgICAgZm9udC1zaXplOiAxNXB4OyB9IH1cbiAgICAuYy1wb3N0LW1ldGEgcCA+IGxpLFxuICAgIC5jLXBvc3QtbWV0YSBwID4gbGkgYSxcbiAgICAuYy1wb3N0LW1ldGEgcCA+IGEge1xuICAgICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgbWFyZ2luOiAwOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuYy1wb3N0LW1ldGEgcCB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cbiAgLmMtcG9zdC1tZXRhIHAgYSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgzOCwgMzgsIDM4LCAwKSA1MCUsIHJnYmEoMzgsIDM4LCAzOCwgMC40KSA1MCUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtOyB9XG4gICAgLmMtcG9zdC1tZXRhIHAgYTpob3ZlciwgLmMtcG9zdC1tZXRhIHAgYTphY3RpdmUsIC5jLXBvc3QtbWV0YSBwIGE6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5jLXBvc3QtbWV0YS0tc2luZ2xlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmMtcG9zdC1zaGFyZSB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLmMtcG9zdC1zaGFyZTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogNC4xMjV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0LXNoYXJlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLmMtcG9zdC1zaGFyZSA+IGEge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgY29sb3I6ICNiM2IzYjM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5jLXBvc3Qtc2hhcmUgPiBhOmhvdmVyLCAuYy1wb3N0LXNoYXJlID4gYTphY3RpdmUsIC5jLXBvc3Qtc2hhcmUgPiBhOmZvY3VzIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgICBjb2xvcjogaW5oZXJpdDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuICAgIC5jLXBvc3Qtc2hhcmUgPiBhOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtMXB4OyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgICAuYy1wb3N0LXNoYXJlID4gYSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAgIC5jLXBvc3Qtc2hhcmUgPiBhOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAtMXB4OyB9IH1cbiAgICAuYy1wb3N0LXNoYXJlID4gYTpob3ZlciwgLmMtcG9zdC1zaGFyZSA+IGE6YWN0aXZlLCAuYy1wb3N0LXNoYXJlID4gYTpmb2N1cyB7XG4gICAgICBjb2xvcjogI2IzYjNiMzsgfVxuXG4uYy1wb3N0LWVuZEJsb2NrIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBCbGFjaywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS45NjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U4ZThlODtcbiAgY29sb3I6IGdyYXk7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbWFyZ2luLXRvcDogMjIuNXB4O1xuICBwYWRkaW5nOiAwLjgyNXZoIDAgMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1wb3N0LWVuZEJsb2NrIHtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1wb3N0LWVuZEJsb2NrIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIC5jLXBvc3QtZW5kQmxvY2sgPiBsaSxcbiAgLmMtcG9zdC1lbmRCbG9jayA+IGxpIGEsXG4gIC5jLXBvc3QtZW5kQmxvY2sgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmMtcG9zdC1lbmRCbG9jayB7XG4gICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gIC5jLXBvc3QtZW5kQmxvY2sgYSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgzOCwgMzgsIDM4LCAwKSA1MCUsIHJnYmEoMzgsIDM4LCAzOCwgMC40KSA1MCUpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgLmMtcG9zdC1lbmRCbG9jayBhOmhvdmVyLCAuYy1wb3N0LWVuZEJsb2NrIGE6YWN0aXZlLCAuYy1wb3N0LWVuZEJsb2NrIGE6Zm9jdXMge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICAgIGNvbG9yOiBpbmhlcml0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi5jLXBvc3Qtc3VwcG9ydGVycyB7XG4gIG1hcmdpbjogOXB4IDAgMDtcbiAgb3BhY2l0eTogMC41OyB9XG4gIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWcge1xuICAgIGhlaWdodDogNDBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxOHB4OyB9XG4gICAgLmMtcG9zdC1zdXBwb3J0ZXJzIGltZzpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMzZweDsgfVxuICAgIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWc6bnRoLWNoaWxkKDRuKSB7XG4gICAgICBtYXJnaW4tdG9wOiA5cHg7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAgIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWcge1xuICAgICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH0gfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAgIC5jLXBvc3Qtc3VwcG9ydGVycyBpbWcge1xuICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgIHdpZHRoOiBhdXRvOyB9IH1cbiAgICAuYy1wb3N0LXN1cHBvcnRlcnMgaW1nLnBvcnRyYWl0IHtcbiAgICAgIGhlaWdodDogNjBweDtcbiAgICAgIHdpZHRoOiBhdXRvOyB9XG4gICAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgICAgLmMtcG9zdC1zdXBwb3J0ZXJzIGltZy5wb3J0cmFpdCB7XG4gICAgICAgICAgaGVpZ2h0OiA4MHB4OyB9IH1cblxuLmMtZm9vdGVyIHtcbiAgcGFkZGluZzogNS41dmggMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1mb290ZXIge1xuICAgICAgcGFkZGluZzogNi44NzV2aCAwOyB9IH1cbiAgLmMtZm9vdGVyIHAsXG4gIC5jLWZvb3RlciB1bCxcbiAgLmMtZm9vdGVyIGxpLFxuICAuYy1mb290ZXIgc3BhbixcbiAgLmMtZm9vdGVyIGEge1xuICAgIGNvbG9yOiAjMTUxNTE1O1xuICAgIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAgIC5jLWZvb3RlciBwLFxuICAgICAgLmMtZm9vdGVyIHVsLFxuICAgICAgLmMtZm9vdGVyIGxpLFxuICAgICAgLmMtZm9vdGVyIHNwYW4sXG4gICAgICAuYy1mb290ZXIgYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgLmMtZm9vdGVyIHAsXG4gICAgICAuYy1mb290ZXIgdWwsXG4gICAgICAuYy1mb290ZXIgbGksXG4gICAgICAuYy1mb290ZXIgc3BhbixcbiAgICAgIC5jLWZvb3RlciBhIHtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgICAuYy1mb290ZXIgcCA+IGxpLFxuICAgIC5jLWZvb3RlciBwID4gbGkgYSxcbiAgICAuYy1mb290ZXIgcCA+IGEsXG4gICAgLmMtZm9vdGVyIHVsID4gbGksXG4gICAgLmMtZm9vdGVyIHVsID4gbGkgYSxcbiAgICAuYy1mb290ZXIgdWwgPiBhLFxuICAgIC5jLWZvb3RlciBsaSA+IGxpLFxuICAgIC5jLWZvb3RlciBsaSA+IGxpIGEsXG4gICAgLmMtZm9vdGVyIGxpID4gYSxcbiAgICAuYy1mb290ZXIgc3BhbiA+IGxpLFxuICAgIC5jLWZvb3RlciBzcGFuID4gbGkgYSxcbiAgICAuYy1mb290ZXIgc3BhbiA+IGEsXG4gICAgLmMtZm9vdGVyIGEgPiBsaSxcbiAgICAuYy1mb290ZXIgYSA+IGxpIGEsXG4gICAgLmMtZm9vdGVyIGEgPiBhIHtcbiAgICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmMtZm9vdGVyIHAsXG4gICAgICAuYy1mb290ZXIgdWwsXG4gICAgICAuYy1mb290ZXIgbGksXG4gICAgICAuYy1mb290ZXIgc3BhbixcbiAgICAgIC5jLWZvb3RlciBhIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7IH0gfVxuICAuYy1mb290ZXIgdWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAuYy1mb290ZXItLXJ1bGUge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMTUxNTE1OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYy1mb290ZXItYmxvY2sge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZThlOGU4O1xuICAgIG1hcmdpbi10b3A6IDUuNXZoO1xuICAgIHBhZGRpbmctdG9wOiA1LjV2aDsgfSB9XG5cbi5jLWZvb3Rlci1sb2dvID4gaW1nIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgd2lkdGg6IDE1MHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLWZvb3Rlci1sb2dvID4gaW1nIHtcbiAgICAgIHdpZHRoOiAxODBweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYy1mb290ZXItaGlkZU1vYmlsZUxvZ28ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4uYy1mb290ZXItaW5mb0RldGFpbHMsXG4uYy1mb290ZXItbmV3c0Zvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWZvb3Rlci1pbmZvRGV0YWlscyxcbiAgICAuYy1mb290ZXItbmV3c0Zvcm0ge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG5cbi5jLWZvb3Rlci1uZXdzRm9ybSB7XG4gIG1hcmdpbi1ib3R0b206IDQuMTI1dmg7IH1cbiAgLmMtZm9vdGVyLW5ld3NGb3JtID4gZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7IH1cblxuLmMtZm9vdGVyLWluZm9EZXRhaWxzID4gKiB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmMtZm9vdGVyLWluZm9EZXRhaWxzID4gKiBsaSB7XG4gICAgbGluZS1oZWlnaHQ6IDEuOTY7IH1cbiAgLmMtZm9vdGVyLWluZm9EZXRhaWxzID4gKjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogMS4zNzV2aDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1mb290ZXItaW5mb0RldGFpbHMgPiAqOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBtYXJnaW4tbGVmdDogMi43NXZoOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLWZvb3Rlci1pbmZvRGV0YWlscyA+ICo6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQuMTI1dmg7IH0gfVxuXG4udS1mb290ZXJSb3dJdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBsaW5lLWhlaWdodDogMS41ICFpbXBvcnRhbnQ7XG4gIG1hcmdpbi10b3A6IGNhbGMoIDEuMzc1dmggKyA5cHgpOyB9XG5cbi51LWZvb3RlckJhY2tUb3Age1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMnB4O1xuICByaWdodDogMjRweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudS1mb290ZXJCYWNrVG9wIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcmlnaHQ6IDM2cHg7IH0gfVxuXG4uYy1mb290ZXIgLm8tbGlzdENsZWFuIHtcbiAgbWFyZ2luLWJvdHRvbTogMDsgfVxuXG4uYy1mb290ZXItYmxvY2sgcCxcbi5jLWZvb3Rlci1ibG9jayB1bCxcbi5jLWZvb3Rlci1ibG9jayBsaSxcbi5jLWZvb3Rlci1ibG9jayBzcGFuLFxuLmMtZm9vdGVyLWJsb2NrIGEsXG4uYy1mb290ZXItaW5mbyBwLFxuLmMtZm9vdGVyLWluZm8gdWwsXG4uYy1mb290ZXItaW5mbyBsaSxcbi5jLWZvb3Rlci1pbmZvIHNwYW4sXG4uYy1mb290ZXItaW5mbyBhIHtcbiAgY29sb3I6ICM2MzYzNjM7IH1cblxuLmMtbmF2IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAgMzZweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1uYXYge1xuICAgICAgcGFkZGluZzogMCA0JTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNDQwcHgpIHtcbiAgICAuYy1uYXYge1xuICAgICAgcGFkZGluZzogMCAxMiU7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMjAwMHB4KSB7XG4gICAgLmMtbmF2IHtcbiAgICAgIHBhZGRpbmc6IDAgMTglOyB9IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmMtbmF2IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAuYy1mb290ZXIgLmMtbmF2IHtcbiAgICBtYXJnaW4tYm90dG9tOiA2Ljg3NXZoOyB9XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuYy1mb290ZXIgLmMtbmF2IHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlOGU4ZTg7XG4gICAgICAgIG1hcmdpbi10b3A6IDUuNXZoO1xuICAgICAgICBwYWRkaW5nLXRvcDogNS41dmg7IH0gfVxuXG4uYy1uYXYtaXRlbSB7XG4gIGZsZXgtc2hyaW5rOiAxO1xuICBtYXJnaW46IDA7IH1cbiAgLmMtbmF2LWl0ZW0gYSB7XG4gICAgY29sb3I6ICMxNTE1MTU7XG4gICAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgZm9udC1mYW1pbHk6IEJvbGQsIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1ib3R0b206IDZweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgICAgLmMtbmF2LWl0ZW0gYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgICAgLmMtbmF2LWl0ZW0gYSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gICAgLmMtbmF2LWl0ZW0gYSA+IGxpLFxuICAgIC5jLW5hdi1pdGVtIGEgPiBsaSBhLFxuICAgIC5jLW5hdi1pdGVtIGEgPiBhIHtcbiAgICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLmMtbmF2LWl0ZW0gYSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cbiAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgIC5jLW5hdi1pdGVtIGEge1xuICAgICAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDFweDsgfSB9XG4gIC5jLW5hdi1pdGVtLmlzLWFjdGl2ZSBhIHtcbiAgICBib3JkZXItY29sb3I6ICMxNTE1MTU7IH1cbiAgLmMtbmF2LWl0ZW06aG92ZXIgYSwgLmMtbmF2LWl0ZW06YWN0aXZlIGEsIC5jLW5hdi1pdGVtOmZvY3VzIGEge1xuICAgIGJvcmRlci1jb2xvcjogIzE1MTUxNTtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmMtZm9vdGVyIC5jLW5hdi1pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi10b3A6IDEuMzc1dmg7IH0gfVxuICAuYy1mb290ZXIgLmMtbmF2LWl0ZW0uaXMtYWN0aXZlIGEge1xuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yOyB9XG5cbi5jLW5hdi10cmlnZ2VyIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBNZWRpdW0sIC1hcHBsZS1zeXN0ZW0sIEJsaW5rTWFjU3lzdGVtRm9udCwgXCJSb2JvdG9cIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkRyb2lkIFNhbnNcIiwgXCJTZWdvZSBVSVwiLCBcIkZpcmEgU2Fuc1wiLCBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBsZXR0ZXItc3BhY2luZzogMC4wNzVlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGxpbmUtaGVpZ2h0OiAyICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDZweCAxMnB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAyNHB4O1xuICB0b3A6IDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgLmMtbmF2LXRyaWdnZXIge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC5jLW5hdi10cmlnZ2VyIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC5jLW5hdi10cmlnZ2VyID4gbGksXG4gIC5jLW5hdi10cmlnZ2VyID4gbGkgYSxcbiAgLmMtbmF2LXRyaWdnZXIgPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLmMtbmF2LXRyaWdnZXIge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7IH0gfVxuICAuYy1uYXYtdHJpZ2dlcjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICdcXDI2MzAnO1xuICAgIG1hcmdpbi1yaWdodDogM3B4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC5jLW5hdi10cmlnZ2VyIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG4udC1idXR0b24ge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7XG4gIGJvcmRlci1jb2xvcjogIzE1MTUxNTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIHBhZGRpbmc6IDZweCAzNnB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmRmZGZkO1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiA0NHB4ICFpbXBvcnRhbnQ7IH1cbiAgLnQtYnV0dG9uW2Rpc2FibGVkXSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjYjNiM2IzO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNiM2IzYjM7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBvcGFjaXR5OiAwLjQ7IH1cbiAgLnQtYnV0dG9uOmhvdmVyLCAudC1idXR0b246YWN0aXZlLCAudC1idXR0b246Zm9jdXMge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAgIC50LWJ1dHRvbiB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLnQtYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDsgfSB9XG4gIC50LWJ1dHRvbiA+IGxpLFxuICAudC1idXR0b24gPiBsaSBhLFxuICAudC1idXR0b24gPiBhIHtcbiAgICBjb2xvcjogY3VycmVudENvbG9yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgICBtYXJnaW46IDA7IH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgLnQtYnV0dG9uIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9IH1cbiAgLnQtYnV0dG9uOmhvdmVyLCAudC1idXR0b246YWN0aXZlLCAudC1idXR0b246Zm9jdXMge1xuICAgIGNvbG9yOiAjZmRmZGZkO1xuICAgIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuXG4udC1idXR0b24tLWZ1bGwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi50LWJ1dHRvbi0tbGluZUhlaWdodCB7XG4gIGxpbmUtaGVpZ2h0OiA0NHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctdG9wOiAwO1xuICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuXG4udC1idXR0b24tLXJldiB7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogNTAwbXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE1MTUxNTtcbiAgYm9yZGVyLWNvbG9yOiAjMTUxNTE1O1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDFweDtcbiAgcGFkZGluZzogNnB4IDM2cHg7XG4gIGZvbnQtc3RyZXRjaDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICNmZGZkZmQ7XG4gIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGluZS1oZWlnaHQ6IDQ0cHggIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICBib3JkZXItd2lkdGg6IDFweDsgfVxuICAudC1idXR0b24tLXJldltkaXNhYmxlZF0ge1xuICAgIGJvcmRlci1jb2xvcjogI2IzYjNiMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNiM2IzO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC50LWJ1dHRvbi0tcmV2OmhvdmVyLCAudC1idXR0b24tLXJldjphY3RpdmUsIC50LWJ1dHRvbi0tcmV2OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24tLXJldiB7XG4gICAgICBmb250LXNpemU6IDEycHg7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gICAgLnQtYnV0dG9uLS1yZXYge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgLnQtYnV0dG9uLS1yZXYgPiBsaSxcbiAgLnQtYnV0dG9uLS1yZXYgPiBsaSBhLFxuICAudC1idXR0b24tLXJldiA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAudC1idXR0b24tLXJldiB7XG4gICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gIC50LWJ1dHRvbi0tcmV2OmhvdmVyLCAudC1idXR0b24tLXJldjphY3RpdmUsIC50LWJ1dHRvbi0tcmV2OmZvY3VzIHtcbiAgICBjb2xvcjogI2ZkZmRmZDtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cblxuLyogdW5jc3M6aWdub3JlICovXG4udC1idXR0b24tLXByaW1hcnkge1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDUwMG1zO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNTE1MTU7XG4gIGJvcmRlci1jb2xvcjogIzE1MTUxNTtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XG4gIHBhZGRpbmc6IDZweCAzNnB4O1xuICBmb250LXN0cmV0Y2g6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBmb250LXNpemU6IDEwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAjZmRmZGZkO1xuICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiA0NHB4ICFpbXBvcnRhbnQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogNnB4IDI0cHg7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC50LWJ1dHRvbi0tcHJpbWFyeVtkaXNhYmxlZF0ge1xuICAgIGJvcmRlci1jb2xvcjogI2IzYjNiMztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjNiM2IzO1xuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgb3BhY2l0eTogMC40OyB9XG4gIC50LWJ1dHRvbi0tcHJpbWFyeTpob3ZlciwgLnQtYnV0dG9uLS1wcmltYXJ5OmFjdGl2ZSwgLnQtYnV0dG9uLS1wcmltYXJ5OmZvY3VzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTUxNTE1O1xuICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAudC1idXR0b24tLXByaW1hcnkge1xuICAgICAgZm9udC1zaXplOiAxMnB4OyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDEyMDBweCkge1xuICAgIC50LWJ1dHRvbi0tcHJpbWFyeSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAudC1idXR0b24tLXByaW1hcnkgPiBsaSxcbiAgLnQtYnV0dG9uLS1wcmltYXJ5ID4gbGkgYSxcbiAgLnQtYnV0dG9uLS1wcmltYXJ5ID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC50LWJ1dHRvbi0tcHJpbWFyeSB7XG4gICAgICBsaW5lLWhlaWdodDogMS4yNTsgfSB9XG4gIC50LWJ1dHRvbi0tcHJpbWFyeTpob3ZlciwgLnQtYnV0dG9uLS1wcmltYXJ5OmFjdGl2ZSwgLnQtYnV0dG9uLS1wcmltYXJ5OmZvY3VzIHtcbiAgICBjb2xvcjogI2ZkZmRmZDtcbiAgICBmb250LWZhbWlseTogQm9sZCwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7IH1cblxuLnQtYnV0dG9uQ2xvc2Uge1xuICBjb2xvcjogIzE1MTUxNTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMTJweDtcbiAgdG9wOiAxMnB4O1xuICB6LWluZGV4OiAxMDAwO1xuICByaWdodDogMjRweDtcbiAgdG9wOiAzMXB4OyB9XG4gIC50LWJ1dHRvbkNsb3NlOmhvdmVyLCAudC1idXR0b25DbG9zZTphY3RpdmUsIC50LWJ1dHRvbkNsb3NlOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lOyB9XG5cbmlucHV0OmhvdmVyLCBpbnB1dDphY3RpdmUsIGlucHV0OmZvY3VzLFxudGV4dGFyZWE6aG92ZXIsXG50ZXh0YXJlYTphY3RpdmUsXG50ZXh0YXJlYTpmb2N1cyxcbnNlbGVjdDpob3ZlcixcbnNlbGVjdDphY3RpdmUsXG5zZWxlY3Q6Zm9jdXMsXG5sYWJlbDpob3ZlcixcbmxhYmVsOmFjdGl2ZSxcbmxhYmVsOmZvY3VzIHtcbiAgb3V0bGluZTogMDsgfVxuXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbi5zZWxlY3Qgc2VsZWN0LFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHJlc2l6ZTogbm9uZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmRmZDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RiZGJkYjtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgbGluZS1oZWlnaHQ6IDQ0cHggIWltcG9ydGFudDtcbiAgcGFkZGluZzogMCAxMnB4O1xuICB0cmFuc2l0aW9uOiBhbGwgNTAwbXMgZWFzZS1vdXQ7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gICAgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gICAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICAgIGlucHV0W3R5cGU9XCJ0ZWxcIl0sXG4gICAgaW5wdXRbdHlwZT1cImRhdGVcIl0sXG4gICAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICAgIC5zZWxlY3Qgc2VsZWN0LFxuICAgIHRleHRhcmVhIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gICAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gICAgLnNlbGVjdCBzZWxlY3QsXG4gICAgdGV4dGFyZWEge1xuICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl0gPiBsaSxcbiAgaW5wdXRbdHlwZT1cInRleHRcIl0gPiBsaSBhLFxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSA+IGEsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSA+IGxpLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0gPiBsaSBhLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl0gPiBhLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdID4gbGksXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl0gPiBsaSBhLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdID4gYSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0gPiBsaSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0gPiBsaSBhLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSA+IGEsXG4gIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSA+IGxpLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0gPiBsaSBhLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0gPiBhLFxuICAuc2VsZWN0IHNlbGVjdCA+IGxpLFxuICAuc2VsZWN0IHNlbGVjdCA+IGxpIGEsXG4gIC5zZWxlY3Qgc2VsZWN0ID4gYSxcbiAgdGV4dGFyZWEgPiBsaSxcbiAgdGV4dGFyZWEgPiBsaSBhLFxuICB0ZXh0YXJlYSA+IGEge1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0sXG4gICAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gICAgLnNlbGVjdCBzZWxlY3QsXG4gICAgdGV4dGFyZWEge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7IH0gfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwiZW1haWxcIl06LXdlYmtpdC1hdXRvZmlsbCxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXTotd2Via2l0LWF1dG9maWxsLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06LXdlYmtpdC1hdXRvZmlsbCxcbiAgLnNlbGVjdCBzZWxlY3Q6LXdlYmtpdC1hdXRvZmlsbCxcbiAgdGV4dGFyZWE6LXdlYmtpdC1hdXRvZmlsbCB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMCA2LjI1cmVtICNmN2Y3ZjcgaW5zZXQ7XG4gICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6ICMxNTE1MTU7XG4gICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXTo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyLFxuICAuc2VsZWN0IHNlbGVjdDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgdGV4dGFyZWE6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJ0ZWxcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl06LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOi1tb3otcGxhY2Vob2xkZXIsXG4gIC5zZWxlY3Qgc2VsZWN0Oi1tb3otcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOi1tb3otcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7IH1cbiAgaW5wdXRbdHlwZT1cInRleHRcIl06Oi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl06Oi1tb3otcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJwYXNzd29yZFwiXTo6LW1vei1wbGFjZWhvbGRlcixcbiAgLnNlbGVjdCBzZWxlY3Q6Oi1tb3otcGxhY2Vob2xkZXIsXG4gIHRleHRhcmVhOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjcpOyB9XG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInRlbFwiXTotbXMtaW5wdXQtcGxhY2Vob2xkZXIsXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdOi1tcy1pbnB1dC1wbGFjZWhvbGRlcixcbiAgLnNlbGVjdCBzZWxlY3Q6LW1zLWlucHV0LXBsYWNlaG9sZGVyLFxuICB0ZXh0YXJlYTotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNyk7IH1cblxudGV4dGFyZWEge1xuICBsaW5lLWhlaWdodDogMS41OyB9XG5cbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxub3B0aW9uW3R5cGU9XCJzZWxlY3RlZFwiXSB7XG4gIGNvbG9yOiByZ2JhKDIxLCAyMSwgMjEsIDAuNSk7IH1cblxuLmMtZm9ybVdyYXBwZXItbm90ZSB7XG4gIGNvbG9yOiAjMTUxNTE1O1xuICBmb250LWZhbWlseTogTWVkaXVtLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMTI1ZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIG1hcmdpbi1ib3R0b206IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC1mYW1pbHk6IE1lZGl1bSwgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBCb2xkLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMSwgMjEsIDIxLCAwLjE1KTtcbiAgbWFyZ2luOiA1LjV2aCAwIDA7XG4gIHBhZGRpbmc6IDEycHggMjRweDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1mb3JtV3JhcHBlci1ub3RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1mb3JtV3JhcHBlci1ub3RlIHtcbiAgICAgIGZvbnQtc2l6ZTogMjNweDsgfSB9XG4gIC5jLWZvcm1XcmFwcGVyLW5vdGUgPiBsaSxcbiAgLmMtZm9ybVdyYXBwZXItbm90ZSA+IGxpIGEsXG4gIC5jLWZvcm1XcmFwcGVyLW5vdGUgPiBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGNvbG9yOiBjdXJyZW50Q29sb3I7XG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgIG1hcmdpbjogMDsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAuYy1mb3JtV3JhcHBlci1ub3RlIHtcbiAgICAgIHBhZGRpbmc6IDI0cHggMjAlIDI0cHggNDhweDsgfSB9XG4gIC5jLWZvcm1XcmFwcGVyLW5vdGUgfiAuYy1mb3JtV3JhcHBlciB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBwYWRkaW5nLXRvcDogMThweDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgLmMtZm9ybVdyYXBwZXItbm90ZSB+IC5jLWZvcm1XcmFwcGVyIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDM2cHg7IH0gfVxuXG4uYy1mb3JtV3JhcHBlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjEsIDIxLCAyMSwgMC4wOSk7XG4gIG1hcmdpbjogNS41dmggMCAwO1xuICBwYWRkaW5nOiAyNHB4OyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5jLWZvcm1XcmFwcGVyIHtcbiAgICAgIHBhZGRpbmc6IDQ4cHg7IH0gfVxuXG4uYy1mb3JtIHtcbiAgbWFyZ2luLXRvcDogNDhweDsgfVxuICAuYy1mb3JtV3JhcHBlciAuYy1mb3JtIHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5jLWZvcm0tbGFiZWxCbG9jayB7XG4gIG1hcmdpbi10b3A6IDI0cHg7IH1cbiAgLmMtZm9ybS1sYWJlbEJsb2NrIH4gLnNlbGVjdCxcbiAgLmMtZm9ybS1sYWJlbEJsb2NrID4gaW5wdXQsXG4gIC5jLWZvcm0tbGFiZWxCbG9jayA+IHRleHRhcmVhIHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7IH1cblxuLmMtZm9ybSBsYWJlbCxcbi5jLWZvcm0gLmxhYmVsIHtcbiAgY29sb3I6ICMxNTE1MTU7XG4gIGZvbnQtZmFtaWx5OiBCbGFjaywgLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlJvYm90b1wiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiRHJvaWQgU2Fuc1wiLCBcIlNlZ29lIFVJXCIsIFwiRmlyYSBTYW5zXCIsIFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICBsaW5lLWhlaWdodDogMS45NjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzE1MTUxNTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtZmFtaWx5OiBSZWd1bGFyLCAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgICAuYy1mb3JtIGxhYmVsLFxuICAgIC5jLWZvcm0gLmxhYmVsIHtcbiAgICAgIGZvbnQtc2l6ZTogMTFweDsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgICAuYy1mb3JtIGxhYmVsLFxuICAgIC5jLWZvcm0gLmxhYmVsIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDsgfSB9XG4gIC5jLWZvcm0gbGFiZWwgPiBsaSxcbiAgLmMtZm9ybSBsYWJlbCA+IGxpIGEsXG4gIC5jLWZvcm0gbGFiZWwgPiBhLFxuICAuYy1mb3JtIC5sYWJlbCA+IGxpLFxuICAuYy1mb3JtIC5sYWJlbCA+IGxpIGEsXG4gIC5jLWZvcm0gLmxhYmVsID4gYSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgIC5jLWZvcm0gbGFiZWwsXG4gICAgLmMtZm9ybSAubGFiZWwge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjU7IH0gfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAuYy1mb3JtIGxhYmVsLFxuICAgIC5jLWZvcm0gLmxhYmVsIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOyB9IH1cblxuLmMtZm9ybSAuc2VsZWN0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jLWZvcm0gLnNlbGVjdDphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiAxLjI1cmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBtYXJnaW4tdG9wOiAtLjE1cmVtO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIGJvcmRlci10b3A6IC4zNXJlbSBzb2xpZDtcbiAgICBib3JkZXItcmlnaHQ6IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAuMzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQ6IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDsgfVxuXG4uYy1mb3JtIC5zZWxlY3Qgc2VsZWN0IHtcbiAgY29sb3I6ICM5YTlhOWE7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3V0bGluZTogMDtcbiAgYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4uYy1mb3JtLWFsZXJ0IHtcbiAgY29sb3I6ICNDNjBDMEM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA2NnB4O1xuICByaWdodDogMDsgfVxuXG4vKiB1bmNzczppZ25vcmUgKi9cbi5jLWljb24ge1xuICB3aWR0aDogMTc5cHg7XG4gIGhlaWdodDogNzBweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmaWxsOiAjMTUxNTE1O1xuICBsaW5lLWhlaWdodDogMTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLmMtaWNvbjpob3ZlciwgLmMtaWNvbjphY3RpdmUsIC5jLWljb246Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cblxuLmMtc2hhcmVXcmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLmMtc2hhcmUge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7IH1cblxuLmFmZml4LFxuLmFmZml4LWJvdHRvbSB7XG4gIHRvcDogNDhweDtcbiAgd2lkdGg6IDI2OHB4OyB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAuYWZmaXgge1xuICAgIHBvc2l0aW9uOiBmaXhlZDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAuYWZmaXgtYm90dG9tIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IH0gfVxuXG4udS1tYXJnaW5OVEQzIHtcbiAgbWFyZ2luLXRvcDogLThweCAhaW1wb3J0YW50OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDNweCkge1xuICAudS1zbURvd24tZmxleE9yZGVyRmlyc3Qge1xuICAgIG9yZGVyOiAtMSAhaW1wb3J0YW50OyB9IH1cblxuLnUtaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnUtc20taGlkZSB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC51LXNtRG93bi1oaWRlIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4udS1wb3NSZWxhdGl2ZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50OyB9XG5cbi51LWNvbG9yQmFzZSB7XG4gIGNvbG9yOiAjZGJkYmRiICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JNdXRlZCB7XG4gIGNvbG9yOiAjYjNiM2IzICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JNZWRpdW0ge1xuICBjb2xvcjogZ3JheSAhaW1wb3J0YW50OyB9XG5cbi51LWNvbG9yRGFyayB7XG4gIGNvbG9yOiAjNjM2MzYzICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCcmFuZCB7XG4gIGNvbG9yOiAjMTUxNTE1ICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JOZXV0cmFsRGFyayB7XG4gIGNvbG9yOiAjZGNkOGQxICFpbXBvcnRhbnQ7IH1cblxuLnUtaW5saW5lQmxvY2tXcmFwcGVyID4gKiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4udS1ibG9ja1NwYWNlVCB7XG4gIG1hcmdpbi10b3A6IDUuNXZoOyB9XG5cbi51LW1hcmdpblQwIHtcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbi51LXNwYWNlMCB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50OyB9XG5cbi51LXNwYWNlVDFvZjQge1xuICBtYXJnaW4tdG9wOiA2cHg7IH1cblxuLnUtc3BhY2VURDIge1xuICBtYXJnaW4tdG9wOiAxMnB4ICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VUIHtcbiAgbWFyZ2luLXRvcDogMjRweCAhaW1wb3J0YW50OyB9XG5cbi51LXNwYWNlVDIge1xuICBtYXJnaW4tdG9wOiA0OHB4ICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VCIHtcbiAgbWFyZ2luLWJvdHRvbTogMjRweCAhaW1wb3J0YW50OyB9XG5cbi51LXNwYWNlQjIge1xuICBtYXJnaW4tYm90dG9tOiA0OHB4ICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VCNCB7XG4gIG1hcmdpbi1ib3R0b206IDk2cHggIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNTQ0cHgpIHtcbiAgLnUtc20tc3BhY2VMTjEge1xuICAgIG1hcmdpbi1sZWZ0OiAtMXB4OyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU0NHB4KSB7XG4gIC51LXNtLXNwYWNlVCB7XG4gICAgbWFyZ2luLXRvcDogMjRweDsgfSB9XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NDRweCkge1xuICAudS1zbS1zcGFjZVQyIHtcbiAgICBtYXJnaW4tdG9wOiA0OHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU0M3B4KSB7XG4gIC51LXNtRG93bi1zcGFjZVIge1xuICAgIG1hcmdpbi1yaWdodDogMjRweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDNweCkge1xuICAudS1zbURvd24tc3BhY2VURDIge1xuICAgIG1hcmdpbi10b3A6IDEycHg7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTQzcHgpIHtcbiAgLnUtc21Eb3duLXNwYWNlVCB7XG4gICAgbWFyZ2luLXRvcDogMjRweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDNweCkge1xuICAudS1zbURvd24tc3BhY2VUMiB7XG4gICAgbWFyZ2luLXRvcDogNDhweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDNweCkge1xuICAudS1zbURvd24tYmxvY2tSLS0zYnk0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDQuMTI1dmg7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTQzcHgpIHtcbiAgLnUtc21Eb3duLWJsb2NrVC0tM2J5NCB7XG4gICAgbWFyZ2luLXRvcDogNC4xMjV2aDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NDNweCkge1xuICAudS1zbURvd24tYmxvY2tCLS0zYnk0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA0LjEyNXZoOyB9IH1cblxuLnUtc20tYmxvY2tCLS0xYnk0IHtcbiAgbWFyZ2luLWJvdHRvbTogMS4zNzV2aDsgfVxuXG4udS1zbS1ibG9ja0ItLTFieTMge1xuICBtYXJnaW4tYm90dG9tOiAxLjgzMzMzdmg7IH1cblxuLnUtc20tYmxvY2tCLS0xYnkyIHtcbiAgbWFyZ2luLWJvdHRvbTogMi43NXZoOyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5NCB7XG4gIG1hcmdpbi10b3A6IDEuMzc1dmg7IH1cblxuLnUtc20tYmxvY2tULS0xYnkzIHtcbiAgbWFyZ2luLXRvcDogMS44MzMzM3ZoOyB9XG5cbi51LXNtLWJsb2NrVC0tMWJ5MiB7XG4gIG1hcmdpbi10b3A6IDIuNzV2aDsgfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE5PUk1BTElaRVxuLy8gICAxNjA2Mjlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgbGluZS1oZWlnaHQgZm9yIGFsbCBoZWFkaW5ncyBpbiBDaHJvbWUgbW9iaWxlLCBGaXJlZm94LFxuICogaU9TIFNhZmFyaSwgTWljcm9zb2Z0IEVkZ2UgYW5kIElFLlxuICovXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBCQVNFXG4vLyAgIFZlcnNpb24gMi4wLjAgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvYmFzZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vKipcbiAqIEEgdGhpbiBsYXllciBvbiB0b3Agb2Ygbm9ybWFsaXplLmNzcyB0aGF0IHByb3ZpZGVzIGEgc3RhcnRpbmcgcG9pbnQgbW9yZVxuICogc3VpdGFibGUgZm9yIHdlYiBhcHBsaWNhdGlvbnMuXG4gKi9cblxuLyoqXG4gKiBQcmV2ZW50IG1hcmdpbiBhbmQgYm9yZGVyIGZyb20gYWZmZWN0aW5nIGVsZW1lbnQgd2lkdGguXG4gKiBodHRwczovL2dvby5nbC9wWXRiSzdcbiAqXG4gKi9cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogUmVtb3ZlcyB0aGUgZGVmYXVsdCBzcGFjaW5nIGFuZCBib3JkZXIgZm9yIGFwcHJvcHJpYXRlIGVsZW1lbnRzLlxuICovXG5cbmJsb2NrcXVvdGUsXG5kbCxcbmRkLFxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxuZmlndXJlLFxucCxcbnByZSB7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBXb3JrIGFyb3VuZCBhIEZpcmVmb3gvSUUgYnVnIHdoZXJlIHRoZSB0cmFuc3BhcmVudCBgYnV0dG9uYCBiYWNrZ3JvdW5kXG4gKiByZXN1bHRzIGluIGEgbG9zcyBvZiB0aGUgZGVmYXVsdCBgYnV0dG9uYCBmb2N1cyBzdHlsZXMuXG4gKi9cblxuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZDtcbiAgb3V0bGluZTogNXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yO1xufVxuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG5pZnJhbWUge1xuICBib3JkZXI6IDA7XG59XG5cbm9sLFxudWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogU3VwcHJlc3MgdGhlIGZvY3VzIG91dGxpbmUgb24gZWxlbWVudHMgdGhhdCBjYW5ub3QgYmUgYWNjZXNzZWQgdmlhIGtleWJvYXJkLlxuICogVGhpcyBwcmV2ZW50cyBhbiB1bndhbnRlZCBmb2N1cyBvdXRsaW5lIGZyb20gYXBwZWFyaW5nIGFyb3VuZCBlbGVtZW50cyB0aGF0XG4gKiBtaWdodCBzdGlsbCByZXNwb25kIHRvIHBvaW50ZXIgZXZlbnRzLlxuICovXG5cblt0YWJpbmRleD1cIi0xXCJdOmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEZVTkNUSU9OU1xuLy8gICBUaGVzZSBhcmUgbW9zdGx5IHBhc3NlZCBpbnRvIG1peGlucywgc28gc291cmNlIHRoZW0gYmVmb3JlIG1peGlucy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQWNjZXNzIG5lc3RlZCBtYXBzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVE9ETzogYWRkIGFuIGVycm9yIG1lc3NhZ2UsIGxpa2U6XG4vLyBAaWYgKCR2YWx1ZSA9PSBudWxsKSB7XG4vLyAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7IH1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG4vLyBTZWU6IGh0dHA6Ly9jb2RlcGVuLmlvL2pha2VhbGJhdWdoL3Bvc3QvdXNpbmctc2Fzcy1mdW5jdGlvbnMtdG8tYWNjZXNzLWNvbXBsZXgtdmFyaWFibGUtbWFwc1xuXG5AZnVuY3Rpb24gbWFwLWZldGNoKCRtYXAsICRrZXlzLi4uKSB7XG5cdCR2YWx1ZTogJG1hcDtcblx0QGVhY2ggJGtleSBpbiAka2V5cyB7XG5cdFx0JHZhbHVlOiBtYXAtZ2V0KCR2YWx1ZSwgJGtleSk7XG5cdH1cblx0QHJldHVybiAkdmFsdWU7XG59XG5cbi8vIEV4YW1wbGU6XG5cbiRjb25maWc6IChcbiAgdGhlbWVzOiAoXG5cdG1pc3Q6IChcblx0ICBoZWFkZXI6ICNkY2ZhYzAsXG5cdCAgY29udGVudDogIzAwOTY4Yixcblx0ICBmb290ZXI6ICM4NWM3OWNcblx0KSxcblx0c3ByaW5nOiAoXG5cdCAgaGVhZGVyOiAjZjRmYWM3LFxuXHQgIGNvbnRlbnQ6ICNjMjQ1NGUsXG5cdCAgZm9vdGVyOiAjZmZiMTU4XG5cdClcbiAgKVxuKTtcblxuLy8gZ2V0IHRoZSBtaXN0IGhlYWRlciBjb2xvciAjZGNmYWMwOlxuLy8gbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsIFwibWlzdFwiLCBcImhlYWRlclwiKVxuXG4vLyBwcmludCBlYWNoIHZhbHVlIGZyb20gdGhlIG1hcCB0byBhIGNsYXNzOlxuQGVhY2ggJHRoZW1lIGluIG1hcC1rZXlzKCBtYXAtZ2V0KCRjb25maWcsIFwidGhlbWVzXCIpICkge1xuXG4gIC4jeyR0aGVtZX0ge1xuXHQuaGVhZGVyICB7IGJhY2tncm91bmQtY29sb3I6IG1hcC1mZXRjaCgkY29uZmlnLCBcInRoZW1lc1wiLCAkdGhlbWUsIFwiaGVhZGVyXCIgICk7IH1cblx0LmNvbnRlbnQgeyBiYWNrZ3JvdW5kLWNvbG9yOiBtYXAtZmV0Y2goJGNvbmZpZywgXCJ0aGVtZXNcIiwgJHRoZW1lLCBcImNvbnRlbnRcIiApOyB9XG5cdC5mb290ZXIgIHsgYmFja2dyb3VuZC1jb2xvcjogbWFwLWZldGNoKCRjb25maWcsIFwidGhlbWVzXCIsICR0aGVtZSwgXCJmb290ZXJcIiAgKTsgfVxuICB9XG5cbn1cblxuLy8gT1VJIG1hcC1mZXRjaFxuLy8gQGZ1bmN0aW9uIG1hcC1mZXRjaCgkbWFwLCAka2V5cykge1xuLy8gICAka2V5OiBudGgoJGtleXMsIDEpO1xuLy8gICAkbGVuZ3RoOiBsZW5ndGgoJGtleXMpO1xuLy8gICAkdmFsdWU6IG1hcC1nZXQoJG1hcCwgJGtleSk7XG4vLyAgIEBpZiAoJGxlbmd0aCA+IDEpIHtcbi8vICAgICAkcmVzdDogKCk7XG4vLyAgICAgQGZvciAkaSBmcm9tIDIgdGhyb3VnaCAkbGVuZ3RoIHtcbi8vICAgICAgICRyZXN0OiBhcHBlbmQoJHJlc3QsIG50aCgka2V5cywgJGkpKTtcbi8vICAgICB9XG4vLyAgICAgQGlmICgkdmFsdWUgPT0gbnVsbCkge1xuLy8gICAgICAgQGVycm9yIFwiVGhlIHZhbHVlICcjeyRrZXl9JyBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXCI7XG4vLyAgICAgfVxuLy8gICAgIEByZXR1cm4gbWFwLWZldGNoKCR2YWx1ZSwgJHJlc3QpXG4vLyAgIH0gQGVsc2Uge1xuLy8gICAgIEBpZiAoJHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIEBlcnJvciBcIlRoZSB2YWx1ZSAnI3ska2V5fScgZG9lc24ndCBleGlzdCBpbiB0aGUgbWFwLlwiO1xuLy8gICAgIH1cbi8vICAgICBAcmV0dXJuICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG4vLyBEZWJ1Z2dpbiBzYXNzIG1hcHNcbi8vIENhbid0IGdldCB0aGlzIHRvIHdvcmsgQVRNIGJ1dCBjb3VsZCBiZSB1c2VmdWwuXG4vLyBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vZGVidWdnaW5nLXNhc3MtbWFwcy9cblxuQG1peGluIGRlYnVnLW1hcCgkbWFwKSB7XG5cdEBhdC1yb290IHtcblx0XHRAZGVidWctbWFwIHtcblx0XHRcdF9fdG9TdHJpbmdfXzogaW5zcGVjdCgkbWFwKTtcblx0XHRcdF9fbGVuZ3RoX186IGxlbmd0aCgkbWFwKTtcblx0XHRcdF9fZGVwdGhfXzogZGVwdGgoJG1hcCk7XG5cdFx0XHRfX2tleXNfXzogbWFwLWtleXMoJG1hcCk7XG5cdFx0XHRfX3Byb3BlcnRpZXNfXyB7XG5cdFx0XHRcdEBlYWNoICRrZXksICR2YWx1ZSBpbiAkbWFwIHtcblx0XHRcdFx0XHQjeycoJyArIHR5cGUtb2YoJHZhbHVlKSArICcpICcgKyAka2V5fTogaW5zcGVjdCgkdmFsdWUpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cblxuLy8gU3Bpbi1vdXQgbWFwLWZldGNoIGZ1bmN0aW9ucyBmb3IgbW9zdC11c2VkIHN0eWxlcy5cbi8vIERvbmUgYXMgZnVuY3Rpb25zLCBub3QgbWl4aW5zLCBzbyB3ZSBjYW4gdXNlIHRoZW0gd2l0aGluXG4vLyBzdGFuZGFyZCBzdHlsZSBsaXN0cywgZS5nLiBjb2xvcjogcGFsZXR0ZSgpO1xuLy8gU2VlOlxuLy8gaHR0cDovL3d3dy5iaWdlbmcuaW8vaG93LXdlLXVzZS1zYXNzLW1hcHMtZm9yLWRlc2lnbi10b2tlbnMtYW5kLWRldmVsb3Blci1oYXBwaW5lc3MvXG4vLyBodHRwOi8vZXJza2luZWRlc2lnbi5jb20vYmxvZy9mcmllbmRsaWVyLWNvbG91ci1uYW1lcy1zYXNzLW1hcHMvXG4vLyBAZnVuY3Rpb24gcGFsZXR0ZSgkcGFsZXR0ZSwgJHRvbmU6ICdiYXNlJykge1xuLy8gICAgIEByZXR1cm4gbWFwLWdldChtYXAtZ2V0KCRwYWxldHRlcywgJHBhbGV0dGUpLCAkdG9uZSk7XG4vLyB9XG5cbi8vIEBmdW5jdGlvbiBjb2xvcigkdHlwZTogJ3VpJywgJGluY3JlbWVudDogJ2Jhc2UnKSB7XG4vLyAgICAgQHJldHVybiBtYXAtZmV0Y2goJGNvbG9yLCAkdHlwZSwgJGluY3JlbWVudCk7XG4vLyB9XG5cbkBmdW5jdGlvbiBwYWxldHRlKCRodWU6ICdncmV5LTI1Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkcGFsZXR0ZSwgJGh1ZSk7XG59XG5cbkBmdW5jdGlvbiBzaXplKCR0eXBlOiAnZm9udCcsICRpbmNyZW1lbnQ6ICd0ZXh0Jykge1xuXHRAcmV0dXJuIG1hcC1mZXRjaCgkc2l6ZSwgJHR5cGUsICRpbmNyZW1lbnQpO1xufVxuXG5AZnVuY3Rpb24gY29udGFpbmVyLXdpZHRoKCR3aWR0aDogJ2xnJykge1xuXHRAcmV0dXJuIG1hcC1nZXQoJGNvbnRhaW5lci1tYXgtd2lkdGhzLCAkd2lkdGgpO1xufVxuXG5AZnVuY3Rpb24gZm9udHNpemUoJGluY3JlbWVudDogJ1RleHQnLCAkcmVzcG9uc2U6ICdzbScpIHtcblx0Ly8gQHJldHVybiBtYXAtZmV0Y2goJHNpemUsIGZvbnQsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG5cdEByZXR1cm4gbWFwLWZldGNoKCRmb250c2l6ZXMsICRpbmNyZW1lbnQsICRyZXNwb25zZSk7XG59XG5cbkBmdW5jdGlvbiB0cmFuc2l0aW9uKCRwcm9wZXJ0eTogJ2R1cmF0aW9uJywgJHJlc3BvbnNlOiAnc2hvcnQnKSB7XG5cdEByZXR1cm4gbWFwLWZldGNoKCR0cmFuc2l0aW9uLCAkcHJvcGVydHksICRyZXNwb25zZSk7XG59XG5cbi8vIEkgdGhpbmsgdGhpcyBpcyBhIEdpcmF1ZGVsIGZ1bmN0aW9u4oCmXG4vLyBAbGluayBodHRwOi8vc2Fzcy1ndWlkZWxpbi5lcy8jZXJyb3JzXG4vLyBAbGluayBodHRwczovL2pvbnN1aC5jb20vYmxvZy9vcmdhbml6aW5nLXotaW5kZXgtd2l0aC1zYXNzL1xuXG5AZnVuY3Rpb24gZm9udC13ZWlnaHQoJGtleSkge1xuXHRAaWYgbm90IG1hcC1oYXMta2V5KCRmb250LXdlaWdodCwgJGtleSkge1xuXHRcdEBlcnJvciAnVGhlcmUgaXMgbm8ga2V5IG5hbWVkIGAjeyRrZXl9YCBpbiAkZm9udC13ZWlnaHRzLiAnXG5cdFx0XHQgKyAnS2V5IHNob3VsZCBiZSBvbmUgb2YgI3ttYXAta2V5cygkZm9udC13ZWlnaHQpfS4nO1xuXHR9XG5cblx0QHJldHVybiBtYXAtZ2V0KCRmb250LXdlaWdodCwgJGtleSk7XG59XG5cbkBtaXhpbiBmb250LXdlaWdodCgka2V5KSB7XG5cdC8vIGZvbnQtZmFtaWx5OiAkZm9udDtcblx0Zm9udC13ZWlnaHQ6IGZvbnQtd2VpZ2h0KCRrZXkpO1xufVxuXG5cbi8vIFRpbnRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBmdW5jdGlvbiB0aW50KCRjdXJyZW50LWNvbG9yLCAkcGVyY2VudCkge1xuXHRAcmV0dXJuIG1peCgjRkZGLCAkY3VycmVudC1jb2xvciwgJHBlcmNlbnQpO1xufVxuXG5cbi8vIFNwYWNlciBjb21wdXRhdGlvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNlZTogaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vamxvbmcvODc2MDI3NVxuLy8gU2VlOiBPVUk6cGFydGlhbHM6ZWxlbWVudHM6ZnVuY3Rpb25zXG5cbi8vIEBmdW5jdGlvbiBzcGFjZXIoJHZhbHVlKSB7XG4vLyAgIEBpZiAoJHZhbHVlICogMikgJSAxICE9IDAge1xuLy8gICAgIEB3YXJuICdTcGFjZXIgdmFsdWUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDAuNSc7XG4vLyAgICAgQHJldHVybiAnU3BhY2VyIHZhbHVlIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAwLjUnO1xuLy8gICB9IEBlbHNlIHtcbi8vICAgICBAcmV0dXJuICRzcGFjZXItdW5pdCAqICR2YWx1ZTtcbi8vICAgfVxuLy8gfVxuXG5AZnVuY3Rpb24gc3BhY2UoJHZhbHVlKSB7XG5cdEByZXR1cm4gJHNwYWNlLXVuaXQgKiAkdmFsdWU7XG59XG5cblxuLy8gU2N1dCBzdHJpcCB1bml0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvc3RyaXAtdW5pdC5odG1sXG5cbkBmdW5jdGlvbiBzY3V0LXN0cmlwLXVuaXQgKFxuXHQkbnVtXG4pIHtcblxuXHRAcmV0dXJuICRudW0gLyAoJG51bSAqIDAgKyAxKTtcblxufVxuXG5cbi8vIFNjdXQgcHggdG8gcmVtXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gaHR0cDovL2RhdmlkdGhlY2xhcmsuZ2l0aHViLmlvL3NjdXQvcmVtLmh0bWxcbi8vIFJlcXVpcmVzOiBgc2N1dC1zdHJpcC11bml0YC5cbi8vIFJlbmFtZWQgcmVtKCkgZnJvbSBzY3V0LXJlbSgpIGZvciBlYXNlIG9mIHVzZS5cblxuJHNjdXQtcmVtLWJhc2U6IDE2ICFkZWZhdWx0O1xuXG5AZnVuY3Rpb24gcmVtIChcblx0JHBpeGVsc1xuKSB7XG5cblx0JHJlbS12YWxzOiAoKTtcblx0QGVhY2ggJHZhbCBpbiAkcGl4ZWxzIHtcblx0XHQkdmFsLWluLXJlbXM6IHNjdXQtc3RyaXAtdW5pdCgkdmFsKSAvICRzY3V0LXJlbS1iYXNlICogMXJlbTtcblx0XHQkcmVtLXZhbHM6IGFwcGVuZCgkcmVtLXZhbHMsICR2YWwtaW4tcmVtcyk7XG5cdH1cblxuXHRAaWYgbGVuZ3RoKCRyZW0tdmFscykgPT0gMSB7XG5cdFx0Ly8gcmV0dXJuIGEgc2luZ2xlIHZhbHVlIGluc3RlYWQgb2YgYSBsaXN0LFxuXHRcdC8vIHNvIGl0IGNhbiBiZSB1c2VkIGluIGNhbGN1bGF0aW9uc1xuXHRcdEByZXR1cm4gbnRoKCRyZW0tdmFscywgMSk7XG5cdH1cblx0QGVsc2Uge1xuXHRcdEByZXR1cm4gJHJlbS12YWxzO1xuXHR9XG5cbn1cblxuXG4vLyBTY3V0IGZvbnQtZmFjZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGh0dHA6Ly9kYXZpZHRoZWNsYXJrLmdpdGh1Yi5pby9zY3V0L2ZvbnQtZmFjZS5odG1sXG4vLyBSZW5hbWVkIGZvbnQtZmFjZSgpIGZyb20gc2N1dC1mb250LWZhY2UoKSBmb3IgZWFzZSBvZiB1c2UuXG4vLyBPcmlnaW5hbCAkZm9ybWF0czogZW90IHdvZmYyIHdvZmYgdHRmIHN2Z1xuXG5AZnVuY3Rpb24gbWFpbi1zcmMoJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSkge1xuXHQvLyBSZXR1cm4gdGhlIGxpc3Qgb2YgYHNyY2AgdmFsdWVzLCBpbiBvcmRlciwgdGhhdFxuXHQvLyBhIGdvb2QgYEBmb250LWZhY2VgIHdpbGwgbmVlZCwgaW5jbHVkaW5nIG9ubHlcblx0Ly8gdGhvc2UgZm9ybWF0cyBzcGVjaWZpZWQgaW4gdGhlIGxpc3QgYCRmb3JtYXRzYC5cblx0JHJlc3VsdDogKCk7XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgZW90KSB7XG5cdFx0JGVvdC12YWw6IHVybCgnI3skZmlsZS1wYXRofS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkZW90LXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgd29mZjIpIHtcblx0XHQkd29mZjItdmFsOiB1cmwoJyN7JGZpbGUtcGF0aH0ud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmMi12YWwsIGNvbW1hKTtcblx0fVxuXHRAaWYgaW5kZXgoJGZvcm1hdHMsIHdvZmYpIHtcblx0XHQkd29mZi12YWw6IHVybCgnI3skZmlsZS1wYXRofS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR3b2ZmLXZhbCwgY29tbWEpO1xuXHR9XG5cdEBpZiBpbmRleCgkZm9ybWF0cywgdHRmKSB7XG5cdFx0JHR0Zi12YWw6IHVybCgnI3skZmlsZS1wYXRofS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG5cdFx0JHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsICR0dGYtdmFsLCBjb21tYSk7XG5cdH1cblx0QGlmIGluZGV4KCRmb3JtYXRzLCBzdmcpIHtcblx0XHQkc3ZnLXZhbDogdXJsKCcjeyRmaWxlLXBhdGh9LnN2ZyMjeyRmb250LWZhbWlseX0nKSBmb3JtYXQoJ3N2ZycpO1xuXHRcdCRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCAkc3ZnLXZhbCwgY29tbWEpO1xuXHR9XG5cdEByZXR1cm4gJHJlc3VsdDtcbn1cblxuQG1peGluIGZvbnQtZmFjZSAoXG5cdCRmb250LWZhbWlseSxcblx0JGZpbGUtcGF0aCxcblx0JHdlaWdodDogbm9ybWFsLFxuXHQkc3R5bGU6IG5vcm1hbCxcblx0JGZvcm1hdHM6IGVvdCB3b2ZmIHR0ZiBzdmdcbikge1xuXG5cdEBpZiBpbmRleCgnaXRhbGljJyAnb2JsaXF1ZScsICR3ZWlnaHQpIHtcblx0XHQkc3R5bGU6ICR3ZWlnaHQ7XG5cdFx0JHdlaWdodDogbm9ybWFsO1xuXHR9XG5cblx0QGZvbnQtZmFjZSB7XG5cdFx0Zm9udC1mYW1pbHk6ICRmb250LWZhbWlseTtcblx0XHRmb250LXdlaWdodDogJHdlaWdodDtcblx0XHRmb250LXN0eWxlOiAkc3R5bGU7XG5cblx0XHRAaWYgaW5kZXgoJGZvcm1hdHMsIGVvdCkge1xuXHRcdFx0c3JjOiB1cmwoJyN7JGZpbGUtcGF0aH0uZW90Jyk7XG5cdFx0fVxuXG5cdFx0c3JjOiBtYWluLXNyYyggJGZvcm1hdHMsICRmaWxlLXBhdGgsICRmb250LWZhbWlseSApO1xuXHR9XG5cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBWQVJJQUJMRSBTRVRUSU5HU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBOYW1lc3BhY2UgZm9yIHRoZW1laW5nICYgdGVzdGluZ1xuLy8gQXBwbHk6IC4jeyRuYW1lc3BhY2V9dGV4dGFyZWFcbi8vIERvbid0IHVzZSB0aGlzIG1ldGhvZCB0byBuYW1lc3BhY2UgdmFyaWFibGVz4oCmXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kbmFtZXNwYWNlICAgICAgICAgICAgIDogJyc7XG5cblxuLy8gQ29sb3Vyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGJhc2UtYmxhY2sgICAgICAgICAgICAgICAgICAgIDogIzAwMDtcbiRiYXNlLXdoaXRlICAgICAgICAgICAgICAgICAgICA6ICNGRkY7XG5cbiRzZWFzb24yMDE2ICAgICAgICAgICAgICAgICAgICA6ICM2NWJkMjQ7XG5cbiRwYWxldHRlOiAoXG4gICAgYmxhY2sgICAgICAgICAgICAgICAgICAgICAgOiAkYmFzZS1ibGFjayxcbiAgICB0ZXh0ICAgICAgICAgICAgICAgICAgICAgICA6ICMxNTE1MTUsXG4gICAgZGFyayAgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCAxNSUpLFxuICAgIGFzaCAgICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgMjIlKSxcbiAgICBjaGFyY29hbCAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDM5JSksXG4gICAgbWVkaXVtICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA1MCUpLFxuICAgIG11dGVkICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgNzAlKSxcbiAgICBiYXNlICAgICAgICAgICAgICAgICAgICAgICA6IHRpbnQoJGJhc2UtYmxhY2ssIDg2JSksXG4gICAgbGlnaHQgICAgICAgICAgICAgICAgICAgICAgOiB0aW50KCRiYXNlLWJsYWNrLCA5MSUpLFxuICAgIGZhaW50ICAgICAgICAgICAgICAgICAgICAgIDogdGludCgkYmFzZS1ibGFjaywgOTclKSxcbiAgICB3aGl0ZSAgICAgICAgICAgICAgICAgICAgICA6ICRiYXNlLXdoaXRlLFxuICAgIGJhY2tncm91bmQgICAgICAgICAgICAgICAgIDogI2ZkZmRmZCxcbiAgICBuZXV0cmFsICAgICAgICAgICAgICAgICAgICA6ICNGM0YyRjEsXG4gICAgbmV1dHJhbC10ZXh0ICAgICAgICAgICAgICAgOiBkYXJrZW4oI2YwZWVlYiwgMjclKSxcbiAgICBuZXV0cmFsLWRhcmsgICAgICAgICAgICAgICA6IGRhcmtlbigjZjBlZWViLCA5JSksXG4gICAgbmV1dHJhbC1saWdodCAgICAgICAgICAgICAgOiBsaWdodGVuKCNmMGVlZWIsIDQlKSxcbiAgICBicmFuZCAgICAgICAgICAgICAgICAgICAgICA6ICMxNTE1MTUsXG4gICAgYnJhbmQtY29tcGxlbWVudCAgICAgICAgICAgOiAjMmUyNDIzLFxuICAgIGJyYW5kLWNvdW50ZXIgICAgICAgICAgICAgIDogIzg4N0U3MyxcbiAgICBtb2RhbC1iYWNrZ3JvdW5kICAgICAgICAgICA6ICMxNTE1MTUsXG4gICAgd2FybmluZyAgICAgICAgICAgICAgICAgICAgOiAjRkZENDBDLFxuICAgIGJhZC1uZXdzICAgICAgICAgICAgICAgICAgIDogI0M2MEMwQyxcbiAgICBnb29kLW5ld3MgICAgICAgICAgICAgICAgICA6IGJyYW5kLWNvbXBsZW1lbnRcbik7XG5cblxuLy8gQmFzZSBzaXplIG1lYXN1cmVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kYmFzZS1mb250LXNpemUtdW5pdCAgICAgICAgICAgOiAxNjtcbiRiYXNlLWxpbmUtaGVpZ2h0LXVuaXQgICAgICAgICA6IDEuNTtcbiRiYXNlLWZvbnQtc2l6ZSAgICAgICAgICAgICAgICA6ICRiYXNlLWZvbnQtc2l6ZS11bml0ICogMXB4O1xuJGJhc2UtbGluZS1oZWlnaHQgICAgICAgICAgICAgIDogKCRiYXNlLWZvbnQtc2l6ZS11bml0ICogJGJhc2UtbGluZS1oZWlnaHQtdW5pdCkgKiAxcHg7IC8vIDI0LjY1XG4kc3BhY2UtdW5pdCAgICAgICAgICAgICAgICAgICAgOiAkYmFzZS1saW5lLWhlaWdodDtcbiRzcGFjZSAgICAgICAgICAgICAgICAgICAgICAgICA6ICRzcGFjZS11bml0ICogMTtcblxuJGd1dHRlclNwYWNlICAgICAgICAgICAgICAgICAgIDogc3BhY2UoMSk7XG4kcGFyYWdyYXBoU3BhY2UgICAgICAgICAgICAgICAgOiBzcGFjZSgwLjc1KTtcbiRibG9ja1NwYWNlICAgICAgICAgICAgICAgICAgICA6IDUuNXZoO1xuXG5cblxuLy8gV2lkdGhzIChiYXNlZCBvbiBCUzQpXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBCUzQgZGVmYXVsdHM6XG4vLyBSZW1vdmVkIHRoZSBCUzQgYXNjZW5kaW5nIG1peGluOlxuLy8gQGluY2x1ZGUgX2Fzc2VydC1hc2NlbmRpbmcoJGdyaWQtYnJlYWtwb2ludHMsIFwiJGdyaWQtYnJlYWtwb2ludHNcIik7KSxcbi8vICRjb250YWluZXItbWF4LXdpZHRoczogKFxuLy8gXHRzbTogNTc2cHgsXG4vLyBcdG1kOiA3MjBweCxcbi8vIFx0bGc6IDk0MHB4LFxuLy8gXHR4bDogMTE0MHB4XG4vLyApICFkZWZhdWx0O1xuXG4kZ3JpZC1icmVha3BvaW50czogKFxuICAgIHhzOiAwLFxuICAgIHNtOiA1NDRweCxcbiAgICBtZDogNzY4cHgsXG4gICAgbGc6IDk5MnB4LFxuICAgIGxnLWZvci1jb250YWluZXItbGc6IDEwODBweCxcbiAgICB4bDogMTIwMHB4LFxuICAgIHN1OiAxNzAwcHhcbikgIWRlZmF1bHQ7XG5cbiRjb250YWluZXItbWF4LXdpZHRoczogKFxuICAgIHNtOiA1NzZweCxcbiAgICBtZDogNjYwcHgsXG4gICAgbGc6IDEwODBweCxcbiAgICB4bDogMTIwMHB4LFxuICAgIHN1OiAxNzAwcHgsXG4pICFkZWZhdWx0O1xuXG5cbi8vIEZvbnQgc2l6ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiRmb250c2l6ZXM6IChcbiAgICB0ZXh0LS14czogKFxuICAgICAgICB4cyAgICAgICAgICAgIDogMTBweCxcbiAgICAgICAgc20gICAgICAgICAgICA6IDExcHgsXG4gICAgICAgIHJnICAgICAgICAgICAgOiAxMnB4XG4gICAgKSxcbiAgICB0ZXh0LS1zbTogKFxuICAgICAgICB4cyAgICAgICAgICAgIDogMTBweCxcbiAgICAgICAgc20gICAgICAgICAgICA6IDEycHgsXG4gICAgICAgIHJnICAgICAgICAgICAgOiAxNHB4XG4gICAgKSxcbiAgICB0ZXh0LS1tZXRhOiAoXG4gICAgICAgIHhzICAgICAgICAgICAgOiAxMHB4LFxuICAgICAgICBzbSAgICAgICAgICAgIDogMTNweCxcbiAgICAgICAgcmcgICAgICAgICAgICA6IDE1cHhcbiAgICApLFxuICAgIHRleHQ6IChcbiAgICAgICAgeHMgICAgICAgICAgICA6IDE0cHgsXG4gICAgICAgIHNtICAgICAgICAgICAgOiAxNnB4LFxuICAgICAgICByZyAgICAgICAgICAgIDogMTlweFxuICAgICksXG4gICAgdGV4dC0tbGc6IChcbiAgICAgICAgeHMgICAgICAgICAgICA6IDE5cHgsXG4gICAgICAgIHNtICAgICAgICAgICAgOiAyMnB4LFxuICAgICAgICBsZyAgICAgICAgICAgIDogMjRweFxuICAgICksXG4gICAgaGVhZGxpbmUtLXhzOiAoXG4gICAgICAgIHhzICAgICAgICAgICAgOiAxOHB4LFxuICAgICAgICBzbSAgICAgICAgICAgIDogMjJweCxcbiAgICAgICAgbGcgICAgICAgICAgICA6IDI3cHhcbiAgICApLFxuICAgIGhlYWRsaW5lLS1zbTogKFxuICAgICAgICB4cyAgICAgICAgICAgIDogMThweCxcbiAgICAgICAgc20gICAgICAgICAgICA6IDIxcHgsXG4gICAgICAgIGxnICAgICAgICAgICAgOiAyM3B4XG4gICAgKSxcbiAgICBoZWFkbGluZTogKFxuICAgICAgICB4cyAgICAgICAgICAgIDogMjRweCxcbiAgICAgICAgc20gICAgICAgICAgICA6IDU0cHgsXG4gICAgICAgIGxnICAgICAgICAgICAgOiA3MnB4XG4gICAgKSxcbiAgICBkaXNwbGF5OiAoXG4gICAgICAgIHhzICAgICAgICAgICAgOiA0MHB4LFxuICAgICAgICBzbSAgICAgICAgICAgIDogNTRweCxcbiAgICAgICAgbGcgICAgICAgICAgICA6IDYwcHhcbiAgICApXG4pO1xuXG5cbi8vIE90aGVyIHNpemVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kYm9yZGVyLXJhZGl1czogKFxuICAgIHNtYWxsICAgICAgICAgICAgIDogM3B4LFxuICAgIGJhc2UgICAgICAgICAgICAgIDogNHB4LFxuICAgIGxhcmdlICAgICAgICAgICAgIDogNnB4XG4pO1xuXG4kYnV0dG9uLWhlaWdodDogKFxuICAgIGNvbmNpc2UgICAgICAgICAgIDogMzZweCxcbiAgICBiYXNlICAgICAgICAgICAgICA6IDQ0cHgsXG4gICAgbGcgICAgICAgICAgICAgICAgOiA1NXB4XG4pO1xuXG4kbGlzdC1pbnNldDogKFxuICAgIG1hcmdpbiAgICAgICAgICAgIDogc3BhY2UoMC43NSksXG4gICAgcGFkZGluZyAgICAgICAgICAgOiAwXG4pO1xuXG5cbi8vIFRyYW5zaXRpb25zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kdHJhbnNpdGlvbjogKFxuICAgIGR1cmF0aW9uOiAoXG4gICAgICAgIGZhc3QgICAgICAgICA6IDUwbXMsXG4gICAgICAgIHNob3J0ICAgICAgICA6IDE1MG1zLFxuICAgICAgICBsb25nICAgICAgICAgOiA1MDBtc1xuICAgICksXG4gICAgdHlwZTogKFxuICAgICAgICB0aGlzYWxzbyAgICAgOiBjdWJpYy1iZXppZXIoMC4xOSwgMSwgMC4yMiwgMSksXG4gICAgICAgIGN1YmljLXN0YXRpYyA6IGN1YmljLWJlemllcigwLCAtMC4xLCAxLCAtMC4xKSxcbiAgICAgICAgY3ViaWMtc3RhdGUgIDogY3ViaWMtYmV6aWVyKDAsIDEuMSwgMSwgMS4xKSxcbiAgICAgICAgYmFzZSAgICAgICAgIDogZWFzZS1vdXQsXG4gICAgICAgIGZpbmUgICAgICAgICA6IGVhc2UtaW4tb3V0XG4gICAgKVxuKTtcblxuXG4vLyBaLWluZGV4ZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiR6LWluZGV4OiAoXG4gICAgJ21vZGFsJyAgICAgOiA4MDAxLFxuICAgICdvdmVybGF5JyAgIDogODAwMCxcbiAgICAnZHJvcGRvd24nICA6IDcwMDAsXG4gICAgJ3NlY29uZCcgICAgOiAyMDAwLFxuICAgICdmaXJzdCcgICAgIDogMTAwMCxcbiAgICAnZGVmYXVsdCcgICA6IDEsXG4gICAgJ2JlbG93JyAgICAgOiAtMSxcbik7XG5cblxuLy8gRm9udHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIERlZmluZSBzdGFja3NcbiRtb25vLWZvbnQtc3RhY2sgICAgICAgOiBNZW5sbywgTW9uYWNvLCBDb25zb2xhcywgXCJMaWJlcmF0aW9uIE1vbm9cIiwgJ0NvdXJpZXIgTmV3JywgJ0FuZGFsZSBNb25vJywgJ0x1Y2lkYSBTYW4gVHlwZXdyaXRlcicsICdMdWNpZGEgQ29uc29sZScsIG1vbm9zcGFjZTtcbiRzYW5zLWZvbnQtc3RhY2sgICAgICAgOiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiUm9ib3RvXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgXCJEcm9pZCBTYW5zXCIsIFwiU2Vnb2UgVUlcIiwgXCJGaXJhIFNhbnNcIiwgXCJVYnVudHVcIiwgc2Fucy1zZXJpZjtcbiRzZXJpZi1mb250LXN0YWNrICAgICAgOiBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBcIlRpbWVzXCIsIHNlcmlmO1xuJGRpc3BsYXktZm9udC1zdGFjayAgICA6ICRzYW5zLWZvbnQtc3RhY2s7XG5cbi8vIEFyZSB5b3UgcmVmZXJlbmNpbmcgdGhlIGZvbnQgZmlsZXMgcmF0aGVyIHRoYW4gdXNpbmcgYSBiYXNlNjQgc3RyaW5nP1xuJGZvbnRzLXBhdGggICAgICAgICAgIDogJy9hc3NldHMvZm9udHMvJztcblxuLy8gSXMgeW91ciBmb250IG5hbWVzcGFjZWQ/XG4kZm9udC1uYW1lc3BhY2UgICAgICAgIDogJyc7XG5cbi8vIElzIHRoZSBodG1sLWxldmVsIGZvbnQgc3RhY2sgc2FucyBvciBzZXJpZj9cbiRtYWluLWZvbnQtc3RhY2sgICAgICAgOiAkc2Fucy1mb250LXN0YWNrO1xuXG4vLyBDcmVhdGUgZm9udC1maWxlIHZhcmlhYmxlc1xuJHNhbnMtdGhpbiAgICAgICAgICAgIDogVGhpbjtcbiRzYW5zLWxpZ2h0ICAgICAgICAgICA6IExpZ2h0O1xuJHNhbnMtYm9vayAgICAgICAgICAgIDogUmVndWxhcjtcbiRzYW5zLXJlZ3VsYXIgICAgICAgICA6IFJlZ3VsYXI7XG4kc2Fucy1tZWRpdW0gICAgICAgICAgOiBNZWRpdW07XG4kc2Fucy1ib2xkICAgICAgICAgICAgOiBCb2xkO1xuLy8kc2Fucy14Ym9sZCAgICAgICAgICAgOiBFeHRyYWJvbGQ7XG4kc2Fucy1ibGFjayAgICAgICAgICAgOiBCbGFjaztcbi8vJGRpc3BsYXkgICAgICAgICAgICAgIDogI3skZGlzcGxheS1mb250LW5hbWV9O1xuXG4kc2Fucy1yZWd1bGFyLWl0YWxpYyAgOiBSZWd1bGFyLWl0YWxpYztcbiRzYW5zLW1lZGl1bS1pdGFsaWMgICA6IE1lZGl1bS1pdGFsaWM7XG5cblxuXG4vLyBNYWtlIGFsbCBmb250IGZpbGVzIGF2YWlsYWJsZVxuLy8gTWl4aW4gb3B0aW9uczogJGZvbnQtZmFtaWx5LCAkZmlsZS1wYXRoLCAkd2VpZ2h0LCAkc3R5bGUsICRmb3JtYXRzXG4vLyBQcy4gVGhpcyBiZWxvdyBwcmludHMgYW4gdW53YW50ZWQgc3BhY2UgYmV0d2VlbiB0aGUgcGF0aCB2YXIgYW5kIHRoZSBmb250IHZhcjpcbi8vIEBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy10aGluLCBqb2luKCRmb250cy1wYXRoLCRzYW5zLXRoaW4pICk7XG5cbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy10aGluLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLXRoaW59JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLWxpZ2h0LCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWxpZ2h0fScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1ib29rLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLWJvb2t9JyApO1xuQGluY2x1ZGUgZm9udC1mYWNlKCRzYW5zLXJlZ3VsYXIsICcjeyRmb250cy1wYXRofSN7JHNhbnMtcmVndWxhcn0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtbWVkaXVtLCAnI3skZm9udHMtcGF0aH0jeyRzYW5zLW1lZGl1bX0nICk7XG5AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMtYm9sZCwgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1ib2xkfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1ibGFjaywgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1ibGFja30nICk7XG5cbi8vIFVudXNlZCwgc28gYXBwbHkgYSBkZWZhdWx0IHRvIGF2b2lkIGd1bHAgZnVja3Vwc1xuLy9AaW5jbHVkZSBmb250LWZhY2UoJHNhbnMteGJvbGQsICAgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy14Ym9sZH0nICk7XG4vL0BpbmNsdWRlIGZvbnQtZmFjZSgkZGlzcGxheSwgJyN7JGZvbnRzLXBhdGh9I3skZGlzcGxheX0nICk7XG4vL0BpbmNsdWRlIGZvbnQtZmFjZSgkc2Fucy1yZWd1bGFyLWl0YWxpYywgJyN7JGZvbnRzLXBhdGh9I3skc2Fucy1yZWd1bGFyLWl0YWxpY30nICk7XG5cblxuLy8gQXBwbHkgZm9udC1maWxlIHZhcmlhYmxlcyB0byBhIGZvbnQtc3RhY2suXG4vLyBXZSBvbmx5IHVzZSB0aGVzZSB2YXJpYWJsZXMgaW4gb3VyIGNsYXNzZXMuXG5cbiRmb250LXRleHQtdGhpbiAgICAgICA6IGpvaW4oJHNhbnMtdGhpbiwgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWxpZ2h0ICAgICAgOiBqb2luKCRzYW5zLWxpZ2h0LCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtYm9vayAgICAgICA6IGpvaW4oJHNhbnMtYm9vaywgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LXJlZ3VsYXIgICAgOiBqb2luKCRzYW5zLXJlZ3VsYXIsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC1yZWd1bGFyLWkgIDogam9pbigkc2Fucy1yZWd1bGFyLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtbWVkaXVtICAgICA6IGpvaW4oJHNhbnMtbWVkaXVtLCAkbWFpbi1mb250LXN0YWNrKTtcbiRmb250LXRleHQtbWVkaXVtLWkgICA6IGpvaW4oJHNhbnMtbWVkaXVtLWl0YWxpYywgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LWJvbGQgICAgICAgOiBqb2luKCRzYW5zLWJvbGQsICRtYWluLWZvbnQtc3RhY2spO1xuJGZvbnQtdGV4dC14Ym9sZCAgICAgIDogJGZvbnQtdGV4dC1yZWd1bGFyO1xuJGZvbnQtdGV4dC1ibGFjayAgICAgIDogam9pbigkc2Fucy1ibGFjaywgJG1haW4tZm9udC1zdGFjayk7XG4kZm9udC10ZXh0LXJlZ3VsYXItaSAgOiAkZm9udC10ZXh0LXJlZ3VsYXI7XG4kZm9udC1kaXNwbGF5ICAgICAgICAgOiAkZm9udC10ZXh0LXJlZ3VsYXI7XG5cbi8vIFVudXNlZCwgc28gYXBwbHkgYSBkZWZhdWx0IHRvIGF2b2lkIGd1bHAgZnVja3Vwc1xuLy8kZm9udC1zYW5zLXhib2xkICAgICAgOiBqb2luKCRzYW5zLXhib2xkLCAkbWFpbi1mb250LXN0YWNrKTtcbi8vJGZvbnQtc2Fucy1yZWd1bGFyLWkgIDogam9pbigkc2Fucy1yZWd1bGFyLWl0YWxpYywgJG1haW4tZm9udC1zdGFjayk7XG4vLyRmb250LWRpc3BsYXkgICAgICAgICA6IGpvaW4oJGRpc3BsYXksICRkaXNwbGF5LWZvbnQtc3RhY2spO1xuXG5cblxuLy8gT2JqZWN0L2NvbXBvbmVudCBkZWZhdWx0IGZvbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kZm9udHMtcGF0aC0yICAgICAgICAgICA6ICcvYXNzZXRzL2ZvbnRzLXNlcmlmLyc7XG5cbiRzZXJpZiAgICAgICAgICAgICAgICAgIDogTm90aWNpYVRleHQtUmVndWxhcjtcbiRzZXJpZi1pICAgICAgICAgICAgICAgIDogTm90aWNpYVRleHQtSXRhbGljO1xuXG5AaW5jbHVkZSBmb250LWZhY2UoJHNlcmlmLCAnI3skZm9udHMtcGF0aC0yfSN7JHNlcmlmfScgKTtcbkBpbmNsdWRlIGZvbnQtZmFjZSgkc2VyaWYtaSwgJyN7JGZvbnRzLXBhdGgtMn0jeyRzZXJpZi1pfScgKTtcblxuJGZvbnQtc2VyaWYgICAgICAgICAgICAgOiBqb2luKCRzZXJpZiwgJHNlcmlmLWZvbnQtc3RhY2spO1xuJGZvbnQtc2VyaWYtaSAgICAgICAgICAgOiBqb2luKCRzZXJpZi1pLCAkc2VyaWYtZm9udC1zdGFjayk7XG4kZm9udC1zZXJpZi1pICAgICAgICAgICA6ICRzZXJpZi1pO1xuXG4vLyRmb250LXNlcmlmICAgICAgICAgICAgIDogJ01haXRyZWUnO1xuLy8kZm9udC1zZXJpZiAgICAgICAgICAgICA6ICdZcnNhJztcbi8vJGZvbnQtc2VyaWYgICAgICAgICAgICAgOiAnTG9yYSc7XG4vLyRmb250LXNlcmlmICAgICAgICAgICAgIDogJ01lcnJpd2VhdGhlcic7XG4vLyRmb250LXNlcmlmICAgICAgICAgICAgIDogJ05vdGljaWEgVGV4dCc7XG4vLyRmb250LXNlcmlmICAgICAgICAgICAgIDogJHNlcmlmO1xuXG5cblxuLy8gT2JqZWN0L2NvbXBvbmVudCBkZWZhdWx0IGZvbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kZm9udC1idXR0b24gICAgICAgICAgIDogJGZvbnQtdGV4dC1ib2xkO1xuXG5cbi8vIFN1aXQgYnJlYWtwb2ludCBzd2l0Y2hlc1xuLy8gUmU6ICchZGVmYXVsdCcuIGlmIHRoZSB2YXJpYWJsZSBoYXMgYWxyZWFkeSBiZWVuIGFzc2lnbmVkIHRvLCBpdCB3b27igJl0IGJlXG4vLyByZS1hc3NpZ25lZCwgYnV0IGlmIGl0IGRvZXNu4oCZdCBoYXZlIGEgdmFsdWUgeWV0LCBpdCB3aWxsIGJlIGdpdmVuIG9uZS5cbi8vIFNlZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vZG9jdW1lbnRhdGlvbi9maWxlLlNBU1NfUkVGRVJFTkNFLmh0bWwjdmFyaWFibGVfZGVmYXVsdHNfXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4kc3VpdC10ZXh0LWJyZWFrcG9pbnRzICAgICAgOiBmYWxzZSAhZGVmYXVsdDtcbiRzdWl0LWZsZXgtYnJlYWtwb2ludHMgICAgICA6IGZhbHNlICFkZWZhdWx0O1xuJHN1aXQtZmxleGVtYmVkLWJyZWFrcG9pbnRzIDogZmFsc2UgIWRlZmF1bHQ7XG4kc3VpdC1ncmlkLWJyZWFrcG9pbnRzICAgICAgOiB0cnVlICFkZWZhdWx0O1xuJHN1aXQtc2l6ZS1icmVha3BvaW50cyAgICAgIDogdHJ1ZSAhZGVmYXVsdDsiLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBTSVpFXG4vLyAgIFZlcnNpb24gMS4wLjkgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvdXRpbHMtc2l6ZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIHUtc2l6ZUZpbGxcbi8vIHUtc2l6ZUZpbGxBbHRcbi8vIHUtc2l6ZUZpdFxuLy8gdS1zaXplRnVsbFxuLy8gdS1zaXplWG9mMlxuLy8gdS1zaXplWG9mM1xuLy8gdS1zaXplWG9mNFxuLy8gdS1zaXplWG9mNVxuLy8gdS1zaXplWG9mNlxuLy8gdS1zaXplWG9mOFxuLy8gdS1zaXplWG9mMTBcbi8vIHUtc2l6ZVhvZjEyXG5cblxuLyoqXG4gKiBAZGVmaW5lIHV0aWxpdGllc1xuICogU2l6aW5nIHV0aWxpdGllc1xuICovXG5cbi8qIFByb3BvcnRpb25hbCB3aWR0aHNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogU3BlY2lmeSB0aGUgcHJvcG9ydGlvbmFsIHdpZHRoIG9mIGFuIG9iamVjdC5cbiAqIEludGVudGlvbmFsIHJlZHVuZGFuY3kgYnVpbGQgaW50byBlYWNoIHNldCBvZiB1bml0IGNsYXNzZXMuXG4gKiBTdXBwb3J0czogMiwgMywgNCwgNSwgNiwgOCwgMTAsIDEyIHBhcnRcbiAqXG4gKiAxLiBVc2UgYGZsZXgtYmFzaXM6IGF1dG9gIHdpdGggYSB3aWR0aCB0byBhdm9pZCBib3gtc2l6aW5nIGJ1ZyBpbiBJRTEwLzExXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbE1EXG4gKi9cblxuW2NsYXNzKj1cInUtc2l6ZVwiXSB7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbiAgLyogMSAqL1xufVxuXG4udS1zaXplMW9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMTAge1xuICB3aWR0aDogMTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y4IHtcbiAgd2lkdGg6IDEyLjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUxb2Y2LFxuLnUtc2l6ZTJvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mNSxcbi51LXNpemUyb2YxMCB7XG4gIHdpZHRoOiAyMCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjQsXG4udS1zaXplMm9mOCxcbi51LXNpemUzb2YxMiB7XG4gIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTNvZjEwIHtcbiAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMW9mMyxcbi51LXNpemUyb2Y2LFxuLnUtc2l6ZTRvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplM29mOCB7XG4gIHdpZHRoOiAzNy41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mNSxcbi51LXNpemU0b2YxMCB7XG4gIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTVvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTFvZjIsXG4udS1zaXplMm9mNCxcbi51LXNpemUzb2Y2LFxuLnUtc2l6ZTRvZjgsXG4udS1zaXplNW9mMTAsXG4udS1zaXplNm9mMTIge1xuICB3aWR0aDogNTAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiA3IC8gMTIpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y1LFxuLnUtc2l6ZTZvZjEwIHtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mOCB7XG4gIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplMm9mMyxcbi51LXNpemU0b2Y2LFxuLnUtc2l6ZThvZjEyIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAqIDIgLyAzKSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplN29mMTAge1xuICB3aWR0aDogNzAlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemUzb2Y0LFxuLnUtc2l6ZTZvZjgsXG4udS1zaXplOW9mMTIge1xuICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU0b2Y1LFxuLnUtc2l6ZThvZjEwIHtcbiAgd2lkdGg6IDgwJSAhaW1wb3J0YW50O1xufVxuXG4udS1zaXplNW9mNixcbi51LXNpemUxMG9mMTIge1xuICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU3b2Y4IHtcbiAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG59XG5cbi51LXNpemU5b2YxMCB7XG4gIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbn1cblxuLnUtc2l6ZTExb2YxMiB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xufVxuXG4vKiBJbnRyaW5zaWMgd2lkdGhzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBzaHJpbmsgd3JhcCBpdHMgY29udGVudC5cbiAqL1xuXG4udS1zaXplRml0IHtcbiAgZmxleC1iYXNpczogYXV0byAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIE1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKlxuICogMS4gQmUgZXhwbGljaXQgdG8gd29yayBhcm91bmQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgaHR0cDovL2dpdC5pby92bGxDN1xuICogMi4gSUUxMCBpZ25vcmVzIHByZXZpb3VzIGBmbGV4LWJhc2lzYCB2YWx1ZS4gU2V0dGluZyBhZ2FpbiBoZXJlIGZpeGVzXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbE10XG4gKi9cblxuLnUtc2l6ZUZpbGwge1xuICBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDsgLyogMSAqL1xuICBmbGV4LWJhc2lzOiAwJSAhaW1wb3J0YW50OyAvKiAyICovXG59XG5cbi8qKlxuICogQW4gYWx0ZXJuYXRpdmUgbWV0aG9kIHRvIG1ha2UgYW4gZWxlbWVudCBmaWxsIHRoZSByZW1haW5pbmcgc3BhY2UuXG4gKiBEaXN0cmlidXRlcyBzcGFjZSBiYXNlZCBvbiB0aGUgaW5pdGlhbCB3aWR0aCBhbmQgaGVpZ2h0IG9mIHRoZSBlbGVtZW50XG4gKlxuICogaHR0cDovL3d3dy53My5vcmcvVFIvY3NzLWZsZXhib3gvaW1hZ2VzL3JlbC12cy1hYnMtZmxleC5zdmdcbiAqL1xuXG4udS1zaXplRmlsbEFsdCB7XG4gIGZsZXg6IDEgMSBhdXRvICFpbXBvcnRhbnQ7XG4gIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBNYWtlIGFuIGVsZW1lbnQgdGhlIHdpZHRoIG9mIGl0cyBwYXJlbnQuXG4gKi9cblxuLnUtc2l6ZUZ1bGwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG59XG5cblxuXG5cbi8vIEF0IG1lZGlhLXF1ZXJpZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaWYgKCRzdWl0LXNpemUtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdFtjbGFzcyo9XCJ1LSN7JGJyZWFrcG9pbnR9LXNpemVcIl0ge1xuICAgIFx0XHQgIGZsZXgtYmFzaXM6IGF1dG8gIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyAxMikgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDEwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjgge1xuICAgIFx0XHQgIHdpZHRoOiAxMi41JSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjYsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDEgLyA2KSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjUsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDIwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjQsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplM29mMTIge1xuICAgIFx0XHQgIHdpZHRoOiAyNSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUzb2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDMwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTFvZjMsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNG9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAxIC8gMykgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUzb2Y4IHtcbiAgICBcdFx0ICB3aWR0aDogMzcuNSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUyb2Y1LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNG9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA0MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU1b2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IGNhbGMoMTAwJSAqIDUgLyAxMikgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxb2YyLFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplMm9mNCxcbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjYsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplNW9mMTAsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2YxMiB7XG4gICAgXHRcdCAgd2lkdGg6IDUwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTdvZjEyIHtcbiAgICBcdFx0ICB3aWR0aDogY2FsYygxMDAlICogNyAvIDEyKSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjUsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTVvZjgge1xuICAgIFx0XHQgIHdpZHRoOiA2Mi41JSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTJvZjMsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOG9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAyIC8gMykgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU3b2YxMCB7XG4gICAgXHRcdCAgd2lkdGg6IDcwJSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tc2l6ZTNvZjQsXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU2b2Y4LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOW9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiA3NSUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU0b2Y1LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOG9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA4MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemU1b2Y2LFxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplMTBvZjEyIHtcbiAgICBcdFx0ICB3aWR0aDogY2FsYygxMDAlICogNSAvIDYpICFpbXBvcnRhbnQ7XG4gICAgXHRcdH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplN29mOCB7XG4gICAgXHRcdCAgd2lkdGg6IDg3LjUlICFpbXBvcnRhbnQ7XG4gICAgXHRcdH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1zaXplOW9mMTAge1xuICAgIFx0XHQgIHdpZHRoOiA5MCUgIWltcG9ydGFudDtcbiAgICBcdFx0fVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXNpemUxMW9mMTIge1xuICAgIFx0XHQgIHdpZHRoOiBjYWxjKDEwMCUgKiAxMSAvIDEyKSAhaW1wb3J0YW50O1xuICAgIFx0XHR9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvdjQtZGV2L3Njc3MvbWl4aW5zL19icmVha3BvaW50cy5zY3NzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSxcbi8vIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vLyAgICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpXG4vLyBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2AgZ2xvYmFsIHZhcmlhYmxlXG4vLyBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuXG5cbi8vIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgJGJyZWFrcG9pbnQtbmFtZXM6ICh4cyBzbSBtZCkpXG4vLyAgICBtZFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQtbmFtZXM6IG1hcC1rZXlzKCRicmVha3BvaW50cykpIHtcblx0JG46IGluZGV4KCRicmVha3BvaW50LW5hbWVzLCAkbmFtZSk7XG5cdEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG4vLyBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTQ0cHgsIG1kOiA3NjhweCkpXG4vLyAgICA1NDRweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG5cdCRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG5cdEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgbGFyZ2VzdCAobGFzdCkgYnJlYWtwb2ludC5cbi8vIFRoZSBtYXhpbXVtIHZhbHVlIGlzIGNhbGN1bGF0ZWQgYXMgdGhlIG1pbmltdW0gb2YgdGhlIG5leHQgb25lIGxlc3MgMC4xLlxuLy8gICAgPj4gYnJlYWtwb2ludC1tYXgoc20sICh4czogMCwgc206IDU0NHB4LCBtZDogNzY4cHgpKVxuLy8gICAgNzY3cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXHRAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIDFweCwgbnVsbCk7XG59XG5cbi8vIE1lZGlhIG9mIGF0IGxlYXN0IHRoZSBtaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgd2lkZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblx0QGlmICRtaW4ge1xuXHRcdEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHQkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblx0QGlmICRtYXgge1xuXHRcdEBtZWRpYSAobWF4LXdpZHRoOiAkbWF4KSB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IG9ubHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQsIG5vdCB2aWV3cG9ydHMgYW55IHdpZGVyIG9yIG5hcnJvd2VyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtb25seSgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG5cbi8vIE1lZGlhIHRoYXQgc3BhbnMgbXVsdGlwbGUgYnJlYWtwb2ludCB3aWR0aHMuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgYmV0d2VlbiB0aGUgbWluIGFuZCBtYXggYnJlYWtwb2ludHNcbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuXHRcdFx0QGNvbnRlbnQ7XG5cdFx0fVxuXHR9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgU1VJVCBGTEVYQk9YXG4vLyAgIFZlcnNpb24gMS4xLjEgMTYwNjI5XG4vLyAgIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL3N1aXRjc3MvdXRpbHMtZmxleFxuLy8gICBTZWU6IGh0dHA6Ly9zdWl0Y3NzLmdpdGh1Yi5pby91dGlscy1mbGV4L3Rlc3QvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gZmxleC1jb250YWluZXJcbi8vIC0gdS1mbGV4XG4vLyAtIHUtZmxleElubGluZVxuLy9cbi8vIGZsZXgtZGlyZWN0aW9uXG4vLyAtIHUtZmxleFJvd1xuLy8gLSB1LWZsZXhSb3dSZXZlcnNlXG4vLyAtIHUtZmxleENvbFxuLy8gLSB1LWZsZXhDb2xSZXZlcnNlXG4vL1xuLy8gZmxleC13cmFwXG4vLyAtIHUtZmxleFdyYXBcbi8vIC0gdS1mbGV4Tm9XcmFwXG4vLyAtIHUtZmxleFdyYXBSZXZlcnNlXG4vL1xuLy8ganVzdGlmeS1jb250ZW50XG4vLyAtIHUtZmxleEp1c3RpZnlTdGFydFxuLy8gLSB1LWZsZXhKdXN0aWZ5RW5kXG4vLyAtIHUtZmxleEp1c3RpZnlDZW50ZXJcbi8vIC0gdS1mbGV4SnVzdGlmeUJldHdlZW5cbi8vIC0gdS1mbGV4SnVzdGlmeUFyb3VuZFxuLy9cbi8vIGFsaWduLWl0ZW1zXG4vLyAtIHUtZmxleEFsaWduSXRlbXNTdHJldGNoXG4vLyAtIHUtZmxleEFsaWduSXRlbXNTdGFydFxuLy8gLSB1LWZsZXhBbGlnbkl0ZW1zRW5kXG4vLyAtIHUtZmxleEFsaWduSXRlbXNDZW50ZXJcbi8vIC0gdS1mbGV4QWxpZ25JdGVtc0Jhc2VsaW5lXG4vL1xuLy8gYWxpZ24tY29udGVudFxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRTdGFydFxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRFbmRcbi8vIC0gdS1mbGV4QWxpZ25Db250ZW50Q2VudGVyXG4vLyAtIHUtZmxleEFsaWduQ29udGVudFN0cmV0Y2hcbi8vIC0gdS1mbGV4QWxpZ25Db250ZW50QmV0d2VlblxuLy8gLSB1LWZsZXhBbGlnbkNvbnRlbnRBcm91bmRcbi8vXG4vLyBhbGlnbi1zZWxmXG4vLyAtIHUtZmxleEFsaWduU2VsZlN0YXJ0XG4vLyAtIHUtZmxleEFsaWduU2VsZkVuZFxuLy8gLSB1LWZsZXhBbGlnblNlbGZDZW50ZXJcbi8vIC0gdS1mbGV4QWxpZ25TZWxmU3RyZXRjaFxuLy8gLSB1LWZsZXhBbGlnblNlbGZBdXRvXG4vL1xuLy8gb3JkZXJcbi8vIC0gdS1mbGV4T3JkZXJGaXJzdFxuLy8gLSB1LWZsZXhPcmRlckxhc3Rcbi8vIC0gdS1mbGV4T3JkZXJOb25lXG4vL1xuLy8gZmxleC1ncm93XG4vLyAtIHUtZmxleEdyb3cxXG4vLyAtIHUtZmxleEdyb3cyXG4vLyAtIHUtZmxleEdyb3czXG4vLyAtIHUtZmxleEdyb3c0XG4vLyAtIHUtZmxleEdyb3c1XG4vL1xuLy8gQWxpZ25pbmcgd2l0aCBhdXRvIG1hcmdpbnNcbi8vIC0gdS1mbGV4RXhwYW5kXG4vLyAtIHUtZmxleEV4cGFuZFRvcFxuLy8gLSB1LWZsZXhFeHBhbmRSaWdodFxuLy8gLSB1LWZsZXhFeHBhbmRCb3R0b21cbi8vIC0gdS1mbGV4RXhwYW5kTGVmdFxuXG5cbi8qKiBAZGVmaW5lIHV0aWxpdGllcyAqL1xuXG4vKiBBcHBsaWVzIHRvIGZsZXggY29udGFpbmVyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvbnRhaW5lclxuICovXG5cbi51LWZsZXgge1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhJbmxpbmUge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIERpcmVjdGlvbjogcm93XG4gKi9cblxuLnUtZmxleFJvdyB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3cgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleFJvd1JldmVyc2Uge1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2UgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBEaXJlY3Rpb246IGNvbHVtblxuICovXG5cbi51LWZsZXhDb2wge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhDb2xSZXZlcnNlIHtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogV3JhcFxuICovXG5cbi51LWZsZXhXcmFwIHtcbiAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhOb1dyYXAge1xuICBmbGV4LXdyYXA6IG5vd3JhcCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4V3JhcFJldmVyc2Uge1xuICBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWduIGl0ZW1zIGFsb25nIHRoZSBtYWluIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGUgZmxleCBjb250YWluZXJcbiAqL1xuXG4udS1mbGV4SnVzdGlmeVN0YXJ0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhKdXN0aWZ5RW5kIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4SnVzdGlmeUNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhKdXN0aWZ5QmV0d2VlbiB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4SnVzdGlmeUFyb3VuZCB7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7XG59XG5cbi8qKlxuICogQWxpZ24gaXRlbXMgaW4gdGhlIGNyb3NzIGF4aXMgb2YgdGhlIGN1cnJlbnQgbGluZSBvZiB0aGUgZmxleCBjb250YWluZXJcbiAqIFNpbWlsYXIgdG8gYGp1c3RpZnktY29udGVudGAgYnV0IGluIHRoZSBwZXJwZW5kaWN1bGFyIGRpcmVjdGlvblxuICovXG5cbi51LWZsZXhBbGlnbkl0ZW1zU3RhcnQge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25JdGVtc0VuZCB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25JdGVtc0NlbnRlciB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduSXRlbXNTdHJldGNoIHtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2ggIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduSXRlbXNCYXNlbGluZSB7XG4gIGFsaWduLWl0ZW1zOiBiYXNlbGluZSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWducyBpdGVtcyB3aXRoaW4gdGhlIGZsZXggY29udGFpbmVyIHdoZW4gdGhlcmUgaXMgZXh0cmFcbiAqIHNwYWNlIGluIHRoZSBjcm9zcy1heGlzXG4gKlxuICogSGFzIG5vIGVmZmVjdCB3aGVuIHRoZXJlIGlzIG9ubHkgb25lIGxpbmUgb2YgZmxleCBpdGVtcy5cbiAqL1xuXG4udS1mbGV4QWxpZ25Db250ZW50U3RhcnQge1xuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRFbmQge1xuICBhbGlnbi1jb250ZW50OiBmbGV4LWVuZCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25Db250ZW50Q2VudGVyIHtcbiAgYWxpZ24tY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnbkNvbnRlbnRTdHJldGNoIHtcbiAgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4QWxpZ25Db250ZW50QmV0d2VlbiB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduQ29udGVudEFyb3VuZCB7XG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWFyb3VuZCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIDEuIFNldCB0aGUgZmxleC1zaHJpbmsgZGVmYXVsdCBleHBsaWNpdGx5IHRvIGZpeCBJRTEwIC0gaHR0cDovL2dpdC5pby92bGxDN1xuICovXG5cbi8qIHBvc3Rjc3MtYmVtLWxpbnRlcjogaWdub3JlICovXG5cbi51LWZsZXggPiAqLFxuLnUtZmxleElubGluZSA+ICoge1xuICBmbGV4LXNocmluazogMTsgLyogMSAqL1xufVxuXG4vKiBBcHBsaWVzIHRvIGZsZXggaXRlbXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogT3ZlcnJpZGUgZGVmYXVsdCBhbGlnbm1lbnQgb2Ygc2luZ2xlIGl0ZW0gd2hlbiBzcGVjaWZpZWQgYnkgYGFsaWduLWl0ZW1zYFxuICovXG5cbi51LWZsZXhBbGlnblNlbGZTdGFydCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduU2VsZkVuZCB7XG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZDZW50ZXIge1xuICBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEFsaWduU2VsZlN0cmV0Y2gge1xuICBhbGlnbi1zZWxmOiBzdHJldGNoICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZCYXNlbGluZSB7XG4gIGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhBbGlnblNlbGZBdXRvIHtcbiAgYWxpZ24tc2VsZjogYXV0byAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIENoYW5nZSBvcmRlciB3aXRob3V0IGVkaXRpbmcgdW5kZXJseWluZyBIVE1MXG4gKi9cblxuLnUtZmxleE9yZGVyRmlyc3Qge1xuICBvcmRlcjogLTEgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleE9yZGVyTGFzdCB7XG4gIG9yZGVyOiAxICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhPcmRlck5vbmUge1xuICBvcmRlcjogMCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIFNwZWNpZnkgdGhlIGZsZXggZ3JvdyBmYWN0b3IsIHdoaWNoIGRldGVybWluZXMgaG93IG11Y2ggdGhlIGZsZXggaXRlbSB3aWxsXG4gKiBncm93IHJlbGF0aXZlIHRvIHRoZSByZXN0IG9mIHRoZSBmbGV4IGl0ZW1zIGluIHRoZSBmbGV4IGNvbnRhaW5lci5cbiAqXG4gKiBTdXBwb3J0cyAxLTUgcHJvcG9ydGlvbnNcbiAqXG4gKiAxLiBQcm92aWRlIGFsbCB2YWx1ZXMgdG8gYXZvaWQgSUUxMCBidWcgd2l0aCBzaG9ydGhhbmQgZmxleFxuICogICAgLSBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzLiBVc2luZyB0aGlzXG4gKiAgICBpbnN0ZWFkIG9mIGBhdXRvYCBhcyB0aGlzIG1hdGNoZXMgd2hhdCB0aGUgZGVmYXVsdCB3b3VsZCBiZSB3aXRoIGBmbGV4YFxuICogICAgc2hvcnRoYW5kIC0gaHR0cDovL2dpdC5pby92bGxXeFxuICovXG5cbi51LWZsZXhHcm93MSB7XG4gIGZsZXg6IDEgMSAwJSAhaW1wb3J0YW50OyAvKiAxICovXG59XG5cbi51LWZsZXhHcm93MiB7XG4gIGZsZXg6IDIgMSAwJSAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4R3JvdzMge1xuICBmbGV4OiAzIDEgMCUgIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEdyb3c0IHtcbiAgZmxleDogNCAxIDAlICFpbXBvcnRhbnQ7XG59XG5cbi51LWZsZXhHcm93NSB7XG4gIGZsZXg6IDUgMSAwJSAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEFsaWduaW5nIHdpdGggYGF1dG9gIG1hcmdpbnNcbiAqIGh0dHA6Ly93d3cudzMub3JnL1RSL2Nzcy1mbGV4Ym94LTEvI2F1dG8tbWFyZ2luc1xuICovXG5cbi51LWZsZXhFeHBhbmQge1xuICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZExlZnQge1xuICBtYXJnaW4tbGVmdDogYXV0byAhaW1wb3J0YW50O1xufVxuXG4udS1mbGV4RXhwYW5kUmlnaHQge1xuICBtYXJnaW4tcmlnaHQ6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZFRvcCB7XG4gIG1hcmdpbi10b3A6IGF1dG8gIWltcG9ydGFudDtcbn1cblxuLnUtZmxleEV4cGFuZEJvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IGF1dG8gIWltcG9ydGFudDtcbn1cblxuXG5cblxuLy8gQXQgbWVkaWEtcXVlcmllcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5AaWYgKCRzdWl0LWZsZXgtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXggICAgICAgICAgICAgICAgICAgIHsgZGlzcGxheTogZmxleCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhJbmxpbmUgICAgICAgICAgICAgIHsgZGlzcGxheTogaW5saW5lLWZsZXggIWltcG9ydGFudDsgfVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhSb3cgICAgICAgICAgICAgICAgIHsgZmxleC1kaXJlY3Rpb246IHJvdyAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhSb3dSZXZlcnNlICAgICAgICAgIHsgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Q29sICAgICAgICAgICAgICAgICB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Q29sUmV2ZXJzZSAgICAgICAgICB7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZSAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleFdyYXAgICAgICAgICAgICAgICAgeyBmbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4Tm9XcmFwICAgICAgICAgICAgICB7IGZsZXgtd3JhcDogbm93cmFwICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleFdyYXBSZXZlcnNlICAgICAgICAgeyBmbGV4LXdyYXA6IHdyYXAtcmV2ZXJzZSAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEp1c3RpZnlTdGFydCAgICAgICAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUVuZCAgICAgICAgICB7IGp1c3RpZnktY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUNlbnRlciAgICAgICB7IGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEp1c3RpZnlCZXR3ZWVuICAgICAgeyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW4gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4SnVzdGlmeUFyb3VuZCAgICAgICB7IGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25JdGVtc0NlbnRlciAgICB7IGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25JdGVtc1N0cmV0Y2ggICB7IGFsaWduLWl0ZW1zOiBzdHJldGNoICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduSXRlbXNCYXNlbGluZSAgeyBhbGlnbi1pdGVtczogYmFzZWxpbmUgIWltcG9ydGFudDsgfVxuXG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRTdGFydCAgIHsgYWxpZ24tY29udGVudDogZmxleC1zdGFydCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRFbmQgICAgIHsgYWxpZ24tY29udGVudDogZmxleC1lbmQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25Db250ZW50Q2VudGVyICB7IGFsaWduLWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRTdHJldGNoIHsgYWxpZ24tY29udGVudDogc3RyZXRjaCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRCZXR3ZWVuIHsgYWxpZ24tY29udGVudDogc3BhY2UtYmV0d2VlbiAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhBbGlnbkNvbnRlbnRBcm91bmQgIHsgYWxpZ24tY29udGVudDogc3BhY2UtYXJvdW5kICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmU3RhcnQgICAgICB7IGFsaWduLXNlbGY6IGZsZXgtc3RhcnQgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmRW5kICAgICAgICB7IGFsaWduLXNlbGY6IGZsZXgtZW5kICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduU2VsZkNlbnRlciAgICAgeyBhbGlnbi1zZWxmOiBjZW50ZXIgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmU3RyZXRjaCAgICB7IGFsaWduLXNlbGY6IHN0cmV0Y2ggIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4QWxpZ25TZWxmQmFzZWxpbmUgICB7IGFsaWduLXNlbGY6IGJhc2VsaW5lICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEFsaWduU2VsZkF1dG8gICAgICAgeyBhbGlnbi1zZWxmOiBhdXRvICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4T3JkZXJMYXN0ICAgICAgICAgICB7IG9yZGVyOiAxICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleE9yZGVyTm9uZSAgICAgICAgICAgeyBvcmRlcjogMCAhaW1wb3J0YW50OyB9XG5cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEdyb3cxICAgICAgICAgICAgICAgeyBmbGV4OiAxIDEgMCUgIWltcG9ydGFudDsgLyogMSAqLyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhHcm93MiAgICAgICAgICAgICAgIHsgZmxleDogMiAxIDAlICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tZmxleEdyb3czICAgICAgICAgICAgICAgeyBmbGV4OiAzIDEgMCUgIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4R3JvdzQgICAgICAgICAgICAgICB7IGZsZXg6IDQgMSAwJSAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhHcm93NSAgICAgICAgICAgICAgIHsgZmxleDogNSAxIDAlICFpbXBvcnRhbnQ7IH1cblxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4RXhwYW5kICAgICAgICAgICAgICB7IG1hcmdpbjogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRMZWZ0ICAgICAgICAgIHsgbWFyZ2luLWxlZnQ6IGF1dG8gIWltcG9ydGFudDsgfVxuICAgIFx0XHQudS0jeyRicmVha3BvaW50fS1mbGV4RXhwYW5kUmlnaHQgICAgICAgICB7IG1hcmdpbi1yaWdodDogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRUb3AgICAgICAgICAgIHsgbWFyZ2luLXRvcDogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LWZsZXhFeHBhbmRCb3R0b20gICAgICAgIHsgbWFyZ2luLWJvdHRvbTogYXV0byAhaW1wb3J0YW50OyB9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFNVSVQgVEVYVCBVVElMU1xuLy8gICBWZXJzaW9uIDEuMC4wIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL3V0aWxzLXRleHRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyB1LXRleHRCcmVha1xuLy8gdS10ZXh0Q2VudGVyXG4vLyB1LXRleHRDb2xvckluaGVyaXRcbi8vIHUtdGV4dExlZnRcbi8vIHUtdGV4dEtyZW5cbi8vIHUtdGV4dE5vV3JhcFxuLy8gdS10ZXh0UmlnaHRcbi8vIHUtdGV4dFRydW5jYXRlXG5cbi8qKlxuICogV29yZCBicmVha2luZ1xuICpcbiAqIEJyZWFrIHN0cmluZ3Mgd2hlbiB0aGVpciBsZW5ndGggZXhjZWVkcyB0aGUgd2lkdGggb2YgdGhlaXIgY29udGFpbmVyLlxuICovXG5cbi51LXRleHRCcmVhayB7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEhvcml6b250YWwgdGV4dCBhbGlnbm1lbnRcbiAqL1xuXG4udS10ZXh0Q2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG5cbi51LXRleHRMZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xufVxuXG4udS10ZXh0UmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50O1xufVxuXG4vKipcbiAqIEluaGVyaXQgdGhlIGFuY2VzdG9yJ3MgdGV4dCBjb2xvci5cbiAqL1xuXG4udS10ZXh0SW5oZXJpdENvbG9yIHtcbiAgY29sb3I6IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBFbmFibGVzIGZvbnQga2VybmluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKiBodHRwOi8vYmxvZy50eXBla2l0LmNvbS8yMDE0LzAyLzA1L2tlcm5pbmctb24tdGhlLXdlYi9cbiAqXG4gKiAxLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgSUUgMTArXG4gKiAyLiBTYWZhcmkgNyBhbmQgZnV0dXJlIGJyb3dzZXJzXG4gKiAzLiBDaHJvbWUgKG5vdCBXaW5kb3dzKSwgRmlyZWZveCwgU2FmYXJpIDYrLCBpT1MsIEFuZHJvaWRcbiAqL1xuXG4udS10ZXh0S2VybiB7XG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJrZXJuXCIgMTsgLyogMSAqL1xuICBmb250LWtlcm5pbmc6IG5vcm1hbDsgLyogMiAqL1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyAvKiAzICovXG59XG5cbi8qKlxuICogUHJldmVudCB3aGl0ZXNwYWNlIHdyYXBwaW5nXG4gKi9cblxuLnUtdGV4dE5vV3JhcCB7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbn1cblxuLyoqXG4gKiBUZXh0IHRydW5jYXRpb25cbiAqXG4gKiBQcmV2ZW50IHRleHQgZnJvbSB3cmFwcGluZyBvbnRvIG11bHRpcGxlIGxpbmVzLCBhbmQgdHJ1bmNhdGUgd2l0aCBhblxuICogZWxsaXBzaXMuXG4gKlxuICogMS4gRW5zdXJlIHRoYXQgdGhlIG5vZGUgaGFzIGEgbWF4aW11bSB3aWR0aCBhZnRlciB3aGljaCB0cnVuY2F0aW9uIGNhblxuICogICAgb2NjdXIuXG4gKiAyLiBGaXggZm9yIElFIDgvOSBpZiBgd29yZC13cmFwOiBicmVhay13b3JkYCBpcyBpbiBlZmZlY3Qgb24gYW5jZXN0b3JcbiAqICAgIG5vZGVzLlxuICovXG5cbi51LXRleHRUcnVuY2F0ZSB7XG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDtcbiAgd29yZC13cmFwOiBub3JtYWwgIWltcG9ydGFudDsgLyogMiAqL1xufVxuXG5cblxuLy8gQXQgbWVkaWEtcXVlcmllcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBpZiAoJHN1aXQtdGV4dC1icmVha3BvaW50cyA9PSB0cnVlKSB7XG4gICAgQGVhY2ggJGJyZWFrcG9pbnQgaW4gbWFwLWtleXMoJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgICBcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGJyZWFrcG9pbnQpIHtcbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dEJyZWFrIHsgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dENlbnRlciB7IHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRMZWZ0IHsgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50OyB9XG4gICAgXHRcdC51LSN7JGJyZWFrcG9pbnR9LXRleHRSaWdodCB7IHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH1cbiAgICBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dE5vV3JhcCB7IHdoaXRlLXNwYWNlOiBub3dyYXAgIWltcG9ydGFudDsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEJVVFRPTlxuLy8gICBWZXJzaW9uIDUuMC4wIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtYnV0dG9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gQnV0dG9uXG4vLyBCdXR0b24uaXMtZGlzYWJsZWRcblxuXG4vKiogQGRlZmluZSBCdXR0b24gKi9cblxuLy8gOnJvb3Qge1xuLy8gICAtLUJ1dHRvbi1ib3JkZXItY29sb3I6IGN1cnJlbnRjb2xvcjtcbi8vICAgLS1CdXR0b24tYm9yZGVyLXdpZHRoOiAxcHg7XG4vLyAgIC0tQnV0dG9uLWNvbG9yOiBpbmhlcml0O1xuLy8gICAtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5OiAwLjY7XG4vLyAgIC0tQnV0dG9uLWZvbnQ6IGluaGVyaXQ7XG4vLyAgIC0tQnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbTtcbi8vIH1cblxuJEJ1dHRvbjogKFxuXHRCdXR0b24tYm9yZGVyLWNvbG9yOiBjdXJyZW50Y29sb3IsXG5cdEJ1dHRvbi1ib3JkZXItd2lkdGg6IDFweCxcblx0QnV0dG9uLWNvbG9yOiBpbmhlcml0LFxuXHRCdXR0b24tZGlzYWJsZWQtb3BhY2l0eTogMC42LFxuXHRCdXR0b24tZm9udDogaW5oZXJpdCxcblx0QnV0dG9uLXBhZGRpbmc6IDAuNGVtIDAuNzVlbVxuKTtcblxuLyoqXG4gKiBUaGUgYnV0dG9uIGNsYXNzZXMgYXJlIGJlc3QgYXBwbGllZCB0byBsaW5rcyBhbmQgYnV0dG9ucy5cbiAqIFRoZXNlIGNvbXBvbmVudHMgY2FuIGJlIHVzZWQgaW4gZm9ybXMsIGFzIGNhbGxzIHRvIGFjdGlvbiwgb3IgYXMgcGFydCBvZiB0aGVcbiAqIGdlbmVyYWwgVUkgb2YgdGhlIHNpdGUvYXBwLlxuICovXG5cbi8qKlxuICogMS4gTm9ybWFsaXplIGBib3gtc2l6aW5nYCBhY3Jvc3MgYWxsIGVsZW1lbnRzIHRoYXQgdGhpcyBjb21wb25lbnQgY291bGQgYmVcbiAqICAgIGFwcGxpZWQgdG8uXG4gKiAyLiBJbmhlcml0IHRleHQgY29sb3IgZnJvbSBhbmNlc3Rvci5cbiAqIDMuIEluaGVyaXQgZm9udCBzdHlsZXMgZnJvbSBhbmNlc3Rvci5cbiAqIDQuIFByZXZlbnQgYnV0dG9uIHRleHQgZnJvbSBiZWluZyBzZWxlY3RhYmxlLlxuICovXG5cbi5CdXR0b24ge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWJvcmRlci1jb2xvcik7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1ib3JkZXItd2lkdGgpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBtYXAtZmV0Y2goJEJ1dHRvbiwgQnV0dG9uLWNvbG9yKTsgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udDogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1mb250KTsgLyogMyAqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IG1hcC1mZXRjaCgkQnV0dG9uLCBCdXR0b24tcGFkZGluZyk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lOyAvKiA0ICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0K1xuICovXG5cbi5CdXR0b246Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogV29yayBhcm91bmQgYSBGaXJlZm94L0lFIGJ1ZyB3aGVyZSB0aGUgdHJhbnNwYXJlbnQgYGJ1dHRvbmAgYmFja2dyb3VuZFxuICogcmVzdWx0cyBpbiBhIGxvc3Mgb2YgdGhlIGRlZmF1bHQgYGJ1dHRvbmAgZm9jdXMgc3R5bGVzLlxuICovXG5cbi5CdXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbi8qKlxuICogVUkgc3RhdGVzXG4gKi9cblxuLkJ1dHRvbjpob3Zlcixcbi5CdXR0b246Zm9jdXMsXG4uQnV0dG9uOmFjdGl2ZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLkJ1dHRvbjpkaXNhYmxlZCxcbi5CdXR0b24uaXMtZGlzYWJsZWQge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG4gIG9wYWNpdHk6IHZhcigtLUJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5KTtcbiAgb3BhY2l0eTogbWFwLWZldGNoKCRCdXR0b24sIEJ1dHRvbi1kaXNhYmxlZC1vcGFjaXR5KTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTVUlUIEZMRVggRU1CRURcbi8vICAgVmVyc2lvbiAyLjAuNCAxNjA2Mjlcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vc3VpdGNzcy9jb21wb25lbnRzLWZsZXgtZW1iZWRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gQVBJXG4vLyBGbGV4RW1iZWRcbi8vIEZsZXhFbWJlZC0tMmJ5MVxuLy8gRmxleEVtYmVkLS0zYnkxXG4vLyBGbGV4RW1iZWQtLTRieTNcbi8vIEZsZXhFbWJlZC0tMTZieTlcbi8vIEZsZXhFbWJlZC1pdGVtXG5cblxuLyoqIEBkZWZpbmUgRmxleEVtYmVkICovXG5cbi8qKlxuICogRmxleGlibGUgbWVkaWEgZW1iZWRzXG4gKlxuICogRm9yIHVzZSB3aXRoIG1lZGlhIGVtYmVkcyDigJMgc3VjaCBhcyB2aWRlb3MsIHNsaWRlc2hvd3MsIG9yIGV2ZW4gaW1hZ2VzIOKAk1xuICogdGhhdCBuZWVkIHRvIHJldGFpbiBhIHNwZWNpZmljIGFzcGVjdCByYXRpbyBidXQgYWRhcHQgdG8gdGhlIHdpZHRoIG9mIHRoZWlyXG4gKiBjb250YWluaW5nIGVsZW1lbnQuXG4gKlxuICogQmFzZWQgb246IGh0dHA6Ly9hbGlzdGFwYXJ0LmNvbS9hcnRpY2xlL2NyZWF0aW5nLWludHJpbnNpYy1yYXRpb3MtZm9yLXZpZGVvXG4gKi9cblxuLkZsZXhFbWJlZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi8qKlxuICogVGhlIGFzcGVjdC1yYXRpbyBoYWNrIGlzIGFwcGxpZWQgdG8gYW4gZW1wdHkgZWxlbWVudCBiZWNhdXNlIGl0IGFsbG93c1xuICogdGhlIGNvbXBvbmVudCB0byByZXNwZWN0IGBtYXgtaGVpZ2h0YC4gRGVmYXVsdCBhc3BlY3QgcmF0aW8gaXMgMToxLlxuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1ib3R0b206IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAzOjEgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1yYXRpby0tM2J5MSB7XG4gIHBhZGRpbmctYm90dG9tOiBjYWxjKDEwMCUgLyAzKTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogMjoxIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTJieTEge1xuICBwYWRkaW5nLWJvdHRvbTogNTAlO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiAxNjo5IGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTE2Ynk5IHtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogNDozIGFzcGVjdCByYXRpb1xuICovXG5cbi5GbGV4RW1iZWQtcmF0aW8tLTRieTMge1xuICBwYWRkaW5nLWJvdHRvbTogNzUlO1xufVxuXG4vKipcbiAqIEZpdCB0aGUgY29udGVudCB0byB0aGUgYXNwZWN0IHJhdGlvXG4gKi9cblxuLkZsZXhFbWJlZC1jb250ZW50IHtcbiAgYm90dG9tOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGxlZnQ6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbn1cblxuXG4vLyBBdCBtZWRpYS1xdWVyaWVzLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGlmICgkc3VpdC1mbGV4ZW1iZWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTNieTEgeyBwYWRkaW5nLWJvdHRvbTogY2FsYygxMDAlIC8gMyk7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMmJ5MSB7IHBhZGRpbmctYm90dG9tOiA1MCU7IH1cbiAgICBcdFx0LiN7JGJyZWFrcG9pbnR9LUZsZXhFbWJlZC1yYXRpby0tMTZieTkgeyBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1GbGV4RW1iZWQtcmF0aW8tLTRieTMgeyBwYWRkaW5nLWJvdHRvbTogNzUlOyB9XG4gICAgXHR9XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFNVSVQgR1JJRFxuLy8gICBWZXJzaW9uIDMuMC4zIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL2NvbXBvbmVudHMtZ3JpZFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBBUElcbi8vIEdyaWRcbi8vIEdyaWQtLWFsaWduQ2VudGVyXG4vLyBHcmlkLS1hbGlnblJpZ2h0XG4vLyBHcmlkLS1hbGlnbk1pZGRsZVxuLy8gR3JpZC0tYWxpZ25Cb3R0b21cbi8vIEdyaWQtLWZpdFxuLy8gR3JpZC0tZXF1YWxIZWlnaHRcbi8vIEdyaWQtY2VsbFxuLy8gR3JpZC1jZWxsLS1jZW50ZXJcblxuXG4vKiogQGRlZmluZSBHcmlkICovXG5cbi8vIDpyb290IHtcbi8vICAgLS1HcmlkLWd1dHRlci1zaXplOiAyMHB4O1xuLy8gfVxuXG4kR3JpZC1ndXR0ZXItc2l6ZTogc3BhY2UoMC43NSk7XG5cbi8qKlxuICogQ29yZSBncmlkIGNvbXBvbmVudFxuICpcbiAqIERPIE5PVCBhcHBseSBkaW1lbnNpb24gb3Igb2Zmc2V0IHV0aWxpdGllcyB0byB0aGUgYEdyaWRgIGVsZW1lbnQuIEFsbCBjZWxsXG4gKiB3aWR0aHMgYW5kIG9mZnNldHMgc2hvdWxkIGJlIGFwcGxpZWQgdG8gY2hpbGQgZ3JpZCBjZWxscy5cbiAqL1xuXG4vKiBHcmlkIGNvbnRhaW5lclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBbGwgY29udGVudCBtdXN0IGJlIGNvbnRhaW5lZCB3aXRoaW4gY2hpbGQgYEdyaWQtY2VsbGAgZWxlbWVudHMuXG4gKlxuICogMS4gQWNjb3VudCBmb3IgYnJvd3NlciBkZWZhdWx0cyBvZiBlbGVtZW50cyB0aGF0IG1pZ2h0IGJlIHRoZSByb290IG5vZGUgb2ZcbiAqICAgIHRoZSBjb21wb25lbnQuXG4gKi9cblxuLkdyaWQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBkaXNwbGF5OiBmbGV4OyAvKiAxICovXG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIG1hcmdpbjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAxICovXG59XG5cbi8qKlxuICogTW9kaWZpZXI6IGNlbnRlciBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkNlbnRlciB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiByaWdodCBhbGlnbiBhbGwgZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnblJpZ2h0IHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogbWlkZGxlLWFsaWduIGdyaWQgY2VsbHNcbiAqL1xuXG4uR3JpZC0tYWxpZ25NaWRkbGUge1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vKipcbiAqIE1vZGlmaWVyOiBib3R0b20tYWxpZ24gZ3JpZCBjZWxsc1xuICovXG5cbi5HcmlkLS1hbGlnbkJvdHRvbSB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsb3cgY2VsbHMgdG8gZXF1YWwgZGlzdHJpYnV0ZSB3aWR0aFxuICpcbiAqIDEuIFByb3ZpZGUgYWxsIHZhbHVlcyB0byBhdm9pZCBJRTEwIGJ1ZyB3aXRoIHNob3J0aGFuZCBmbGV4XG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbEM3XG4gKlxuICogICAgVXNlIGAwJWAgdG8gYXZvaWQgYnVnIGluIElFMTAvMTEgd2l0aCB1bml0bGVzcyBmbGV4IGJhc2lzXG4gKiAgICBodHRwOi8vZ2l0LmlvL3ZsbFd4XG4gKi9cblxuLkdyaWQtLWZpdCA+IC5HcmlkLWNlbGwge1xuICBmbGV4OiAxIDEgMCU7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogYWxsIGNlbGxzIG1hdGNoIGhlaWdodCBvZiB0YWxsZXN0IGNlbGwgaW4gYSByb3dcbiAqL1xuXG4uR3JpZC0tZXF1YWxIZWlnaHQgPiAuR3JpZC1jZWxsIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLyoqXG4gKiBNb2RpZmllcjogZ3V0dGVyc1xuICovXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcbiAgbWFyZ2luOiAwIGNhbGMoLTAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcbiAgcGFkZGluZzogMCBjYWxjKDAuNSAqICN7JEdyaWQtZ3V0dGVyLXNpemV9KTtcbn1cblxuLyogR3JpZCBjZWxsXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIE5vIGV4cGxpY2l0IHdpZHRoIGJ5IGRlZmF1bHQuIFJlbHkgb24gY29tYmluaW5nIGBHcmlkLWNlbGxgIHdpdGggYSBkaW1lbnNpb25cbiAqIHV0aWxpdHkgb3IgYSBjb21wb25lbnQgY2xhc3MgdGhhdCBleHRlbmRzICdHcmlkJy5cbiAqXG4gKiAxLiBTZXQgZmxleCBpdGVtcyB0byBmdWxsIHdpZHRoIGJ5IGRlZmF1bHRcbiAqIDIuIEZpeCBpc3N1ZSB3aGVyZSBlbGVtZW50cyB3aXRoIG92ZXJmbG93IGV4dGVuZCBwYXN0IHRoZVxuICogICAgYEdyaWQtY2VsbGAgY29udGFpbmVyIC0gaHR0cHM6Ly9naXQuaW8vdnc1b0ZcbiAqL1xuXG4uR3JpZC1jZWxsIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbiAgZmxleC1iYXNpczogMTAwJTsgLyogMSAqL1xuICBtaW4td2lkdGg6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBNb2RpZmllcjogaG9yaXpvbnRhbGx5IGNlbnRlciBvbmUgdW5pdFxuICogU2V0IGEgc3BlY2lmaWMgdW5pdCB0byBiZSBob3Jpem9udGFsbHkgY2VudGVyZWQuIERvZXNuJ3QgYWZmZWN0XG4gKiBhbnkgb3RoZXIgdW5pdHMuIENhbiBzdGlsbCBjb250YWluIGEgY2hpbGQgYEdyaWRgIG9iamVjdC5cbiAqL1xuXG4uR3JpZC1jZWxsLS1jZW50ZXIge1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuXG5cbi8vIEF0IG1lZGlhLXF1ZXJpZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaWYgKCRzdWl0LWdyaWQtYnJlYWtwb2ludHMgPT0gdHJ1ZSkge1xuICAgIEBlYWNoICRicmVha3BvaW50IGluIG1hcC1rZXlzKCRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICAgXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLS1hbGlnbkNlbnRlciAgeyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25SaWdodCAgIHsganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25NaWRkbGUgIHsgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAgIFx0XHQuI3skYnJlYWtwb2ludH0tR3JpZC0tYWxpZ25Cb3R0b20gIHsgYWxpZ24taXRlbXM6IGZsZXgtZW5kOyB9XG4gICAgXHRcdC4jeyRicmVha3BvaW50fS1HcmlkLWNlbGwtLWNlbnRlciAgeyBtYXJnaW46IDAgYXV0bzsgfVxuICAgIFx0fVxuICAgIH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICAgU1VJVCBHUklEIFNFVFRJTkdTXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5HcmlkLS13aXRoR3V0dGVyIHtcblx0bWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAvIDJ9O1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgbWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZX07IH1cbn1cblxuLkdyaWQtLXdpdGhHdXR0ZXIgPiAuR3JpZC1jZWxsIHtcblx0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgLyAyO1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7IH1cbn1cblxuLy8kZ3V0dGVyU3BhY2VOZWdhdGl2ZSA6IC0oJGd1dHRlclNwYWNlKTtcblxuLy8uR3JpZC0td2l0aEd1dHRlckxnIHtcbi8vXHRtYXJnaW46IDAgJGd1dHRlclNwYWNlTmVnYXRpdmU7XG4vL1x0cGFkZGluZzogMCAoJGd1dHRlclNwYWNlICogMik7XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHsgbWFyZ2luOiAwICRndXR0ZXJTcGFjZU5lZ2F0aXZlOyB9XG4vL31cbi8vXG4vLy5HcmlkLS13aXRoR3V0dGVyTGcgPiAuR3JpZC1jZWxsIHtcbi8vXHRwYWRkaW5nOiAwICRndXR0ZXJTcGFjZTtcbi8vXG4vL1x0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4cykgeyBwYWRkaW5nOiAwICRndXR0ZXJTcGFjZTsgfVxuLy99XG5cblxuLy8gc21cblxuLkdyaWQtLXdpdGhHdXR0ZXJTbSB7XG5cdG1hcmdpbjogMCAtI3skZ3V0dGVyU3BhY2UgKiAwLjI1fTtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IG1hcmdpbjogMCAtI3skZ3V0dGVyU3BhY2UgKiAwLjV9OyB9XG59XG5cbi5HcmlkLS13aXRoR3V0dGVyU20gPiAuR3JpZC1jZWxsIHtcblx0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgKiAwLjI1O1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgcGFkZGluZzogMCAkZ3V0dGVyU3BhY2UgKiAwLjI1OyB9XG59XG5cblxuLy8gbGdcblxuLkdyaWQtLXdpdGhHdXR0ZXJMZyB7XG5cdG1hcmdpbjogMCAtI3skZ3V0dGVyU3BhY2V9O1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgbWFyZ2luOiAwIC0jeyRndXR0ZXJTcGFjZSAqIDN9OyB9XG59XG5cbi5HcmlkLS13aXRoR3V0dGVyTGcgPiAuR3JpZC1jZWxsIHtcblx0cGFkZGluZzogMCAkZ3V0dGVyU3BhY2U7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBwYWRkaW5nOiAwICRndXR0ZXJTcGFjZSAqIDM7IH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBCQVNFOiBQQUdFXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbiAvKipcbiAgKiBTaW1wbGUgcGFnZS1sZXZlbCBzZXR1cCBmcm9tIEludWl0Q1NTLlxuICAqXG4gICogMS4gU2V0IHRoZSBkZWZhdWx0IGBmb250LXNpemVgIGFuZCBgbGluZS1oZWlnaHRgIGZvciB0aGUgZW50aXJlIHByb2plY3QsXG4gICogICAgc291cmNlZCBmcm9tIG91ciBkZWZhdWx0IHZhcmlhYmxlcy4gVGhlIGBmb250LXNpemVgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3RcbiAgKiAgICBpbiBlbXMsIHRoZSBgbGluZS1oZWlnaHRgIGlzIGNhbGN1bGF0ZWQgdG8gZXhpc3QgdW5pdGxlc3NseS5cbiAgKiAyLiBGb3JjZSBzY3JvbGxiYXJzIHRvIGFsd2F5cyBiZSB2aXNpYmxlIHRvIHByZXZlbnQgYXdrd2FyZCDigJhqdW1wc+KAmSB3aGVuXG4gICogICAgbmF2aWdhdGluZyBiZXR3ZWVuIHBhZ2VzIHRoYXQgZG8vZG8gbm90IGhhdmUgZW5vdWdoIGNvbnRlbnQgdG8gcHJvZHVjZVxuICAqICAgIHNjcm9sbGJhcnMgbmF0dXJhbGx5LlxuICAqIDMuIEVuc3VyZSB0aGUgcGFnZSBhbHdheXMgZmlsbHMgYXQgbGVhc3QgdGhlIGVudGlyZSBoZWlnaHQgb2YgdGhlIHZpZXdwb3J0LlxuICAqL1xuXG5odG1sIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgIG1pbi1oZWlnaHQ6IDEwMCU7IC8qIDMgKi9cbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7IC8qIDIgKi9cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBCQVNFOiBMSU5LXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbmEge1xuXHRjb2xvcjogY3VycmVudENvbG9yO1xuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0fVxufVxuXG4vL3AgYSxcbi8vbGkgYSB7XG4vL1x0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG4vL1x0fVxuLy99XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgTUlYSU5TXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFVzaW5nIGZvbnQtZmFjZT8gVXNlIHRoaXMgd2l0aCBpdC5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiB0eXBlUmVzZXQoKSB7XG4gICAgZm9udC1zdHJldGNoOiBub3JtYWw7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcbn1cblxuXG4vLyBNZWRpYSBxdWVyaWVzXG4vLyBJIGxvdmUgdGhpcyB2ZXJzaW9uLCBidXQgSSBuZWVkIG1vcmUgZmxleGliaWxpdHkuIFRoaXMgd2lsbCBiZSBkZXByZWNhdGVkXG4vLyBieSBCUzQncyBicmVha3BvaW50cyBtaXhpbi4gU2VlOiBgdG9vbHMubWl4aW5zLmJyZWFrcG9pbnRzYFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEBsaW5rIGh0dHA6Ly9zYXNzLWd1aWRlbGluLmVzLyNicmVha3BvaW50LW1hbmFnZXIgU2FzcyBHdWlkZWxpbmVzIC0gQnJlYWtwb2ludCBNYW5hZ2VyXG4vLyBAbGluayBodHRwOi8vd3d3LnNpdGVwb2ludC5jb20vbWFuYWdpbmctcmVzcG9uc2l2ZS1icmVha3BvaW50cy1zYXNzL1xuXG4vL0BtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4vL1x0Ly8gJHJhdy1xdWVyeTogbWFwLWdldCgkZ3JpZC1icmVha3BvaW50cywgJGJyZWFrcG9pbnQpO1xuLy9cdC8vICRyYXctcXVlcnk6IG1hcC1mZXRjaCgkc2l6ZSwgYnJlYWtwb2ludCwgJGJyZWFrcG9pbnQpO1xuLy9cdCRyYXctcXVlcnk6IHNpemUoYnJlYWtwb2ludCwgJGJyZWFrcG9pbnQpO1xuLy9cbi8vXHRAaWYgJHJhdy1xdWVyeSB7XG4vL1x0XHQkcXVlcnk6IGlmKHR5cGUtb2YoJHJhdy1xdWVyeSkgPT0gJ3N0cmluZycsIHVucXVvdGUoJHJhdy1xdWVyeSksIGluc3BlY3QoJHJhdy1xdWVyeSkpO1xuLy9cbi8vXHRcdEBtZWRpYSAjeyRxdWVyeX0ge1xuLy9cdFx0XHRAY29udGVudDtcbi8vXHRcdH1cbi8vXG4vL1x0fSBAZWxzZSB7XG4vL1x0XHRAZXJyb3IgJ05vIHZhbHVlIGZvdW5kIGZvciBgI3skYnJlYWtwb2ludH1gLiAnXG4vL1x0XHRcdCArICdQbGVhc2UgbWFrZSBzdXJlIGl0IGlzIGRlZmluZWQgaW4gYCRicmVha3BvaW50c2AgbWFwLic7XG4vL1x0fVxuLy99XG5cblxuLy8gQ2xlYXJmaXhcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAxLiBUaGUgc3BhY2UgY29udGVudCBpcyBvbmUgd2F5IHRvIGF2b2lkIGFuIE9wZXJhIGJ1ZyB3aGVuIHRoZVxuLy8gICAgY29udGVudGVkaXRhYmxlIGF0dHJpYnV0ZSBpcyBpbmNsdWRlZCBhbnl3aGVyZSBlbHNlIGluIHRoZSBkb2N1bWVudC5cbi8vICAgIE90aGVyd2lzZSBpdCBjYXVzZXMgc3BhY2UgdG8gYXBwZWFyIGF0IHRoZSB0b3AgYW5kIGJvdHRvbSBvZiBlbGVtZW50c1xuLy8gICAgdGhhdCBhcmUgY2xlYXJmaXhlZC5cbi8vIDIuIFRoZSB1c2Ugb2YgYHRhYmxlYCByYXRoZXIgdGhhbiBgYmxvY2tgIGlzIG9ubHkgbmVjZXNzYXJ5IGlmIHVzaW5nXG4vLyAgICBgOmJlZm9yZWAgdG8gY29udGFpbiB0aGUgdG9wLW1hcmdpbnMgb2YgY2hpbGQgZWxlbWVudHMuXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6IFwiIFwiOyAvLyAxXG5cdFx0ZGlzcGxheTogdGFibGU7IC8vIDJcblx0fVxuXG5cdCY6YWZ0ZXIge1xuXHRcdGNsZWFyOiBib3RoO1xuXHR9XG59XG5cblxuLy8gRXZlbnQgd3JhcHBlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEBhdXRob3IgSGFycnkgUm9iZXJ0c1xuLy8gQHBhcmFtIHtCb29sfSAkc2VsZiBbZmFsc2VdIC0gV2hldGhlciBvciBub3QgdG8gaW5jbHVkZSBjdXJyZW50IHNlbGVjdG9yXG4vLyBAbGluayBodHRwczovL3R3aXR0ZXIuY29tL2Nzc3dpemFyZHJ5L3N0YXR1cy80Nzg5Mzg1MzAzNDIwMDY3ODRcbi8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9zaW1wbGlmeWluZy1jb250ZXh0cy1ldmVudHMvXG5cbkBtaXhpbiBvbi1ldmVudCgkc2VsZjogZmFsc2UpIHtcblx0QGlmICRzZWxmIHtcblx0XHQmLFxuXHRcdCY6aG92ZXIsXG5cdFx0JjphY3RpdmUsXG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdCY6aG92ZXIsXG5cdFx0JjphY3RpdmUsXG5cdFx0Jjpmb2N1cyB7XG5cdFx0XHRAY29udGVudDtcblx0XHR9XG5cdH1cbn1cblxuXG4vLyBDb250ZXh0LWJhc2VkIHNlbGVjdG9yXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTWFrZSBhIGNvbnRleHQtYmFzZWQgc2VsZWN0b3IgYSBsaXR0bGUgbW9yZSBmcmllbmRseVxuLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXG4vLyBAcGFyYW0ge1N0cmluZ30gJGNvbnRleHRcbi8vIEBsaW5rIGh0dHBzOi8vY3NzLXRyaWNrcy5jb20vc25pcHBldHMvc2Fzcy9zaW1wbGlmeWluZy1jb250ZXh0cy1ldmVudHMvXG4vLyAubXktZWxlbWVudCB7XG4vLyAgICAgZGlzcGxheTogZmxleDtcbi8vICAgICBAaW5jbHVkZSB3aGVuLWluc2lkZSgnLm5vLWZsZXhib3gnKSB7XG4vLyAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuLy8gICAgIH1cbi8vIH1cbi8vIFJlcGxhY2luZ+KAplxuLy8gLm15LWVsZW1lbnQge1xuLy8gICAgIGRpc3BsYXk6IGZsZXg7XG4vLyAgICAgLm5vLWZsZXhib3ggJiB7XG4vLyAgICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuLy8gICAgIH1cbi8vIH1cblxuQG1peGluIHdoZW4taW5zaWRlKCRjb250ZXh0KSB7XG5cdCN7JGNvbnRleHR9ICYge1xuXHRcdEBjb250ZW50O1xuXHR9XG59XG5cblxuLy8gVHJhbnNpdGlvbiBiYXNlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUXVpY2sgYW5kIGVhc3kuIENvdWxkIGV4dGVuZCB0aGlz4oCmXG5cbkBtaXhpbiBiYXNlVHJhbnNpdGlvbihcblx0JHByb3BlcnR5OiBhbGxcbikge1xuXHR0cmFuc2l0aW9uLXByb3BlcnR5OiAkcHJvcGVydHk7XG5cdHRyYW5zaXRpb24tZHVyYXRpb246IG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGxvbmcpO1xuXHR0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbWFwLWZldGNoKCR0cmFuc2l0aW9uLCB0eXBlLCBiYXNlKTtcbn1cblxuXG4vLyBTY3V0IHJlbSBmYWxsYmFja1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGh0dHA6Ly9kYXZpZHRoZWNsYXJrLmdpdGh1Yi5pby9zY3V0L3JlbUZhbGxiYWNrLmh0bWxcbi8vIFJlcXVpcmVzOiBzY3V0LXJlbSBhbmQgc2N1dC1zdHJpcC11bml0LlxuLy8gUmVuYW1lZCByZW1GYWxsYmFjaygpIGZyb20gc2N1dC1yZW1GYWxsYmFjaygpIGZvciBlYXNlIG9mIHVzZS5cblxuQG1peGluIHJlbUZhbGxiYWNrIChcblx0JHBpeGVscyxcblx0JHByb3BlcnR5OiBmb250LXNpemVcbikge1xuXG5cdCRweC12YWxzOiBudWxsO1xuXHRAZWFjaCAkdmFsIGluICRwaXhlbHMge1xuXHRcdCR2YWwtaW4tcHg6IHNjdXQtc3RyaXAtdW5pdCgkdmFsKSAqIDFweDtcblx0XHQkcHgtdmFsczogYXBwZW5kKCRweC12YWxzLCAkdmFsLWluLXB4KTtcblx0fVxuXHQkcmVtLXZhbHM6IHJlbSgkcGl4ZWxzKTtcblxuXHQjeyRwcm9wZXJ0eX06ICRweC12YWxzO1xuXHQjeyRwcm9wZXJ0eX06ICRyZW0tdmFscztcblxufVxuXG5cbi8vIFRyYW5zZm9ybSBzbW9vdGhpbmcgaGFja3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBBcyBpcyBvZnRlbiB0aGUgY2FzZSwgc29tZSBkZXZpY2VzL2Jyb3dzZXJzIG5lZWQgYWRkaXRpb25hbCBjb2RlIHRvIGdldCBDU1MgdG8gd29ya1xuLy8gaW4gdGhlIG1vc3QgZGVzaXJlZCB3YXkuIFRoZXNlIG1peGlucyBhcmUgdXNlZCB0byBxdWlja2x5IGRyb3AgaW4gaGFja3MgZm9yIGVhY2ggZWxlbWVudFxuLy8gRmluZCBvdXQgbW9yZSBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vSWFuTHVubi9Ib3Zlci93aWtpL0hhY2tzLUV4cGxhaW5lZFxuLy8gMS4gSW1wcm92ZSBwZXJmb3JtYW5jZSBvbiBtb2JpbGUvdGFibGV0IGRldmljZXNcbi8vIDIuIEltcHJvdmUgYWxpYXNpbmcgb24gbW9iaWxlL3RhYmxldCBkZXZpY2VzXG4vLyAzLiBUcmFuc2Zvcm1zIG5lZWQgdG8gYmUgYmxvY2stbGV2ZWwgdG8gd29ya1xuLy8gNC4gQENGOiAnd2lsbC1jaGFuZ2UnIGlzIGFsbW9zdCBhdmFpbGFibGUuIFNlZTogaHR0cHM6Ly9kZXYub3BlcmEuY29tL2FydGljbGVzL2Nzcy13aWxsLWNoYW5nZS1wcm9wZXJ0eS9cblxuQG1peGluIGhhcmR3YXJlQWNjZWwoKSB7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTsgLy8xLlxufVxuXG5AbWl4aW4gaW1wcm92ZUFudGlBbGlhcygpIHtcblx0Ym94LXNoYWRvdzogMCAwIDFweCByZ2JhKDAsIDAsIDAsIDApOyAvLyAyLlxufVxuXG5AbWl4aW4gZm9udFNtb290aCgpIHtcblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5AbWl4aW4gZm9yY2VCbG9ja0xldmVsKCkge1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8vMy5cblx0Ly8gdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuQG1peGluIGFudGljaXBhdGVQYWludGluZyB7XG5cdHdpbGwtY2hhbmdlOiBhbGw7IC8vIDQuXG59XG5cbkBtaXhpbiBzbW9vdGhUcmFuc2l0aW9uKCkge1xuXHQvL0BpbmNsdWRlIGZvcmNlQmxvY2tMZXZlbCgpO1xuXHRAaW5jbHVkZSBoYXJkd2FyZUFjY2VsKCk7XG5cdC8qIEBpbmNsdWRlIGltcHJvdmVBbnRpQWxpYXMoKTsgKi9cblx0QGluY2x1ZGUgZm9udFNtb290aCgpO1xuXHQvKiBAaW5jbHVkZSBhbnRpY2lwYXRlUGFpbnRpbmcoKTsgKi9cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBJTUFHRVNcbi8vICAgVE9ETzogaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9vbi1vYmplY3QtZml0LWFuZC1vYmplY3QtcG9zaXRpb24vXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIDEuIEZsdWlkIGltYWdlcyBmb3IgcmVzcG9uc2l2ZSBwdXJwb3Nlcy5cbi8vIDIuIE9mZnNldCBgYWx0YCB0ZXh0IGZyb20gc3Vycm91bmRpbmcgY29weS5cbi8vIDMuIFNldHRpbmcgYHZlcnRpY2FsLWFsaWduYCByZW1vdmVzIHRoZSB3aGl0ZXNwYWNlIHRoYXQgYXBwZWFycyB1bmRlciBgaW1nYFxuLy8gICAgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBkcm9wcGVkIGludG8gYSBwYWdlIGFzLWlzLiBTYWZlciBhbHRlcm5hdGl2ZSB0b1xuLy8gICAgdXNpbmcgYGRpc3BsYXk6IGJsb2NrO2AuXG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlOyAgICAgICAgLy8gMS5cbiAgICBmb250LXN0eWxlOiBpdGFsaWM7ICAgICAvLyAyLlxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IC8vIDMuXG59XG5cblxuLy8gMS4gR29vZ2xlIE1hcHMgYnJlYWtzIGlmIGBtYXgtd2lkdGg6IDEwMCVgIGFjdHMgdXBvbiBpdDsgdXNlIHRoZWlyIHNlbGVjdG9yXG4vLyAgICB0byByZW1vdmUgdGhlIGVmZmVjdHMuXG4vLyAyLiBJZiBhIGB3aWR0aGAgYW5kL29yIGBoZWlnaHRgIGF0dHJpYnV0ZSBoYXZlIGJlZW4gZXhwbGljaXRseSBkZWZpbmVkLCBsZXTigJlzXG4vLyAgICBub3QgbWFrZSB0aGUgaW1hZ2UgZmx1aWQuXG5cbi5nbS1zdHlsZSBpbWcsIC8vIDEuXG5pbWdbd2lkdGhdLCAgICAvLyAyLlxuaW1nW2hlaWdodF0geyAgLy8gMi5cbiAgICBtYXgtd2lkdGg6IG5vbmU7XG59XG5cbi8vIGNpcmNsZSBpdFxuLm8taW1hZ2UtLWNpcmNsZSB7XG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICBUWVBPR1JBUEhZIEVMRU1FTlQgU0VUVElOR1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLyogdW5jc3M6aWdub3JlICovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxuYmxvY2txdW90ZSxcbnVsLCBvbCwgbGksIGRsLCBkZFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZm9ybSwgZmllbGRzZXQsIGxlZ2VuZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbixcbnRhYmxlLCB0aCwgdGQsIGNhcHRpb25cbnByZSwgc21hbGwsXG5lbSwgYiB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xufVxuXG5cbi8vIFJvb3Qgc3R5bGluZyB0byBjYXNjYWRlIHRocnVcbi8vIE1vdmVkIHRvIGJvZHksIG5vdCA6cm9vdCwgc28gdGhhdCBpdCdzIGVhc2llciB0byB1c2UgZm9udGZhY2VvbmxvYWQuanNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmh0bWwge1xuXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcblx0Y29sb3I6IHBhbGV0dGUodGV4dCk7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXI7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0bGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXQ7XG5cdHRleHQtYWxpZ246IGxlZnQ7XG5cdC8vdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljUHJlY2lzaW9uO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbn1cblxuXG4vLyBDb25zaXN0ZW50IHZlcnRpY2FsIHJoeXRobVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyogdW5jc3M6aWdub3JlICovXG4vLyBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBsaSwgZGwsXG5ibG9ja3F1b3RlLCBwLCBhZGRyZXNzLFxudGFibGUsIHRpbWUsXG5maWVsZHNldCxcbnByZSB7XG5cdG1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGhTcGFjZTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBESVNQTEFZIE9CSkVDVFNcbi8vICAgRnJvbTogU1VJVCBQT1NJVElPTiBVVElMU1xuLy8gICBWZXJzaW9uIDEuMC4xIDE2MDYyOVxuLy8gICBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9zdWl0Y3NzL3V0aWxzLXBvc2l0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIEFQSVxuLy8gdS1wb3NBYnNvbHV0ZVxuLy8gdS1wb3NGaXhlZFxuLy8gby1wb3NBYnNvbHV0ZUNlbnRlclxuLy8gby1wb3NGaXhlZENlbnRlclxuLy8gby1wb3NGdWxsU2NyZWVuXG5cbi8vIHBvc0Fic29sdXRlQ2VudGVyIGxlZ2FjeTpcbi8vIGJvdHRvbTogMCAhaW1wb3J0YW50O1xuLy8gbGVmdDogMCAhaW1wb3J0YW50O1xuLy8gbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XG4vLyBwb3NpdGlvbjogYWJzb2x1dGUgIWltcG9ydGFudDtcbi8vIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4vLyB0b3A6IDAgIWltcG9ydGFudDtcblxuXG5AbWl4aW4gdS1wb3NBYnNvbHV0ZSB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuQG1peGluIHUtcG9zRml4ZWQge1xuXHRiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5cdHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuQG1peGluIG8tcG9zQ2VudGVyKFxuXHQkcG9zQ2VudGVyUG9zaXRpb246IGFic29sdXRlXG4pIHtcblx0bGVmdDogNTAlO1xuXHRwb3NpdGlvbjogJHBvc0NlbnRlclBvc2l0aW9uO1xuXHR0b3A6IDUwJTtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG59XG5cbkBtaXhpbiBvLXBvc0Z1bGxTY3JlZW4oXG5cdCRwb3NGdWxsU2NyZWVuOiBmaXhlZFxuKSB7XG5cdGJvdHRvbTogMDtcblx0bGVmdDogMDtcblx0bWFyZ2luOiBhdXRvO1xuXHRwb3NpdGlvbjogJHBvc0Z1bGxTY3JlZW47XG5cdHJpZ2h0OiAwO1xuXHR0b3A6IDA7XG59XG5cbi5vLXBvc0Fic29sdXRlQ2VudGVyICAgIHsgQGluY2x1ZGUgby1wb3NDZW50ZXIoKTsgfVxuLm8tcG9zRml4ZWRDZW50ZXIgICAgICAgeyBAaW5jbHVkZSBvLXBvc0NlbnRlcihmaXhlZCk7IH1cbi5vLXBvc0Z1bGxTY3JlZW4gICAgICAgIHsgQGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKCk7IH1cbi5vLXBvc0Fic29sdXRlQ2VudGVyQWx0IHsgQGluY2x1ZGUgby1wb3NGdWxsU2NyZWVuKGFic29sdXRlKTsgfVxuXG4vLyAxLiBNYWtlIHN1cmUgZml4ZWQgZWxlbWVudHMgYXJlIHByb21vdGVkIGludG8gYSBuZXcgbGF5ZXIsXG4vLyAgICBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucy5cblxuLm8tcG9zRnVsbFNjcmVlbixcbi5vLXBvc0ZpeGVkQ2VudGVyIHtcblx0YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyAvLyAxXG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQ09OVEFJTkVSIE9CSkVDVFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5AbWl4aW4gY29udGFpbmVyKFxuXHQkd2lkdGg6IGNvbnRhaW5lci13aWR0aChsZylcbikge1xuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xuXHRoZWlnaHQ6IGluaGVyaXQ7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRtYXgtd2lkdGg6ICR3aWR0aDtcblx0cGFkZGluZzogMCBzcGFjZSgxKTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG5cdHAsXG5cdGxpLFxuXHRvbCB7XG5cdFx0JjpsYXN0LWNoaWxkLFxuXHRcdCY6bGFzdC1jaGlsZCBhIHtcblx0XHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdFx0fVxuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdHBhZGRpbmc6IDAgc3BhY2UoMS41KTtcblx0fVxufVxuXG4uby1jb250YWluZXIge1xuXHRAaW5jbHVkZSBjb250YWluZXIoKTtcblxuXHQvL0BpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobGcpIHsgbWF4LXdpZHRoOiBjb250YWluZXItd2lkdGgobGcpOyB9XG5cbiAgICAvLyBzaXplc1xuXG5cdCYtLW1kIHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aChtZCkgKTtcblx0fVxuXG5cdCYtLXhsIHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aCh4bCkgKTtcblx0fVxuXG4gICAgJi0tc3VwZXIge1xuICAgICAgICAvL0BpbmNsdWRlIGNvbnRhaW5lciggY29udGFpbmVyLXdpZHRoKHN1KSApO1xuXHRcdG1heC13aWR0aDogMTAwJTtcblx0XHRwYWRkaW5nOiAwIHNwYWNlKDEuNSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAgICAgcGFkZGluZzogMCBzcGFjZSg0KTtcbiAgICAgICAgfVxuXHR9XG5cblx0Ji0tcG9zdEluZm8ge1xuXHRcdEBpbmNsdWRlIGNvbnRhaW5lciggY29udGFpbmVyLXdpZHRoKGxnKSApO1xuXHRcdC8vcGFkZGluZzogMDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcblx0XHRcdHBhZGRpbmc6IDAgIWltcG9ydGFudDtcblx0XHR9XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XG5cdFx0XHQvLyBAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aCh4bCkgKTtcblx0XHRcdHBhZGRpbmc6IDAgc3BhY2UoMS41KTtcblx0XHR9XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHN1KSB7XG5cdFx0XHRAaW5jbHVkZSBjb250YWluZXIoIGNvbnRhaW5lci13aWR0aCh4bCkgKTtcblx0XHR9XG5cdH1cbn1cblxuLkNvbHVtbi0tcG9zdCB7XG5cdG1heC13aWR0aDogY29udGFpbmVyLXdpZHRoKHhzKTtcblx0Ly8gQGluY2x1ZGUgd2hlbi1pbnNpZGUoXCIuby1jb250YWluZXJcIikgICAgIHsgbWFyZ2luLWxlZnQ6IDA7IH1cblx0Ly8gQGluY2x1ZGUgd2hlbi1pbnNpZGUoXCIuby1jb250YWluZXItLXhsXCIpIHsgbWFyZ2luLWxlZnQ6IGNhbGMoICgxMjAwLTk2MCkgLyAyICk7IH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBDT01QT05FTlQ6IEdSSURcbi8vICAgU2VlOiBodHRwczovL2dpdGh1Yi5jb20vSGV5ZG9uL2Z1a29sLWdyaWRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5vLWdyaWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uby1ncmlkID4gKiB7XG4gICAgZmxleDogMSAwIDVlbTtcbn1cblxuLy8gdmFyaWFibGVzXG4uby1ncmlkLS1zcGFjZUJldHdlZW4geyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBPQkpFQ1Q6IENVUlNPUiBTVEFURVNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hdHRyaWJ1dGUtc2VsZWN0b3JzL1xuLy8gaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9hbG1hbmFjL3NlbGVjdG9ycy9hL2F0dHJpYnV0ZS9cbi8vIEFsc286IEF0dHJpYnV0ZSBOb3QgRXF1YWwgU2VsZWN0b3IgW25hbWUhPeKAnXZhbHVl4oCdXVxuXG4vLyBbZGF0YS12YWx1ZSo9XCJkaXNtaXNzXCJdLFxuLy8gW2RhdGEtKj1cInRvZ2dsZVwiXSxcbi8vIFtkYXRhLXRvZ2dsZV0sXG4vLyBbcmVsXj1cImRhdGEtdG9nZ2xlXCJdLFxuW2RhdGEtbW9kYWwtdG9nZ2xlXSxcbltkYXRhLXRvZ2dsZS1mb2xkXSxcbltkYXRhLWRpc21pc3NdXG57XG5cdGN1cnNvcjogcG9pbnRlcjtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBPQkpFQ1Q6IExJU1Rcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gMS4gUmVtb3ZlIGV4dHJhIHZlcnRpY2FsIHNwYWNpbmcgd2hlbiBuZXN0aW5nIGxpc3RzLlxuXG51bCB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcblx0bWFyZ2luLWxlZnQ6IG1hcC1mZXRjaCgkbGlzdC1pbnNldCwgbWFyZ2luKTtcblx0cGFkZGluZy1sZWZ0OiBtYXAtZmV0Y2goJGxpc3QtaW5zZXQsIHBhZGRpbmcpO1xufVxuXG5vbCB7XG5cdGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDtcbn1cblxubGkge1xuXHRtYXJnaW4tYm90dG9tOiAwO1xuXG5cdD4gdWwsXG5cdD4gb2wge1xuXHRcdG1hcmdpbi1ib3R0b206IDA7IC8vIDEuXG5cdH1cbn1cblxuXG4vLyBMaXN0IG9iamVjdDogZGVmYXVsdFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGxpc3QoKSB7XG5cdG1hcmdpbi1sZWZ0OiBtYXAtZmV0Y2goJGxpc3QtaW5zZXQsIG1hcmdpbik7XG5cdHBhZGRpbmctbGVmdDogbWFwLWZldGNoKCRsaXN0LWluc2V0LCBwYWRkaW5nKTtcbn1cblxuLm8tbGlzdCB7IEBpbmNsdWRlIGxpc3QoKTsgfVxuXG5cbi8vIENsZWFuIGxpc3Qgb2JqZWN0OiByZW1vdmUgYWxsIGRlZmF1bHQgc3BhY2luZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGxpc3RDbGVhbigpIHtcblx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xuXHRtYXJnaW4tbGVmdDogMDtcblx0cGFkZGluZy1sZWZ0OiAwO1xufVxuXG4uby1saXN0Q2xlYW4geyBAaW5jbHVkZSBsaXN0Q2xlYW4oKTsgfVxuXG5cbi8vIElubGluZSBsaXN0IG9iamVjdDpcbi8vIEFwcGx5IHRvIHRoZSB1bC9vbCB0YWcsIGJ1dCBpdCdzIHNldHVwIGZvciB1c2Ugb24gYW55IGRpdi5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBsaXN0SW5saW5lKCkge1xuXHRAaW5jbHVkZSBsaXN0Q2xlYW4oKTtcblxuXHRsaSxcblx0ZGl2IHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0Jjpub3QoOmxhc3QtY2hpbGQpIHtcblx0XHRcdG1hcmdpbi1yaWdodDogc3BhY2UoMC4yNSk7XG5cdFx0fVxuXHR9XG59XG5cbi5vLWxpc3RJbmxpbmUgeyBAaW5jbHVkZSBsaXN0SW5saW5lKCk7IH1cbiIsIi8vXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE9CSkVDVDogTElOS1Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLy8gVGhlbWU6IGxpbmtcblxuYSB7XG5cdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdC8vYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoIHBhbGV0dGUodGV4dCksIDAuMiApO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG5cdFx0Ly9ib3JkZXItY29sb3I6IHJnYmEoIHBhbGV0dGUodGV4dCksIDEgKTtcblx0fVxufVxuXG5wIGEsXG5saSBhIHtcblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0Ly8gYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG5cdH1cbn1cblxuXG4vLyBPYmplY3Q6IGJ1cmllZCBhbmNob3JzXG4vLyBTYW1lIHBhdHRlcm4gYXMgU3VpdCdzIHUtbGlua0NvbXBsZXgsIGJ1dCBkaWZmZXJlbnQgc3R5bGluZy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbkBtaXhpbiBjb21wbGV4TGluayB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHR3aWR0aDogMTAwJTtcblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHQuby1saW5rQnVyaWVkVGFyZ2V0IHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuXHRcdH1cblx0fVxufVxuXG4uby1saW5rQnVyaWVkIHtcblx0QGluY2x1ZGUgY29tcGxleExpbmsoKTtcblx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMC41KTtcbn1cblxuLy8gRG9uJ3QgZm9yZ2V0OiB0aGlzIGlzIGEgc3Bhbiwgbm90IGFuIDxhPixcbi8vIHNvIGl0IG5lZWRzIHRoZXNlIHN0eWxlcy5cbi5vLWxpbmtCdXJpZWRUYXJnZXQge1xuXHRAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuXHRjb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbn1cblxuXG4vLyBDb21wb25lbnQ6IGNvbnRyb2wgdW5kZXJsaW5lcyB3aXRoIGxpbmVhci1ncmFkaWVudFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGxpbmtSdWxlQmxhY2s6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShkYXJrKSwwKSA1MCUsICByZ2JhKHBhbGV0dGUoZGFyayksMC40KSA1MCUpO1xuJGxpbmtSdWxlR3JleTogIGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShtdXRlZCksMCkgNTAlLCBwYWxldHRlKG11dGVkKSA1MCUpO1xuJGxpbmtSdWxlTGl0ZTogIGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShsaWdodCksMCkgNTAlLCBwYWxldHRlKGxpZ2h0KSA1MCUpO1xuJGxpbmtSdWxlV2hpdGU6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZSh3aGl0ZSksMCkgNTAlLCBwYWxldHRlKHdoaXRlKSA1MCUpO1xuJGxpbmtSdWxlQnJhbmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShicmFuZCksMCkgNTAlLCBwYWxldHRlKGJyYW5kKSA1MCUpO1xuJGxpbmtSdWxlTm9uZTogIGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEocGFsZXR0ZShkYXJrKSwwKSA1MCUsICByZ2JhKHBhbGV0dGUoZGFyayksMCkgNTAlKTtcblxuQG1peGluIHVuZGVybGluZUxpbmsoXG5cdCRtaXhpbi1ydWxlOiAkbGlua1J1bGVCbGFjayxcblx0JG1peGluLWhvdmVyLXJ1bGU6IG5vbmUsXG5cdCRtaXhpbi1jb2xvcjogY3VycmVudENvbG9yLFxuXHQkbWl4aW4taG92ZXItY29sb3I6IGluaGVyaXQsXG5cdC8vICRtaXhpbi1ob3Zlci1jb2xvcjogY3VycmVudENvbG9yLFxuXHQkbWl4aW4taW52ZXJzZTogZmFsc2VcblxuKSB7XG5cblx0QGlmICRtaXhpbi1ydWxlID09ICdub25lJyB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogbm9uZTtcblx0XHQvL3BhZGRpbmctYm90dG9tOiAwO1xuXHR9XG5cblx0QGVsc2Uge1xuXHRcdGJhY2tncm91bmQtaW1hZ2U6ICRtaXhpbi1ydWxlO1xuXHRcdGJhY2tncm91bmQtcmVwZWF0OiByZXBlYXQteDtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IDFweCAycHg7XG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCAxMDAlO1xuXHRcdGNvbG9yOiAkbWl4aW4tY29sb3I7XG5cdFx0cGFkZGluZy1ib3R0b206IDA7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHR9XG5cblx0QGluY2x1ZGUgb24tZXZlbnQoKSB7XG5cdFx0YmFja2dyb3VuZC1pbWFnZTogJG1peGluLWhvdmVyLXJ1bGU7XG5cdFx0Y29sb3I6ICRtaXhpbi1ob3Zlci1jb2xvcjtcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cdH1cbn1cblxuLm8tbGluayB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoKTsgfVxuLm8tY2hpbGRMaW5rIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoKTsgfSB9XG5cbi5vLWxpbmtHcmV5IHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlR3JleSk7IH1cbi5vLWNoaWxkTGlua0dyZXkgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlR3JleSk7IH0gfVxuXG4uby1saW5rTGl0ZSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUxpdGUpOyB9XG4uby1jaGlsZExpbmtMaXRlIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZUxpdGUpOyB9IH1cblxuLm8tbGlua0JyYW5kIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygkbWl4aW4tcnVsZTogJGxpbmtSdWxlQnJhbmQpOyB9XG4uby1jaGlsZExpbmtCcmFuZCB7IGEgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVCcmFuZCk7IH0gfVxuXG4uby1saW5rV2hpdGUgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCRtaXhpbi1ydWxlOiAkbGlua1J1bGVXaGl0ZSk7IH1cbi5vLWNoaWxkTGlua1doaXRlIHsgYSB7IEBpbmNsdWRlIHVuZGVybGluZUxpbmsoJG1peGluLXJ1bGU6ICRsaW5rUnVsZVdoaXRlKTsgfSB9XG5cbi5vLWxpbmtJbnZpc2libGUgeyBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKG5vbmUpOyB9XG4uby1jaGlsZExpbmtJbnZpc2libGUgeyBhIHsgQGluY2x1ZGUgdW5kZXJsaW5lTGluayhub25lKTsgfSB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgRkxFWCBBTElHTkVSIE9CSkVDVFxuLy8gICBTZWU6IGh0dHBzOi8vcGhpbGlwd2FsdG9uLmdpdGh1Yi5pby9zb2x2ZWQtYnktZmxleGJveC9kZW1vcy92ZXJ0aWNhbC1jZW50ZXJpbmcvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8qKlxuICogMS4gSWYgSUUxMC8xMSBjb21wYXRpYmlsaXR5IHJlcSdkLCB1c2UgaGVpZ2h0LlxuICogMi4gSWYgeW91IG5lZWQgbWluLWhlaWdodCwgd3JhcCBpbiAndS1pZU1pbkhlaWdodEJ1ZycuXG4gKiBTZWUgaHR0cDovL2JpdC5seS8xZ3k4T0pTIGZvciBkZXRhaWxzLlxuICovXG5AbWl4aW4gby1hbGlnbmVyIHtcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0aGVpZ2h0OiAxMDAlOyAvKiAxICovXG5cdG1pbi1oZWlnaHQ6IDEwMCU7IC8qIDIgKi9cblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbkBtaXhpbiBvLWFsaWduZXItaXRlbSB7XG5cdGZsZXg6IDE7XG59XG5cbi5vLWFsaWduZXIge1xuXHRAaW5jbHVkZSBvLWFsaWduZXI7XG59XG5cbi5vLWFsaWduZXItaXRlbSB7XG5cdEBpbmNsdWRlIG8tYWxpZ25lci1pdGVtO1xufVxuXG4uby1hbGlnbmVyLWl0ZW0tLXRvcCB7XG5cdGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi5vLWFsaWduZXItaXRlbS0tYm90dG9tIHtcblx0YWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG5cbi5vLWFsaWduZXItaXRlbS0tZml4ZWQge1xuXHRmbGV4OiBub25lO1xuXHRtYXgtd2lkdGg6IDUwJTtcbn1cblxuLyoqXG4gKiBGaXhlcyB0aGUgbWluLWhlaWdodCBidWcgaW4gSUUxMC0xMS5cbiAqIFRoaXMgY2xhc3Mgc2hvdWxkIGJlIGFkZGVkIHRvIGEgY29udGFpbmVyIGVsZW1lbnQgYXMgZGVzY3JpYmVkIGluXG4gKiBGbGV4YnVnICMzLiBTZWUgaHR0cDovL2JpdC5seS8xZ3k4T0pTIGZvciBkZXRhaWxzLlxuICovXG4udS1pZU1pbkhlaWdodEJ1Z0ZpeCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgQUxUIFZFUlRJQ0FMIEFMSUdORVJcbi8vICAgUmlwcGVkIGZyb206IGluc3RydW1lbnQuY29tXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5vLWdob3N0IHtcbiAgICBmb250LXNpemU6IDA7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xufVxuXG4uby1naG9zdDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiAtMXB4O1xuICAgIHdpZHRoOiAxcHg7XG59XG5cbi5vLWdob3N0OmJlZm9yZSxcbi5vLWdob3N0LWNoaWxkIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gT0JKRUNUOiBSVUxFXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIFRPRDA6IGZpZ3VyZSBvdXQgd2F5cyB0byBtYW5hZ2UgdGhpcyBjb21wbGV4aXR54oCmXG4vLyAubXNtLVNlY3Rpb25SdWxlICAgICAgICB7IEBpbmNsdWRlIFNlY3Rpb25ydWxlKCk7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZGlzcGxheTogbm9uZTsgfSB9XG4vLyAubXNtLVNlY3Rpb25SdWxlLS1saWdodCB7IEBpbmNsdWRlIFNlY3Rpb25ydWxlKCRtaXhpbi1jb2xvcjogcmdiYSggcGFsZXR0ZShtdXRlZCksIDAuNSkgKTsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBkaXNwbGF5OiBub25lOyB9IH1cbi8vIC5teHMtU2VjdGlvblJ1bGUgICAgICAgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7IEBpbmNsdWRlIFNlY3Rpb25ydWxlKCk7IH0gfVxuXG5AbWl4aW4gcnVsZShcblx0JG1peGluLWNvbG9yOiBwYWxldHRlKGJyYW5kKSxcblx0JG1peGluLXdlaWdodDogMXB4XG4pIHtcblx0Ym9yZGVyOiAwO1xuXHRib3JkZXItdG9wOiAkbWl4aW4td2VpZ2h0IHNvbGlkICRtaXhpbi1jb2xvcjtcbn1cblxuLy8gSW5kZXBlZGVudOKAplxuXG4uSHpSdWxlIHtcblx0QGluY2x1ZGUgcnVsZSggcGFsZXR0ZShsaWdodCkgKTtcblx0aGVpZ2h0OiAwO1xuXHRtYXJnaW4tdG9wOiBjYWxjKCAje3NwYWNlKDEpfSAtIDFweCk7XG5cdG1hcmdpbi1ib3R0b206IHNwYWNlKDEpO1xufVxuXG4vLyBDb250YWluZWQgb27igKZcblxuLlJ1bGUge1xuXHRAaW5jbHVkZSBydWxlKCk7XG59XG5cbi5EaXZSdWxlLS1saWdodCB7XG5cdEBpbmNsdWRlIHJ1bGUoIDFweCwgcGFsZXR0ZShiYXNlKSApO1xufVxuXG4uRGl2UnVsZS0tYm90dG9tIHtcblx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUodGV4dCk7XG59XG5cbi8vIENvbnRhaW5lZCBvbiB2ZXJ0aWNhbGx54oCmXG5cbi5WZXJ0UnVsZS0tbGVmdCB7XG5cdGJvcmRlci1sZWZ0OiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBPQkpFQ1Q6IFNWRyBJQ09OU1xuLy8gICBSaXBwZWQgZnJvbSBPVUkgaWNvbnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLm8taWNvbldyYXBwZXIge1xuXHQvL2N1cnNvcjogcG9pbnRlcjtcblx0Ly9kaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdC8vbWFyZ2luOiAtMzBweDtcblx0Ly9wYWRkaW5nOiAzMHB4O1xufVxuXG4vLy5vLWljb25XcmFwcGVyICsgLm8taWNvbldyYXBwZXIge1xuLy9cdG1hcmdpbi10b3A6IHNwYWNlKDAuNSk7XG4vL31cblxuLy8gLiN7JG5hbWVzcGFjZX1JY29uLFxuLm8taWNvbiB7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRmaWxsOiBjdXJyZW50Q29sb3I7XG5cdGhlaWdodDogMzJweDtcblx0bGluZS1oZWlnaHQ6IDE7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXHR3aWR0aDogMzJweDtcblxuXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRvdXRsaW5lOiAwO1xuXHR9XG5cblx0Ji0tc3Ryb2tlIHtcbiAgICAgICAgZmlsbDogdHJhbnNwYXJlbnQ7XG5cdFx0c3Ryb2tlOiBjdXJyZW50Q29sb3I7XG5cdFx0c3Ryb2tlLXdpZHRoOiAycHg7XG5cdFx0c3Ryb2tlLWxpbmVqb2luOiByb3VuZDtcblx0fVxuXG5cdC8vIDI0OjE4IHJhdGlvXG5cdCYtLW5hdiB7XG5cdFx0aGVpZ2h0OiAyMHB4O1xuXHRcdG1hcmdpbi1sZWZ0OiAxMnB4O1xuXHRcdHdpZHRoOiAxNXB4O1xuXHR9XG5cblx0Ji0tc20ge1xuICAgICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcblx0XHR3aWR0aDogMTBweDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdHdpZHRoOiAxMXB4O1xuXHRcdFx0aGVpZ2h0OiAxMXB4O1xuXHRcdH1cblx0fVxuXG5cdCYtLW1kIHtcblx0XHR3aWR0aDogMjdweDtcblx0XHRoZWlnaHQ6IDI3cHg7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHR3aWR0aDogMzZweDtcblx0XHRcdGhlaWdodDogMzZweDtcblx0XHR9XG5cdH1cblxuXHQmLS1sZyB7XG5cdFx0d2lkdGg6IHJlbSgzMik7XG5cdFx0aGVpZ2h0OiByZW0oMzIpO1xuXHR9XG5cblx0Ji0teGwge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG5cdFx0aGVpZ2h0OiA0OHB4O1xuICAgICAgICB3aWR0aDogNDhweDtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHRoZWlnaHQ6IDYwcHg7XG4gICAgICAgICAgICB3aWR0aDogNjBweDtcblx0XHR9XG5cdH1cblxuXHQmLS1zdXBlciB7XG5cdFx0d2lkdGg6IHJlbSg0MCk7XG5cdFx0aGVpZ2h0OiByZW0oNDApO1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdFx0d2lkdGg6IHJlbSg0OCk7XG5cdFx0XHRoZWlnaHQ6IHJlbSg0OCk7XG5cdFx0fVxuXHR9XG5cblx0Ji0tbGVmdCB7XG5cdFx0bWFyZ2luLXJpZ2h0OiAzcHg7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDRweDtcblx0XHR9XG5cdH1cblxuXHQmLS1sZWZ0U20ge1xuXHRcdG1hcmdpbi1yaWdodDogMXB4O1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiByZW0oMik7XG5cdFx0fVxuXHR9XG5cblx0Ji0tcmlnaHQge1xuXHRcdG1hcmdpbi1sZWZ0OiA4cHg7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0XHRtYXJnaW4tbGVmdDogMTJweDtcblx0XHR9XG5cdH1cblxuXHQmLS1yaWdodFNtIHtcblx0XHRtYXJnaW4tbGVmdDogMXB4O1xuXG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdFx0bWFyZ2luLWxlZnQ6IHJlbSgyKTtcblx0XHR9XG5cdH1cblxuXHQvLyBUaGlzIGlzIGEgdmVydGljYWwgYWxpZ25tZW50IGZpeCB3aGVuIHVzZWQgdG8gdGhlIHJpZ2h0IG9mIGAuI3skbmFtZXNwYWNlfWljb25gLlxuXHQrIFtjbGFzc149XCIjeyRuYW1lc3BhY2V9LWFycm93LWlubGluZVwiXSB7XG5cdFx0dmVydGljYWwtYWxpZ246IHN1cGVyO1xuXHR9XG5cblx0Ji0tdGV4dEFsaWduIHtcblx0XHQvLyB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xuXHRcdGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcblx0XHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXHR9XG5cblx0Ji0tdGV4dExnQWxpZ24ge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxcHgpO1xuXHR9XG5cblx0Ji0tYnV0dG9uQWxpZ24ge1xuXHRcdGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcblx0XHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXHR9XG5cblx0Ji0tZm9ybUFsaWduIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0dmVydGljYWwtYWxpZ246IHRvcDtcblx0fVxuXG5cdCYtLW1lZGlhQWxpZ24ge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWShyZW0oLTQpKTtcblx0fVxufVxuXG4vLy8gSWNvbiBhbGlnbm1lbnQgZml4ZXNcbi8vLyBAZGVzY3JpcHRpb24gRml4IGZvciBpY29ucyBpbnNpZGUgYnV0dG9ucyB3aXRoIHRleHQgYW5kIGljb25zIGluc2lkZSB0YWJzLlxuXG4vLyAuI3skbmFtZXNwYWNlfWJ1dHRvbiAuI3skbmFtZXNwYWNlfUljb24ge1xuLy8gICB2ZXJ0aWNhbC1hbGlnbjogc3ViO1xuLy8gfVxuLy9cbi8vIC4jeyRuYW1lc3BhY2V9dGFicy1uYXZfX2l0ZW0gLiN7JG5hbWVzcGFjZX1pY29uIHtcbi8vICAgdmVydGljYWwtYWxpZ246IHN1Yjtcbi8vIH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UOiBJTUFHRSBCTEVORFNcbi8vIFNlZTogaHR0cDovL2NvZGVwZW4uaW8vR3VpbGgvcGVuL0xFUVdldj9lZGl0b3JzPTExMFxuLy8gU2VlOiBodHRwczovL3NhcmFzb3VlaWRhbi5jb20vZGVtb3MvY3NzLWJsZW5kZXIvXG4vLyBTZWU6IGh0dHA6Ly91bmEuaW0vQ1NTZ3JhbS9cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuJGRhcmtCbGVuZENvbG9yOiByZ2JhKCBwYWxldHRlKHRleHQpLCAwLjggKTtcbiRsaWdodEJsZW5kQ29sb3I6IHJnYmEoIHBhbGV0dGUodGV4dCksIDAuNCApO1xuXG5AbWl4aW4gaW1hZ2VCbGVuZChcbiAgICAkYmxlbmQ6IG11bHRpcGx5LFxuICAgICRjb2xvcjogJGRhcmtCbGVuZENvbG9yXG4pIHtcbiAgICBiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6ICRibGVuZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XG59XG5cbi5jLWltYWdlQmxlbmQgeyBAaW5jbHVkZSBpbWFnZUJsZW5kKCk7IH1cbi5jLWltYWdlQmxlbmQtLWp1c3QgeyBAaW5jbHVkZSBpbWFnZUJsZW5kKCRjb2xvcjogJGxpZ2h0QmxlbmRDb2xvcik7IH1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ09NUE9ORU5UOiBDT1ZFUiBJTUFHRVxuLy8gQFVSTDogaHR0cDovL25pY29sYXNnYWxsYWdoZXIuY29tL2ZsZXhpYmxlLWNzcy1jb3Zlci1pbWFnZXMvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIDEuIFRvIGVuYWJsZSB1c2Ugdy8gJy5GbGV4RW1iZWQnXG5AbWl4aW4gY292ZXJJbWFnZSgkZGFya0luc2lkZTogZmFsc2UpIHtcblx0QGluY2x1ZGUgYmFzZVRyYW5zaXRpb247XG5cdGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDEwMCU7IC8vIDEuXG5cdC8vIG1heC1oZWlnaHQ6IHJlbSg2MDApO1xuXHRtYXJnaW46IDAgYXV0bztcblx0Ly8gcG9zaXRpb246IHJlbGF0aXZlO1xuXHR3aWR0aDogMTAwJTtcblxuXHRAaWYgJGRhcmtJbnNpZGUge1xuXHRcdCY6YmVmb3JlIHtcblx0XHRcdEBpbmNsdWRlIG8tcG9zRnVsbFNjcmVlbihhYnNvbHV0ZSk7XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMSApIDAlLCByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4yICkgMTAwJSk7XG5cdFx0XHRiYWNrZ3JvdW5kLWJsZW5kLW1vZGU6IG11bHRpcGx5O1xuXHRcdFx0Y29udGVudDogXCIgXCI7XG5cdFx0XHRvcGFjaXR5OiAxO1xuXHRcdFx0Ly8gei1pbmRleDogLTE7XG5cdFx0fVxuXG5cdH0gQGVsc2Uge1xuXHRcdGNvbnRlbnQ6IG5vbmU7XG5cdH1cblxuXHQvLyBpbiBjYXNlIHRoZSAuby1jb3ZlckltYWdlIGlzIGl0c2VsZiBhIGxpbmtcblx0JiN7YX0ge1xuXHRcdC8vIEBpbmNsdWRlIHUtbGluayhub25lKTtcblx0fVxuXG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblxuXHR9XG59XG5cbi5vLWNvdmVySW1hZ2Uge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKCk7XG59XG5cbi5vLWNvdmVySW1hZ2UtLWRhcmsge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKHRydWUpO1xufVxuXG4uby1jb3ZlckltYWdlLS1ibGVuZHMge1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcblx0ICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogMDtcblx0fVxufVxuXG4uby1jb250YWluSW1hZ2Uge1xuXHRAaW5jbHVkZSBjb3ZlckltYWdlKCk7XG5cdGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbn1cbiIsIlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIE9CSkVDVDogT0JKRUNULUZJVCBJTUFHRVxuLy8gQFVSTDogaHR0cDovL2NvZGVwZW4uaW8vcm9iaW5yZW5kbGUvcGVuL0J5d05WWD9lZGl0b3JzPTAxMDBcbi8vIFJlcXMgSUUvRWRnZSBmYWxsYmFja+KAplxuLy8gQFVSTDogaHR0cHM6Ly9tZWRpdW0uY29tL0Bwcmltb3pjaWdsZXIvbmVhdC10cmljay1mb3ItY3NzLW9iamVjdC1maXQtZmFsbGJhY2stb24tZWRnZS1hbmQtb3RoZXItYnJvd3NlcnMtYWZiYzUzYmJiMmMzIy5iczgwOWpyOGdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEFQSVxuLy8ub2JqZWN0LWZpdF9maWxsIHsgb2JqZWN0LWZpdDogZmlsbCB9XG4vLy5vYmplY3QtZml0X2NvbnRhaW4geyBvYmplY3QtZml0OiBjb250YWluIH1cbi8vLm9iamVjdC1maXRfY292ZXIgeyBvYmplY3QtZml0OiBjb3ZlciB9XG4vLy5vYmplY3QtZml0X25vbmUgeyBvYmplY3QtZml0OiBub25lIH1cbi8vLm9iamVjdC1maXRfc2NhbGUtZG93biB7IG9iamVjdC1maXQ6IHNjYWxlLWRvd24gfVxuXG5AbWl4aW4gT2JqZWN0Rml0KCkge1xuXHQvL0BpbmNsdWRlIGJhc2VUcmFuc2l0aW9uO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLy8gRm9yIHVzZSB3aXRoIEZsZXhFbWJlZFxuLkZsZXhFbWJlZC1maXRJbWFnZSB7IEBpbmNsdWRlIE9iamVjdEZpdCgpOyB9XG5cbi8vIFRvIGRhcmtlbiBsaWtlICdDb3ZlckltYWdlLS1kYXJrJ1xuLkZsZXhFbWJlZC1jb250ZW50LS1kYXJrIHtcbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjkgKSAwJSwgcmdiYSggcGFsZXR0ZShicmFuZCksIDAgKSAxMDAlKTtcbiAgICAgICAgYmFja2dyb3VuZC1ibGVuZC1tb2RlOiBtdWx0aXBseTtcbiAgICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAvLyB6LWluZGV4OiAtMTtcbiAgICB9XG59XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgVEVYVCBUWVBPR1JBUEhZXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIENvbW1vbiB0aGVtZeKAplxuXG4vLyBBIG5vdGUgb24gbWl4aW4gcGFyYW1ldGVycy5cbi8vIFJlcXVpcmVkIHBhcmFtZXRlcnMgbXVzdCBwcmVjZWQgb3B0aW9uYWwgcGFyYW1ldGVycy5cbi8vIFRvIHVzZSBwYXJhbWV0ZXIgNCwgeW91IG11c3QgaGF2ZSBhIHZhbHVlIGZvciBlYWNoXG4vLyBwcmVjZWRpbmcgcmVxdWlyZWQgcGFyYW1ldGVyLiBPciBsaXN0IHRoZSBwYXJhbWV0ZXJcbi8vIHZhbHVlIGFmdGVyIGl0J3Mga2V5IG5hbWUgKGxpa2UgYmVsb3cpLlxuLy8gQG1peGluIHRleHRTbSgpIHtcbi8vIFx0QGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuLy8gXHRcdFRleHQtLXNtLFxuLy8gXHRcdCRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDFlbVxuLy8gXHQpO1xuLy8gfVxuXG5AbWl4aW4gdGV4dFRlbXBsYXRlKFxuXHQkbWl4aW5TaXplOiB0ZXh0LFxuXHQkbWl4aW5Db2xvcjogcGFsZXR0ZSh0ZXh0KSxcblx0JG1peGluRm9udDogJGZvbnQtdGV4dC1yZWd1bGFyLFxuXHQkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLFxuXHQkbWl4aW5MaW5lSGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodC11bml0XG4pIHtcblxuXHQvLyBzdGFuZGFyZHNcblx0Y29sb3I6ICRtaXhpbkNvbG9yO1xuXHRmb250LWZhbWlseTogJG1peGluRm9udDtcblx0bGV0dGVyLXNwYWNpbmc6ICRtaXhpbkxldHRlclNwYWNpbmc7XG5cdGxpbmUtaGVpZ2h0OiAkbWl4aW5MaW5lSGVpZ2h0O1xuXG5cdC8vIHNpemVzXG5cdGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgeHMpO1xuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgc20pOyB9XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCByZyk7IH1cblxuXHQvLyB2ZXJ5IHNwZWNpZmljIGNoaWxkcmVuXG5cdD4gbGksXG5cdD4gbGkgYSxcblx0PiBhIHtcblx0XHRjb2xvcjogY3VycmVudENvbG9yO1xuXHRcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRcdGZvbnQtc2l6ZTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdH1cbn1cblxuXG4vLyBUZXh0IGNvbXBvbmVudHMgYnkgc2l6ZeKAplxuXG5AbWl4aW4gdGV4dFhzKCkge1xuICAgIEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcbiAgICAkbWl4aW5TaXplOiB0ZXh0LS14cyxcbiAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjAyNWVtXG4gICAgKTtcbn1cblxuQG1peGluIHRleHRTbSgpIHtcbiAgICBAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgJG1peGluU2l6ZTogdGV4dC0tc20sXG4gICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMjVlbVxuICAgICk7XG59XG5cbkBtaXhpbiB0ZXh0UmcoKSB7XG5cdEBpbmNsdWRlIHRleHRUZW1wbGF0ZShcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMTI1ZW1cbiAgICApO1xufVxuXG5AbWl4aW4gdGV4dExnKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG5cdFx0JG1peGluU2l6ZTogdGV4dC0tbGcsXG4gICAgXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LW1lZGl1bSxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wMTI1ZW0sXG4gICAgXHQkbWl4aW5MaW5lSGVpZ2h0OiAxLjM1XG5cdCk7XG59XG5cbi8vIE1ldGEgdGV4dHPigKZcblxuQG1peGluIHRleHRNZXRhKCkge1xuXHRAaW5jbHVkZSB0ZXh0VGVtcGxhdGUoXG4gICAgXHQkbWl4aW5TaXplOiB0ZXh0LS1tZXRhLFxuICAgIFx0JG1peGluRm9udDogJGZvbnQtdGV4dC1tZWRpdW0sXG4gICAgICAgICRtaXhpbkxldHRlclNwYWNpbmc6IDAuMDc1ZW1cbiAgICApO1xuICAgIG1hcmdpbi1ib3R0b206ICRwYXJhZ3JhcGhTcGFjZSAqIDAuNTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICAgIH1cbn1cblxuQG1peGluIHRleHRNZXRhSGVhZGxpbmUoKSB7XG4gICAgQGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuICAgICAgICAkbWl4aW5Db2xvcjogcGFsZXR0ZSh0ZXh0KSxcbiAgICAgICAgJG1peGluU2l6ZTogdGV4dC0teHMsXG4gICAgXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LWJsYWNrLFxuICAgICAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjA3NWVtLFxuICAgICAgICAkbWl4aW5MaW5lSGVpZ2h0OiAxLjk2XG4gICAgKTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1O1xuICAgIH1cbn1cblxuQG1peGluIHRleHRBc2lkZSB7XG4gICAgQGluY2x1ZGUgdGV4dFRlbXBsYXRlKFxuICAgIFx0JG1peGluU2l6ZTogdGV4dC0tc20sXG4gICAgXHQkbWl4aW5Gb250OiAkZm9udC10ZXh0LW1lZGl1bSxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4wNzVlbVxuICAgICk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuICAgICAgICBsaW5lLWhlaWdodDogMS4yNTtcbiAgICB9XG59XG5cblxuXG5cbi8vIENvbXBvbmVudDogVGV4dFxuLy8gSW5pdGlhdGUgbWl4aW5zIGluIGNsYXNzZXMuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy10ZXh0LS14cyAgICAgICB7IEBpbmNsdWRlIHRleHRYcygpOyB9XG4uYy10ZXh0LS1zbSAgICAgICB7IEBpbmNsdWRlIHRleHRTbSgpOyB9XG4uYy10ZXh0ICAgICAgICAgICB7IEBpbmNsdWRlIHRleHRSZygpOyB9XG4uYy10ZXh0LS1tZWRpdW0gICB7IEBpbmNsdWRlIHRleHRSZygpOyBjb2xvcjogcGFsZXR0ZShtZWRpdW0pOyB9XG4uYy10ZXh0LS1pbnRybyAgICB7IEBpbmNsdWRlIHRleHRSZygpOyBjb2xvcjogcGFsZXR0ZShtZWRpdW0pOyBtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjUpOyB9XG4vLy5jLXRleHQtLWxnICAgICAgIHsgQGluY2x1ZGUgdGV4dExnKCk7IG1hcmdpbi1ib3R0b206IDA7ID4gc3Ryb25nIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtZXh0cmFib2xkOyB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDsgfSB9XG4uYy10ZXh0LS1hc2lkZSB7IEBpbmNsdWRlIHRleHRBc2lkZSgpOyB9XG5cblxuXG5cbi5jLXRleHQtLW1ldGEge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0Y29sb3I6IHBhbGV0dGUobWVkaXVtKSAhaW1wb3J0YW50O1xuXHQvLyB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cblx0PiBhIHtcblx0XHRib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG5cblx0XHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcblx0XHRcdGJvcmRlci1jb2xvcjogcGFsZXR0ZShtZWRpdW0pICFpbXBvcnRhbnQ7XG5cdFx0fVxuXHR9XG5cblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuXHRcdG1hcmdpbjogYXV0bztcblx0XHQvLyB3aWR0aDogNzAlO1xuXHR9XG59XG5cblxuXG4vLyBDb21wb25lbnQ6IFRleHQgYmxvY2tzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy10ZXh0LWJsb2NrIHsgPiAqIHsgQGluY2x1ZGUgdGV4dFJnKCk7IH0gfVxuXG4uYy10ZXh0LWJsb2NrLS1mb290ZXIge1xuXHRAaW5jbHVkZSBsaXN0Q2xlYW4oKTtcblx0bWFyZ2luOiAwO1xuXG5cdCY6OmJlZm9yZSB7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSggcGFsZXR0ZShiYWNrZ3JvdW5kKSwgMC4yKTtcblx0XHRjb250ZW50OiBcIiBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRoZWlnaHQ6IDFweDtcblx0XHRtYXJnaW46IHNwYWNlKDEpIDAgc3BhY2UoMS4xNSk7XG5cdFx0d2lkdGg6IDIuNSU7XG5cdH1cblxuXHQ+ICoge1xuXHRcdEBpbmNsdWRlIHRleHRSZygpO1xuXHRcdG1hcmdpbi1ib3R0b206IDA7XG5cdH1cbn1cblxuXG5cblxuLy8gQ29tcG9uZW50OiBsaXN0XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL2xpc3QgY2VsbCBvZiBmaXhlZCB3aWR0aCwgbGlrZSBhIHRhYmJlZCBpbmZvIGVsZW1lbnRcbi5jLWxpc3QtLWl0ZW1UYWcge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHR3aWR0aDogc3BhY2UoMC43NSk7XG59XG5cbi5jLWxpc3QtLW1ldGEge1xuXHRAaW5jbHVkZSB0ZXh0U20oKTtcblx0QGluY2x1ZGUgbGlzdENsZWFuKCk7XG5cdGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG5cdG1hcmdpbi1ib3R0b206IHNwYWNlKDEuMjUpO1xufVxuXG4uYy1saXN0LS1tZXRhLXRpdGxlIHtcblx0Y29sb3I6IHBhbGV0dGUodGV4dCkgIWltcG9ydGFudDtcblx0bWFyZ2luOiBzcGFjZSgxLjI1KSAwIHNwYWNlKDAuNjI1KSAhaW1wb3J0YW50O1xuXG5cdCY6Zmlyc3QtY2hpbGQge1xuXHRcdG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcblx0fVxufVxuXG5cblxuLy8gVXRpbGl0eTogd2VpZ2h0cyAmIGl0YWxpY3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi51LXRleHRXdEx0ICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWxpZ2h0ICFpbXBvcnRhbnQ7IH1cbi51LXRleHRXdFJnICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXIgIWltcG9ydGFudDsgfVxuLnUtdGV4dFd0TWQgICAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbWVkaXVtICFpbXBvcnRhbnQ7IH1cbi8vLnUtdGV4dFd0U2VtaSAgICAgIHsgZm9udC1mYW1pbHk6ICRmb250LXRleHQtc2VtaWJvbGQgIWltcG9ydGFudDsgfVxuXG4vLy51LXRleHRFbVJnICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LXJlZ3VsYXItaSAhaW1wb3J0YW50OyB9XG4vLy51LXRleHRFbU1kICAgICAgICB7IGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LW1lZGl1bS1pICFpbXBvcnRhbnQ7IH1cblxuXG5cbi8vIFV0aWxpdHk6IEhUTUwgZWxlbWVudHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG4vLyBibG9ja3F1b3RlLCBmaWd1cmVcbi8vIGxpXG51bCwgb2wsIGRsLFxucCwgYWRkcmVzcyxcbnRhYmxlLCB0aW1lLFxuZmllbGRzZXQsIGZpZ2NhcHRpb24sXG5wcmUsIGEge1xuXHRAaW5jbHVkZSB0ZXh0UmcoKTtcbn1cblxuZW0sXG4udS10ZXh0RW0ge1xuXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcblx0Ly9mb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkLWk7XG59XG5cbmIsXG5zdHJvbmcsXG4udS10ZXh0Qm9sZCB7XG5cdEBpbmNsdWRlIHR5cGVSZXNldCgpO1xuICAgIEBpbmNsdWRlIHRleHRNZXRhKCk7XG5cdC8vZm9udC1mYW1pbHk6ICRmb250LXRleHQtYm9sZDtcbn1cblxuYmxvY2txdW90ZSxcbi5CbG9ja3F1b3RlIHtcblx0Ly8gaXMgdGhpcyByZXEnZD9cblx0Ly8gQGluY2x1ZGUgdHlwZVJlc2V0KCk7XG5cdGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvb2s7XG5cdGZvbnQtc2l6ZTogZm9udHNpemUodGV4dCwgeHMpO1xuXHRtYXJnaW4tYm90dG9tOiBzcGFjZSgwLjc1KTtcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG5cdFx0Zm9udC1zaXplOiBmb250c2l6ZSh0ZXh0LCBzbSk7XG5cdFx0bWFyZ2luLWJvdHRvbTogc3BhY2UoMSk7XG5cdH1cbn1cblxuLy8gLkxlZGUge1xuLy8gXHRAaW5jbHVkZSB0ZXh0UmcoKTtcbi8vIFx0Y29sb3I6IGNvbG9yKHRleHQsIGJyYW5kKSAhaW1wb3J0YW50O1xuLy8gXHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyO1xuLy8gXHRmb250LXNpemU6IGZvbnRzaXplKGhlYWRsaW5lLCB4cyk7XG4vLyBcdGxpbmUtaGVpZ2h0OiAxLjQ1O1xuLy8gXHQvLyBtYXJnaW4tYm90dG9tOiBzcGFjZSgxKTtcbi8vXG4vLyBcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbi8vIFx0XHRmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuLy8gXHRcdGZvbnQtc2l6ZTogZm9udHNpemUoaGVhZGxpbmUsIGJhc2UpO1xuLy8gXHRcdGxpbmUtaGVpZ2h0OiAkYmFzZS1saW5lLWhlaWdodC11bml0O1xuLy8gXHR9XG4vLyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vICAgSEVBRExJTkUgVFlQT0dSQVBIWVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBDb21tb24gdGhlbWXigKZcblxuQG1peGluIGhlYWRsaW5lVGVtcGxhdGUoXG5cdCRtaXhpblNpemU6IGhlYWRsaW5lLFxuXHQkbWl4aW5Db2xvcjogcGFsZXR0ZSh0ZXh0KSxcblx0JG1peGluRm9udDogJGZvbnQtdGV4dC1tZWRpdW0sXG5cdCRtaXhpbkxldHRlclNwYWNpbmc6IDAsXG5cdCRtaXhpbkxpbmVIZWlnaHQ6IDEuMjUsXG5cdCRtaXhpbk1hcmdpbkJvdHRvbTogMFxuKSB7XG5cblx0Ly8gc3RhbmRhcmRzXG5cdGNvbG9yOiAkbWl4aW5Db2xvcjtcblx0Zm9udC1mYW1pbHk6ICRtaXhpbkZvbnQ7XG5cdGxldHRlci1zcGFjaW5nOiAkbWl4aW5MZXR0ZXJTcGFjaW5nO1xuXHRsaW5lLWhlaWdodDogJG1peGluTGluZUhlaWdodDtcblx0Ly9tYXJnaW4tbGVmdDogYXV0bztcblx0Ly9tYXJnaW4tcmlnaHQ6IGF1dG87XG5cdG1hcmdpbi1ib3R0b206ICRtaXhpbk1hcmdpbkJvdHRvbTtcblx0dGV4dC1hbGlnbjogbGVmdDtcblxuXHQvLyBzaXplc1xuXHRmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHhzKTtcblx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmb250LXNpemU6IGZvbnRzaXplKCRtaXhpblNpemUsIHNtKTsgfVxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJG1peGluU2l6ZSwgbGcpOyB9XG5cblx0Ly8gY2hpbGRyZW5cblx0PiBsaSxcblx0PiBsaSBhLFxuXHQ+IGEge1xuXHRcdGJvcmRlci1ib3R0b206IDA7XG5cdFx0Y29sb3I6IGN1cnJlbnRDb2xvcjtcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRmb250LXNpemU6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAwO1xuXHR9XG59XG5cblxuLy8gQ29tcG9uZW50IGJ5IHNpemXigKZcblxuQG1peGluIGRpc3BsYXkoKSB7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogLTAuMDA1ZW0sXG4gICAgICAgICRtaXhpbkxpbmVIZWlnaHQ6IDEuMSxcbiAgICAgICAgJG1peGluU2l6ZTogZGlzcGxheVxuICAgICk7XG59XG5cbkBtaXhpbiBoZWFkbGluZSgpIHtcblx0QGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcblx0XHQkbWl4aW5TaXplOiBoZWFkbGluZSxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4yNWVtXG5cdCk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuQG1peGluIGhlYWRsaW5lTWQoKSB7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmVUZW1wbGF0ZShcbiAgICBcdCRtaXhpbkZvbnQ6ICRmb250LXRleHQtcmVndWxhcixcbiAgICAgICAgJG1peGluU2l6ZTogaGVhZGxpbmUtLXhzLFxuICAgICAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjI1ZW1cbiAgICApO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbkBtaXhpbiBoZWFkbGluZVNtKCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgICAgICRtaXhpblNpemU6IGhlYWRsaW5lLS1zbSxcbiAgICAgICAgJG1peGluTGV0dGVyU3BhY2luZzogMC4xMjVlbSxcbiAgICBcdCRtaXhpbkxpbmVIZWlnaHQ6IDEuNVxuICAgICk7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbWVkaXVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG59XG5cbkBtaXhpbiBoZWFkbGluZVhzKCkge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lVGVtcGxhdGUoXG4gICAgICAgICRtaXhpblNpemU6IHRleHQtLXNtLFxuICAgICAgICAkbWl4aW5MZXR0ZXJTcGFjaW5nOiAwLjFlbVxuICAgICk7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtbWVkaXVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbn1cblxuXG5cblxuLy8gQ29tcG9uZW50OiBoZWFkbGluZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtZGlzcGxheSAgICAgICAgICB7IEBpbmNsdWRlIGRpc3BsYXkoKTsgfVxuLmMtaGVhZGxpbmUgICAgICAgICB7IEBpbmNsdWRlIGhlYWRsaW5lKCk7IH1cbi5jLWhlYWRsaW5lLS1tZCAgICAgeyBAaW5jbHVkZSBoZWFkbGluZU1kKCk7IH1cbi5jLWhlYWRsaW5lLS1zbSAgICAgeyBAaW5jbHVkZSBoZWFkbGluZVNtKCk7IH1cbi5jLWhlYWRsaW5lLS14cyAgICAgeyBAaW5jbHVkZSBoZWFkbGluZVhzKCk7IH1cblxuXG4uYy1oZWFkbGluZSBlbSB7XG5cdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cblxuXG5cblxuXG4vLyBDb21wb25lbnQ6IGhlYWRsaW5lIGJsb2Nrcy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIC5IZWFkbGluZS1ibG9jayB7ID4gKiB7IEBpbmNsdWRlIGhlYWRsaW5lKCk7IH0gfVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIFRZUEUgTUlYSU4gSEVMUEVSU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBUZXh0IHNpemVz4oCmXG4vLyBNYXAga2V5IG11c3QgZXF1YWwgY2xhc3MgbmFtZS5cbi8vIFRPRE8gMTYwNjMwOiBpZiBubyBvdGhlciBicmVha3BvaW50cywgbnVsbC5cblxuQG1peGluIHRleHRTaXplKFxuXHQkbWl4aW5TaXplOiBUZXh0XG4pIHtcblx0Zm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCB4cyk7XG5cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBmb250c2l6ZSgkbWl4aW5TaXplLCBzbSk7IH1cbn1cblxuXG4vLyBUZXh0IGJsb2NrIG1peGluc+KAplxuXG5AbWl4aW4gcmV2ZXJzZVRleHRCbG9jayB7XG5cdGgxLFxuXHRwLFxuXHR1bCB7XG5cdFx0Y29sb3I6IHBhbGV0dGUobGlnaHQpICFpbXBvcnRhbnQ7XG5cdH1cbn1cblxuLy8uYy10ZXh0LWJsb2NrLS1yZXZlcnNlIHsgQGluY2x1ZGUgcmV2ZXJzZVRleHRCbG9jaygpOyB9XG5cbkBtaXhpbiBjZW50ZXJUZXh0QmxvY2sge1xuXHRoMSxcblx0cCxcblx0dWwge1xuXHRcdHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xuXHR9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0tY2VudGVyIHsgQGluY2x1ZGUgY2VudGVyVGV4dEJsb2NrKCk7IH1cblxuQG1peGluIGhlYWRlclRleHRCbG9jayB7XG5cdGgxIHsgbWFyZ2luLWJvdHRvbTogc3BhY2UoMC4yKTsgfVxuXHRwICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDAuMzUpOyB9XG59XG5cbi8vLmMtdGV4dC1ibG9jay0taGVhZGVyIHsgQGluY2x1ZGUgaGVhZGVyVGV4dEJsb2NrKCk7IH1cblxuXG4vLyBCYXNlIHNwYWNlciBydWxlcz9cbi8vIHAgKyBoMiB7IG1hcmdpbi10b3A6ICRzcGFjZSAqIDEuNzU7IH1cblxuLnUtcFNwYWNlIHtcbiAgICAvL21hcmdpbi10b3A6XG59XG5cbi8vcCArIGNpdGUgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfVxuaDIgKyBoMyAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjIpOyB9XG5oMyArIHAgICB7IG1hcmdpbi10b3A6IHNwYWNlKDAuNCk7IH1cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBBdHRlbXB0cyBhdCBAZWFjaCBsb29wcyBvbiBzYXNzIG1hcHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIExvb3AgdGhydSBzaXplc+KAplxuXG4vLyBAZWFjaCAkYnJlYWtwb2ludCBpbiBtYXAta2V5cygkZ3JpZC1icmVha3BvaW50cykge1xuLy8gXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRicmVha3BvaW50KSB7XG4vLyBcdFx0LnUtI3skYnJlYWtwb2ludH0tdGV4dExlZnQgICAgICAgICAgICAgeyB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7IH1cbi8vIEBlYWNoICR0aGVtZSBpbiBtYXAta2V5cyggbWFwLWdldCgkY29uZmlnLCBcInRoZW1lc1wiKSApIHtcblxuLy8gdGhpcyBkaWRuJ3Qgd29ya1xuXG4vLyBAZWFjaCAkaW5jcmVtZW50IGluIG1hcC1rZXlzKCRmb250c2l6ZSkge1xuLy9cbi8vIFx0LiN7JGluY3JlbWVudH0ge1xuLy9cbi8vIFx0XHRAZWFjaCAkcmVzcG9uc2UgaW4gbWFwLXZhbHVlcyggbWFwLWdldCgkZm9udHNpemUsICRpbmNyZW1lbnQpICkge1xuLy9cbi8vIFx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJHJlc3BvbnNlKSB7IGZvbnQtc2l6ZTogZm9udHNpemUoJGluY3JlbWVudCwgJHJlc3BvbnNlKTsgfVxuLy8gXHRcdFx0Ly8gZm9udC1zaXplOiBmb250c2l6ZSgkaW5jcmVtZW50LCAkcmVzcG9uc2UpO1xuLy8gXHRcdFx0Ly8gQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkgeyBmb250LXNpemU6IGZvbnRzaXplKCRpbmNyZW1lbnQsIG1kKTsgfVxuLy9cbi8vIFx0XHR9XG4vLyBcdH1cbi8vXG4vLyB9XG5cblxuLy8gTG9vcCB0aHJ1IHNpemVz4oCmIEJ1dCBJIG5lZWQgbWl4aW5zIGZpcnN0LCBub3QgY2xhc3Nlc+KAplxuXG4vLyBAZWFjaCAkc2l6ZSBpbiBtYXAta2V5cygkZm9udHNpemUpIHtcbi8vXG4vLyBcdC4jeyRzaXplfSB7XG4vLyBcdFx0Zm9udC1zaXplOiBtYXAtZmV0Y2goJGZvbnRzaXplLCAkc2l6ZSwgeHMpO1xuLy8gXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZm9udC1zaXplOiBtYXAtZmV0Y2goJGZvbnRzaXplLCAkc2l6ZSwgc20pOyB9XG4vLyBcdH1cbi8vXG4vLyB9XG4iLCJcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFV0aWxpdHk6IFJlc3BvbnNpdmUgbGluZSBicmVha1xuLy8gaHR0cHM6Ly9jc3MtdHJpY2tzLmNvbS9pbmplY3RpbmctbGluZS1icmVhay9cbi8vIDEuIGVtdWxhdGVzIHRleHQtYWxpZ246IGNlbnRlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyB1cFxuXG5AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgc3Bhbi51LWxnLWxpbmVCcmVhayB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgICAgIG1hcmdpbjogYXV0bzsgLy8gMS5cbiAgICB9XG59XG5cbkBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAudS1zbS1saW5lQnJlYWsge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xuICAgICAgICAvL21hcmdpbjogYXV0bzsgLy8gMS5cbiAgICB9XG59XG5cbi8vIGRvd25cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKGxnKSB7XG4gICAgc3Bhbi51LWxnRG93bi1saW5lQnJlYWsge1xuICAgICAgICBkaXNwbGF5OiB0YWJsZSAhaW1wb3J0YW50O1xuICAgICAgICBtYXJnaW46IGF1dG87IC8vIDEuXG4gICAgfVxufVxuXG5AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICBzcGFuLnUtc21Eb3duLWxpbmVCcmVhayB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlICFpbXBvcnRhbnQ7XG4gICAgICAgIC8vbWFyZ2luOiBhdXRvOyAvLyAxLlxuICAgIH1cbn1cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgLnUtc21Eb3duLWhpZGUge1xuICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIExBWU9VVDogQk9EWVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG5odG1sIHtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHBhbGV0dGUobmV1dHJhbCk7XG59XG5cbi5jLWhlYWRlcixcbi5jLWNvbnRlbnQge1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbn1cblxuLmMtY29udGVudC0tcGFnZSxcbi5jLWNvbnRlbnQtLXBvc3Qge1xuICAgIHBhZGRpbmctYm90dG9tOiAkYmxvY2tTcGFjZSAqIDEuMjUgIWltcG9ydGFudDtcbiAgICAvL0BpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgcGFkZGluZy1ib3R0b206ICRibG9ja1NwYWNlICogMS4yNSAhaW1wb3J0YW50OyB9XG59XG5cblxuXG4uYy1saXN0UGFuZWwge1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbiAgICAvL3BhZGRpbmc6IDAgKCRibG9ja1NwYWNlICogMC43NSk7XG4gICAgLy9wYWRkaW5nOiAwIDJweDtcbn1cblxuLy8gbWFrZSBiYWNrZ3JvdW5kcyBibGFjayBkdXJpbmcgaW1hZ2UgbG9hZGluZ1xuLmMtY29udGVudCAuRmxleEVtYmVkLFxuLmMtcG9zdENlbGwgLkZsZXhFbWJlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBIRUFERVIgTEFZT1VUXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi8vIHVzZSBwYWRkaW5nIHNvIHdlIGNhbiBnbyBleGFjdGx5ICdiYWNrIHRvIHRvcCdcbi5jLWhlYWRlciB7XG4gICAgcGFkZGluZzogKCRibG9ja1NwYWNlICogMC43NSkgMDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICAvL3BhZGRpbmc6ICgkYmxvY2tTcGFjZSAqIDAuNzUpIDA7XG4gICAgfVxufVxuXG4uYy1oZWFkZXItYnJhbmQge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjc1O1xuICAgICAgICAvL21hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC43NTtcbiAgICB9XG59XG5cbi5jLWhlYWRlci1sb2dvID4gaW1nIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIHdpZHRoOiAxNTBweDtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgd2lkdGg6IDIyNXB4OyB9XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkgeyB3aWR0aDogMjYwcHg7IH1cbn1cblxuLy8gdGhlIGFkZHJlc3Mvb3BlbiB0ZXh0IGluIHRoZSBoZWFkZXJcbi5jLWhlYWRlci1pbmZvQWxpZ24ge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBwYWxldHRlKGJyYW5kKTtcbiAgICAvL3BhZGRpbmctYm90dG9tOiAkYmxvY2tTcGFjZSAqIDAuMjtcbiAgICBwYWRkaW5nLWJvdHRvbTogN3B4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDdweCk7XG59XG5cbi5jLWhlYWRlci1pbmZvIHtcbiAgICBAaW5jbHVkZSB0ZXh0QXNpZGUoKTtcbiAgICBjb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgLy9mb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIC8vZm9udC1mYW1pbHk6ICRmb250LXNlcmlmO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPTVBPTkVOVDogQkxPRyBQT1NUU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyBQb3N0IGdyaWQgdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoICdvLWdyaWQnXG4vLyAxLiBEbyB0aGlzIHdoZW4gKiBoYXMgYm9yZGVycywgd2hpY2ggYXJlbid0IGluY2x1ZGVkIGluIHRoZSBib3gtbW9kZWwuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLy5vLWdyaWQge1xuLy8gICAgZGlzcGxheTogZmxleDtcbi8vICAgIGZsZXgtd3JhcDogd3JhcDtcbi8vfVxuLy8uby1ncmlkID4gKiB7XG4vLyAgICBmbGV4OiAxIDAgNWVtO1xuLy99XG5cbi5jLXBvc3RHcmlkID4gKiB7XG4gICAgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMik7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyAzKTsgfVxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgZmxleC1iYXNpczogY2FsYygxMDAlIC8gNSk7IH1cblxuICAgIC8vIEluZGV4IGdyaWRzXG4gICAgLy8gQXBwbHkgdGhlc2UgY2xhc3NlcyB0byB0aGUgYm9keSB0byBtYW5hZ2UgdGhlIGdyaWQgbnVtYmVycy5cbiAgICAvL0BpbmNsdWRlIHdoZW4taW5zaWRlKFwiLmMtcG9zdEdyaWQtLTNcIikgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZsZXgtYmFzaXM6IGNhbGMoMTAwJSAvIDMpOyB9IH1cbiAgICBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi50aHJlZVwiKSB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZmxleC1iYXNpczogY2FsYygxMDAlIC8gMyk7IH0gfVxuICAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKFwiLmZvdXJcIikgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZsZXgtYmFzaXM6IGNhbGMoMTAwJSAvIDQpOyB9IH1cbiAgICBcbiAgICAvLyBQb3N0LWluZm8gZ3JpZFxuICAgIEBpbmNsdWRlIHdoZW4taW5zaWRlKFwiLmMtcG9zdC1pbmZvXCIpIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyA0KTtcbiAgICAgICAgLy8gQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBmbGV4LWJhc2lzOiBjYWxjKDEwMCUgLyAzKTsgfVxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGZsZXgtYmFzaXM6IGNhbGMoMTAwJSAvIDcpOyB9XG4gICAgfVxuXG4gICAgLy8gUG9zdC1pbmZvIGdyaWRcbiAgICBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi5jLXBvc3QtbmV4dFwiKSB7XG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgZmxleC1iYXNpczogY2FsYygxMDAlIC8gNSk7IH1cbiAgICB9XG59XG5cbi8vIDFweCBib3JkZXIgZm9yIGVhY2ggY2VsbFxuLy8uYy1wb3N0R3JpZCAuYy1wb3N0Q2VsbDpub3QoOmZpcnN0LWNoaWxkKSxcbi8vLmMtcG9zdEdyaWQtLWluUG9zdCAuYy1wb3N0Q2VsbDpub3QoOmZpcnN0LWNoaWxkKSB7XG4vLyAgICAuRmxleEVtYmVkIHtcbi8vICAgICAgICBtYXJnaW4tbGVmdDogMXB4O1xuLy8gICAgfVxuLy99XG5cbi8vIENlbGwgaGVpZ2h0XG4uYy1wb3N0R3JpZCAuRmxleEVtYmVkLXJhdGlvIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzV2aDtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IHBhZGRpbmctYm90dG9tOiAyNXZoOyB9XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChtZCkgeyBwYWRkaW5nLWJvdHRvbTogNTB2aDsgfVxuXG4gICAgQGluY2x1ZGUgd2hlbi1pbnNpZGUoXCIuYy1wb3N0LW5leHRcIikge1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjB2aDtcbiAgICAgICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IHBhZGRpbmctYm90dG9tOiAyNXZoOyB9XG4gICAgfVxufVxuXG5cblxuXG5cblxuXG5cblxuLy8gUG9zdCBjZWxsIChpbiBwb3N0IGdyaWQpXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5hLmMtcG9zdENlbGwge1xuICAgIEBpbmNsdWRlIGNvbXBsZXhMaW5rKCk7XG4gICAgYm9yZGVyOiAwO1xuICAgIC8vbWFyZ2luOiAxcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgLy8gYWRkIHRoZSBib3JkZXIgaGVyZSB0byBzaW1wbGlmeSB0aGUgZmxleC1iYXNpcyBjYWxjdWxhdGlvbnNcbiAgICAuRmxleEVtYmVkIHtcbiAgICAgICAgbWFyZ2luOiAxcHggMC41cHggMDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBvbi1ldmVudCgpIHtcbiAgICAgICAgLmMtcG9zdENlbGwtaW1hZ2Uge1xuICAgICAgICAgICAgQGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRsaWdodEJsZW5kQ29sb3I7XG4gICAgICAgICAgICBmaWx0ZXI6IGdyYXlzY2FsZSgwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jLXBvc3RDZWxsLXN1YmhlYWRsaW5lIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGJhc2VUcmFuc2l0aW9uKCk7XG4gICAgICAgICAgICBjb2xvcjogcGFsZXR0ZSh3aGl0ZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jLXBvc3RDZWxsLWltYWdlIHtcbiAgICBAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuICAgIEBpbmNsdWRlIGltYWdlQmxlbmQoKTtcbiAgICBAaW5jbHVkZSBjb3ZlckltYWdlKCk7XG4gICAgZmlsdGVyOiBncmF5c2NhbGUoMTAwJSk7XG59XG5cbi5jLXBvc3RDZWxsLWhlYWRsaW5lLFxuLmMtcG9zdENlbGwtc3ViaGVhZGxpbmUge1xuICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgIGNvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICBwYWRkaW5nOiAwIDE1JTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogc3BhY2UoMC4yNSk7XG4gICAgfVxufVxuXG4uYy1wb3N0Q2VsbC1oZWFkbGluZSB7XG4gICAgY29sb3I6IHBhbGV0dGUod2hpdGUpO1xufVxuXG4uYy1wb3N0Q2VsbC1zdWJoZWFkbGluZSB7XG4gICAgQGluY2x1ZGUgYmFzZVRyYW5zaXRpb24oKTtcbiAgICBjb2xvcjogcGFsZXR0ZShtdXRlZCk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcbn1cblxuXG5cblxuXG5cblxuXG5cblxuLy8gUG9zdCBoZXJvXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uRmxleEVtYmVkLXJhdGlvLS1oZXJvIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogOTAlO1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgcGFkZGluZy1ib3R0b206IDUwJTsgfVxuXG4gICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7IHBhZGRpbmctYm90dG9tOiA1MHZoOyB9XG4gICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IHBhZGRpbmctYm90dG9tOiA1MCU7IHBhZGRpbmctYm90dG9tOiA4MnZoOyB9XG5cbiAgICAvL0BpbmNsdWRlIHdoZW4taW5zaWRlKFwiLmMtY29udGVudC0tcGFnZVwiKSB7XG4gICAgLy8gICAgLy9wYWRkaW5nLWJvdHRvbTogNDUlO1xuICAgIC8vICAgIC8vQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBwYWRkaW5nLWJvdHRvbTogMjguMTI1JTsgcGFkZGluZy1ib3R0b206IDI1dmg7IH1cbiAgICAvLyAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IHBhZGRpbmctYm90dG9tOiAyNSU7IHBhZGRpbmctYm90dG9tOiA0MXZoOyB9XG4gICAgLy99XG59XG5cbi5GbGV4RW1iZWQtcmF0aW8tLWhlcm9IYWxmIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogOTAlO1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgcGFkZGluZy1ib3R0b206IDI1JTsgfVxufVxuXG4uRmxleEVtYmVkLXJhdGlvLS1oZXJvVmlkZW8ge1xuICAgIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gICAgLy8gQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBwYWRkaW5nLWJvdHRvbTogNTYuMjUlOyB9XG59XG5cbi5jLXBvc3QtaGdyb3VwIHtcbiAgICBtYXJnaW46ICgkYmxvY2tTcGFjZSAqIDAuNzUpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBtYXgtd2lkdGg6IDgwdnc7IG1hcmdpbjogMCBhdXRvOyB9XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkgeyBtYXgtd2lkdGg6IDYwdnc7IH1cbn1cblxuLmMtcG9zdC1oZWFkbGluZSB7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmUoKTtcbiAgICBsZXR0ZXItc3BhY2luZzogMC40NWVtO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEuNSVcbiAgICB9XG59XG5cbi5jLXBvc3Qtc3ViaGVhZGxpbmUge1xuICAgIC8vQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgQGluY2x1ZGUgaGVhZGxpbmVTbSgpO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4gICAgbWFyZ2luLXRvcDogc3BhY2UoMC41KTtcblxuICAgIHAge1xuICAgICAgICBAaW5jbHVkZSB0ZXh0TWV0YSgpO1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShtZWRpdW0pO1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbn1cblxuLmMtcG9zdC1oZWFkbGluZSxcbi5jLXBvc3Qtc3ViaGVhZGxpbmUge1xuICAgIGNvbG9yOiBwYWxldHRlKHdoaXRlKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi8vIFBvc3QgaW5mbyAod3JhcHBpbmcgcG9zdC1tZXRhIGluZm8gYmxvY2tzKVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtcG9zdC1pbmZvIHtcbiAgICAvL21hcmdpbi10b3A6ICgkYmxvY2tTcGFjZSAqIDEuMjUpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZy1mb3ItY29udGFpbmVyLWxnKSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyAvLyByZW1vdmUgZnJvbSB0aGUgZmxvd1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuLy8gUG9zdCBhcnRpY2xlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy1wb3N0LWFydGljbGUge1xuICAgIC8vbWFyZ2luLXRvcDogKCRibG9ja1NwYWNlICogMSk7XG4gICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IG1hcmdpbi10b3A6ICgkYmxvY2tTcGFjZSAqIDEuMjUpOyB9XG4gICAgQGluY2x1ZGUgYmxvY2tTcGFjZU1hcmdpblRvcCgpO1xufVxuXG4vLyBtYXJrZG93biBzY29wZVxuLnMtcG9zdCB7XG4gICAgcCxcbiAgICB1bCxcbiAgICBhIHtcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXNlcmlmO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgICAgLy9saW5lLWhlaWdodDogMS42O1xuICAgIH1cblxuICAgIHA6Zmlyc3QtY2hpbGQge1xuICAgICAgICAvL0BpbmNsdWRlIHRleHRMZygpO1xuICAgICAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC1zZXJpZjtcblxuICAgICAgICAvL0BpbmNsdWRlIGhlYWRsaW5lU20oKTtcbiAgICAgICAgLy9mb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgICAgICAvL21hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC43NSAqIDAuNTtcblxuXG4gICAgICAgIC8vZm9udC1zaXplOiAyN3B4O1xuICAgICAgICAvL2xldHRlci1zcGFjaW5nOiAwLjAxMjVlbTtcbiAgICAgICAgLy9saW5lLWhlaWdodDogMS4zNTtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuICAgIH1cblxuICAgIC8vIGNhcGl0YWxpc2VkIGJvbGQgc2Fuc1xuICAgIHN0cm9uZyB7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxuXG4gICAgZW0ge1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2VyaWYtaTtcbiAgICAgICAgLy9mb250LXN0eWxlOiBpdGFsaWM7XG4gICAgfVxuXG4gICAgaDIsXG4gICAgaDMge1xuICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC43NTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAkcGFyYWdyYXBoU3BhY2U7XG4gICAgICAgICAgICAvL21hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC43NSAqIDAuNTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGgyIHtcbiAgICAgICAgLy9AaW5jbHVkZSB0ZXh0UmcoKTtcbiAgICAgICAgQGluY2x1ZGUgaGVhZGxpbmVTbSgpO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgICAgIHdpZHRoOiA4NSU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIH1cblxuICAgIGhyIHtcbiAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcGFsZXR0ZShsaWdodCk7XG4gICAgICAgIG1hcmdpbjogJHBhcmFncmFwaFNwYWNlICogMiAwO1xuICAgIH1cblxuICAgIGJsb2NrcXVvdGUgcCB7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcGFsZXR0ZShtdXRlZCk7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG4gICAgICAgIHBhZGRpbmctbGVmdDogc3BhY2UoMSk7XG4gICAgfVxuXG4gICAgZmlndXJlIHtcbiAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuNzU7XG4gICAgICAgIH1cblxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogJHBhcmFncmFwaFNwYWNlICogMC41O1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgbWFyZ2luLXJpZ2h0OiAkZ3V0dGVyU3BhY2U7IH1cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IG1hcmdpbi1yaWdodDogJGd1dHRlclNwYWNlICogMjsgfVxuXG59XG5cbi5zLXBvc3QtbGlzdCB7XG4gICAgY29sdW1uLWNvdW50OiAyO1xufVxuXG4vLyBtYXJrZG93biB0YWJsZXMgc2NvcGVcbi5zLXBvc3QgdGFibGUge1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZCksIDAuMTUpO1xuICAgIC8vYm9yZGVyOiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zZXJpZjtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBtYXJnaW46ICRibG9ja1NwYWNlICogMC43NSAwO1xuXG4gICAgdGhlYWQgdHIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4xNSk7XG4gICAgfVxuXG4gICAgdGgge1xuICAgICAgICBAaW5jbHVkZSBoZWFkbGluZVNtKCk7XG4gICAgICAgIC8vYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUoYmFzZSk7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4gICAgICAgIHBhZGRpbmc6IHNwYWNlKDAuNSk7XG4gICAgfVxuXG4gICAgdGJvZHkgdHIge1xuICAgICAgICBAaW5jbHVkZSBvZGQoKSB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAwLjE1KTsgfVxuICAgICAgICBAaW5jbHVkZSBldmVuKCkgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4wOSk7IH1cbiAgICB9XG5cbiAgICB0ZCB7XG4gICAgICAgIC8vYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUoYmFzZSk7XG4gICAgICAgIHBhZGRpbmc6IHNwYWNlKDAuNSk7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcblxuICAgICAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcGFsZXR0ZShtdXRlZCk7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC8gMyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5cblxuXG4vLyBQb3N0IG5leHQvcHJldlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtcG9zdC1uZXh0IHtcbiAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDI7XG5cbiAgICBoMyB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC41O1xuICAgIH1cbn1cbiIsIlxuQG1peGluIGJsb2NrU3BhY2VQYWRkaW5nIHtcbiAgICBwYWRkaW5nOiAoJGJsb2NrU3BhY2UgKiAxKSAwO1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgcGFkZGluZzogKCRibG9ja1NwYWNlICogMS4yNSkgMDsgfVxufVxuXG5AbWl4aW4gYmxvY2tTcGFjZU1hcmdpbiB7XG4gICAgbWFyZ2luOiAoJGJsb2NrU3BhY2UgKiAxKSAwO1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgbWFyZ2luOiAoJGJsb2NrU3BhY2UgKiAxLjI1KSAwOyB9XG59XG5cbkBtaXhpbiBibG9ja1NwYWNlTWFyZ2luVG9wIHtcbiAgICBtYXJnaW4tdG9wOiAoJGJsb2NrU3BhY2UgKiAxKTtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7IG1hcmdpbi10b3A6ICgkYmxvY2tTcGFjZSAqIDEuMjUpOyB9XG59XG4iLCIvLyB2MS4wLjggaHR0cHM6Ly9naXRodWIuY29tL0x1a3lWai9mYW1pbHkuc2Nzcy9yZWxlYXNlc1xuXG4vLy8gU2VsZWN0IGFsbCBjaGlsZHJlbiBmcm9tIHRoZSBmaXJzdCB0byBgJG51bWAuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gaWQgb2YgdGhlIGNoaWxkXG5AbWl4aW4gZmlyc3QoJG51bSkge1xuICBAaWYgJG51bSA9PSAxIHtcbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJjpudGgtY2hpbGQoLW4gKyAjeyRudW19KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gZnJvbSB0aGUgbGFzdCB0byBgJG51bWAuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gaWQgb2YgdGhlIGNoaWxkXG5AbWl4aW4gbGFzdCgkbnVtKSB7XG4gICY6bnRoLWxhc3QtY2hpbGQoLW4gKyAjeyRudW19KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gYWZ0ZXIgdGhlIGZpcnN0IHRvIGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBhZnRlci1maXJzdCgkbnVtKSB7XG4gICY6bnRoLWNoaWxkKG4gKyAjeyRudW0gKyAxfSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgYWxsIGNoaWxkcmVuIGJlZm9yZSBgJG51bWAgZnJvbSB0aGUgbGFzdC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBmcm9tLWVuZCgkbnVtKSB7XG4gICY6bnRoLWxhc3QtY2hpbGQoI3skbnVtfSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgYWxsIGNoaWxkcmVuIGJldHdlZW4gYCRmaXJzdGAgYW5kIGAkbGFzdGAuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGJldHdlZW4oJGZpcnN0LCAkbGFzdCkge1xuICAmOm50aC1jaGlsZChuICsgI3skZmlyc3R9KTpudGgtY2hpbGQoLW4gKyAjeyRsYXN0fSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgYWxsIGV2ZW4gY2hpbGRyZW4gYmV0d2VlbiBgJGZpcnN0YCBhbmQgYCRsYXN0YC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gZXZlbi1iZXR3ZWVuKCRmaXJzdCwgJGxhc3QpIHtcbiAgJjpudGgtY2hpbGQoZXZlbik6bnRoLWNoaWxkKG4gKyAjeyRmaXJzdH0pOm50aC1jaGlsZCgtbiArICN7JGxhc3R9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgb2RkIGNoaWxkcmVuIGJldHdlZW4gYCRmaXJzdGAgYW5kIGAkbGFzdGAuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIG9kZC1iZXR3ZWVuKCRmaXJzdCwgJGxhc3QpIHtcbiAgJjpudGgtY2hpbGQob2RkKTpudGgtY2hpbGQobiArICN7JGZpcnN0fSk6bnRoLWNoaWxkKC1uICsgI3skbGFzdH0pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBgJG51bWAgY2hpbGRyZW4gYmV0d2VlbiBgJGZpcnN0YCBhbmQgYCRsYXN0YC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG5AbWl4aW4gbi1iZXR3ZWVuKCRudW0sICRmaXJzdCwgJGxhc3QpIHtcbiAgJjpudGgtY2hpbGQoI3skbnVtfW4pOm50aC1jaGlsZChuICsgI3skZmlyc3R9KTpudGgtY2hpbGQoLW4gKyAjeyRsYXN0fSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLy8vIFNlbGVjdCBhbGwgY2hpbGRyZW4gYnV0IGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBhbGwtYnV0KCRudW0pIHtcbiAgJjpub3QoOm50aC1jaGlsZCgjeyRudW19KSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgY2hpbGRyZW4gZWFjaCBgJG51bWAuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gaWQgb2YgdGhlIGNoaWxkXG4vLy8gQGFsaWFzIGV2ZXJ5XG5AbWl4aW4gZWFjaCgkbnVtKSB7XG4gICY6bnRoLWNoaWxkKCN7JG51bX1uKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBjaGlsZHJlbiBlYWNoIGAkbnVtYC5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBldmVyeSgkbnVtKSB7XG4gICY6bnRoLWNoaWxkKCN7JG51bX1uKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCB0aGUgYCRudW1gIGNoaWxkIGZyb20gdGhlIHN0YXJ0IGFuZCB0aGUgYCRudW1gIGNoaWxkIGZyb20gdGhlIGxhc3QuXG4vLy8gQGdyb3VwIHdpdGgtYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gaWQgb2YgdGhlIGNoaWxkXG5AbWl4aW4gZnJvbS1maXJzdC1sYXN0KCRudW0pIHtcbiAgJjpudGgtY2hpbGQoI3skbnVtfSksXG4gICY6bnRoLWxhc3QtY2hpbGQoI3skbnVtfSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLy8vIFNlbGVjdCB0aGUgaXRlbSBpbiB0aGUgbWlkZGxlIG9mIGAkbnVtYCBjaGlsZC4gT25seSB3b3JrcyB3aXRoIG9kZCBudW1iZXJcbi8vLyBjaGFpbi5cbi8vLyBAZ3JvdXAgd2l0aC1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRudW0gLSBpZCBvZiB0aGUgY2hpbGRcbkBtaXhpbiBtaWRkbGUoJG51bSkge1xuICAmOm50aC1jaGlsZCgje3JvdW5kKCRudW0gLyAyKX0pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5cbi8vLyBTZWxlY3QgYWxsIGNoaWxkcmVuIGJldHdlZW4gdGhlIGAkbnVtYCBmaXJzdCBhbmQgdGhlIGAkbnVtYCBsYXN0LlxuLy8vIEBncm91cCB3aXRoLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIGlkIG9mIHRoZSBjaGlsZFxuQG1peGluIGFsbC1idXQtZmlyc3QtbGFzdCgkbnVtKSB7XG4gICY6bnRoLWNoaWxkKG4gKyAjeyRudW19KTpudGgtbGFzdC1jaGlsZChuICsgI3skbnVtfSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLy8vIFRoaXMgcXVhbnRpdHktcXVlcnkgbWl4aW4gd2lsbCBvbmx5IHNlbGVjdCB0aGUgZmlyc3Qgb2YgYCRsaW1pdGAgaXRlbXMuIEl0IHdpbGwgbm90XG4vLy8gd29yayBpZiB0aGVyZSBpcyBub3QgYXMgbXVjaCBhcyBpdGVtIGFzIHlvdSBzZXQgaW4gYCRsaW1pdGAuXG4vLy8gQGdyb3VwIFF1YW50aXR5IHF1ZXJpZXNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxpbWl0XG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGZpcnN0LW9mKCRsaW1pdCkge1xuICAmOm50aC1sYXN0LWNoaWxkKCN7JGxpbWl0fSk6Zmlyc3QtY2hpbGQge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBUaGlzIHF1YW50aXR5LXF1ZXJ5IG1peGluIHdpbGwgb25seSBzZWxlY3QgdGhlIGxhc3Qgb2YgYCRsaW1pdGAgaXRlbXMuIEl0IHdpbGwgbm90XG4vLy8gaWYgdGhlcmUgaXMgbm90IGFzIG11Y2ggYXMgaXRlbSBhcyB5b3Ugc2V0IGluIGAkbGltaXRgLlxuLy8vIEBncm91cCBRdWFudGl0eSBxdWVyaWVzXG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRsaW1pdFxuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBsYXN0LW9mKCRsaW1pdCkge1xuICAmOm50aC1vZi10eXBlKCN7JGxpbWl0fSk6bnRoLWxhc3Qtb2YtdHlwZSgxKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFRoaXMgcXVhbnRpdHktcXVlcnkgbWl4aW4gd2lsbCBzZWxlY3QgZXZlcnkgaXRlbXMgaWYgdGhlcmUgaXMgYXQgbGVhc3QgYCRudW1gIGl0ZW1zLiBJdCB3aWxsIG5vdFxuLy8vIGlmIHRoZXJlIGlzIG5vdCBhcyBtdWNoIGFzIGl0ZW0gYXMgeW91IHNldCBpbiBgJG51bWAuXG4vLy8gQGdyb3VwIFF1YW50aXR5IHF1ZXJpZXNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxpbWl0XG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGF0LWxlYXN0KCRudW0pIHtcbiAgJHNlbGVjdG9yOiAmO1xuICAkY2hpbGQ6IG50aChudGgoJHNlbGVjdG9yLCAtMSksIC0xKTtcblxuICAmOm50aC1sYXN0LWNoaWxkKG4gKyAjeyRudW19KSxcbiAgJjpudGgtbGFzdC1jaGlsZChuICsgI3skbnVtfSkgfiAjeyRjaGlsZH0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBUaGlzIHF1YW50aXR5LXF1ZXJ5IG1peGluIHdpbGwgc2VsZWN0IGV2ZXJ5IGl0ZW1zIGlmIHRoZXJlIGlzIGF0IG1vc3QgYCRudW1gIGl0ZW1zLiBJdCB3aWxsIG5vdFxuLy8vIGlmIHRoZXJlIGlzIG5vdCBhcyBtdWNoIGFzIGl0ZW0gYXMgeW91IHNldCBpbiBgJG51bWAuXG4vLy8gQGdyb3VwIFF1YW50aXR5IHF1ZXJpZXNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxpbWl0XG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGF0LW1vc3QoJG51bSkge1xuICAkc2VsZWN0b3I6ICY7XG4gICRjaGlsZDogbnRoKG50aCgkc2VsZWN0b3IsIC0xKSwgLTEpO1xuXG4gICY6bnRoLWxhc3QtY2hpbGQoLW4gKyAjeyRudW19KTpmaXJzdC1jaGlsZCxcbiAgJjpudGgtbGFzdC1jaGlsZCgtbiArICN7JG51bX0pOmZpcnN0LWNoaWxkIH4gI3skY2hpbGR9IHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gVGhpcyBxdWFudGl0eS1xdWVyeSBtaXhpbiB3aWxsIHNlbGVjdCBldmVyeSBpdGVtcyBvbmx5IGlmIHRoZXJlIGlzIGJldHdlZW4gYCRtaW5gIGFuZCBgJG1heGAgaXRlbXMuXG4vLy8gQGdyb3VwIFF1YW50aXR5IHF1ZXJpZXNcbi8vLyBAcGFyYW0ge251bWJlcn0gJGxpbWl0XG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGluLWJldHdlZW4oJG1pbiwgJG1heCkge1xuICAkc2VsZWN0b3I6ICY7XG4gICRjaGlsZDogbnRoKG50aCgkc2VsZWN0b3IsIC0xKSwgLTEpO1xuXG4gICY6bnRoLWxhc3QtY2hpbGQobiArICN7JG1pbn0pOm50aC1sYXN0LWNoaWxkKC1uICsgI3skbWF4fSk6Zmlyc3QtY2hpbGQsXG4gICY6bnRoLWxhc3QtY2hpbGQobiArICN7JG1pbn0pOm50aC1sYXN0LWNoaWxkKC1uICsgI3skbWF4fSk6Zmlyc3QtY2hpbGQgfiAjeyRjaGlsZH0ge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3QgdGhlIGZpcnN0IGV4YWN0IGNoaWxkXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBmaXJzdC1jaGlsZCgpIHtcbiAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IHRoZSBsYXN0IGV4YWN0IGNoaWxkXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBsYXN0LWNoaWxkKCkge1xuICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFNlbGVjdCBhbGwgZXZlbiBjaGlsZHJlbi5cbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIGV2ZW4oKSB7XG4gICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLy8gU2VsZWN0IGFsbCBvZGQgY2hpbGRyZW4uXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBvZGQoKSB7XG4gICY6bnRoLWNoaWxkKG9kZCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTZWxlY3Qgb25seSB0aGUgZmlyc3QgYW5kIGxhc3QgY2hpbGQuXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBmaXJzdC1sYXN0KCkge1xuICAmOmZpcnN0LWNoaWxkLFxuICAmOmxhc3QtY2hpbGQge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBXaWxsIG9ubHkgc2VsZWN0IHRoZSBjaGlsZCBpZiBpdOKAmXMgdW5pcXVlLlxuLy8vIEBncm91cCBuby1hcmd1bWVudHNcbi8vLyBAY29udGVudCBbV3JpdGUgdGhlIHN0eWxlIHlvdSB3YW50IHRvIGFwcGx5IHRvIHRoZSBjaGlsZHJlbiwgYW5kIGl0IHdpbGwgYmUgYWRkZWQgd2l0aGluIHRoZSBAY29udGVudCBkaXJlY3RpdmVdXG4vLy8gQGFsaWFzIG9ubHlcbkBtaXhpbiB1bmlxdWUoKSB7XG4gICY6b25seS1jaGlsZCB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8vIFdpbGwgb25seSBzZWxlY3QgdGhlIGNoaWxkIGlmIGl04oCZcyB1bmlxdWUuXG4vLy8gQGdyb3VwIG5vLWFyZ3VtZW50c1xuLy8vIEBjb250ZW50IFtXcml0ZSB0aGUgc3R5bGUgeW91IHdhbnQgdG8gYXBwbHkgdG8gdGhlIGNoaWxkcmVuLCBhbmQgaXQgd2lsbCBiZSBhZGRlZCB3aXRoaW4gdGhlIEBjb250ZW50IGRpcmVjdGl2ZV1cbkBtaXhpbiBvbmx5KCkge1xuICAmOm9ubHktY2hpbGQge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBXaWxsIG9ubHkgc2VsZWN0IGNoaWxkcmVuIGlmIHRoZXkgYXJlIG5vdCB1bmlxdWUuIE1lYW5pbmcgaWYgdGhlcmUgaXMgYXRcbi8vLyBsZWFzdCAyIGNoaWxkcmVuLCB0aGUgc3R5bGUgaXMgYXBwbGllZC5cbi8vLyBAZ3JvdXAgbm8tYXJndW1lbnRzXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuQG1peGluIG5vdC11bmlxdWUoKSB7XG4gICY6bm90KDpvbmx5LWNoaWxkKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuXG4vLy8gVGhpcyBtaXhpbiBpcyB1c2VkIHRvIGF1dG9tYXRpY2FsbHkgc29ydCB6LWluZGV4IGluIG51bWVyaWNhbCBvcmRlci4gQnV0IGl0XG4vLy8gY2FuIGFsc28gc29ydCB0aGVtIGluIGFudGktbnVtZXJpY2FsIG9yZGVyLCBkZXBlbmRpbmcgdGhlIHBhcmFtZXRlcnMgeW91IHVzZS5cbi8vLyBAZ3JvdXAgdXNpbmcgZnVuY3Rpb25zXG4vLy8gQGNvbnRlbnQgW1dyaXRlIHRoZSBzdHlsZSB5b3Ugd2FudCB0byBhcHBseSB0byB0aGUgY2hpbGRyZW4sIGFuZCBpdCB3aWxsIGJlIGFkZGVkIHdpdGhpbiB0aGUgQGNvbnRlbnQgZGlyZWN0aXZlXVxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkbnVtIC0gTnVtYmVyIG9mIGNoaWxkcmVuXG4vLy8gQHBhcmFtIHtzdHJpbmd9ICRkaXJlY3Rpb24gW2ZvcndhcmRdIC0gRGlyZWN0aW9uIG9mIHRoZSBzb3J0XG4vLy8gQHBhcmFtIHtudW1iZXJ9ICRpbmRleCBbMF0gLSBJbmRleCBvZiB0aGUgc29ydGluZ1xuQG1peGluIGNoaWxkLWluZGV4KCRudW0sICRkaXJlY3Rpb246ICdmb3J3YXJkJywgJGluZGV4OiAwKSB7XG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG51bSB7XG4gICAgQGlmICgkZGlyZWN0aW9uID09ICdmb3J3YXJkJykge1xuICAgICAgJjpudGgtY2hpbGQoI3skaX0pIHtcbiAgICAgICAgei1pbmRleDogb3JkZXItaW5kZXgoJGksICRpbmRleCk7XG4gICAgICAgIEBjb250ZW50O1xuICAgICAgfVxuICAgIH0gQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT0gJ2JhY2t3YXJkJykge1xuICAgICAgJjpudGgtbGFzdC1jaGlsZCgjeyRpfSkge1xuICAgICAgICB6LWluZGV4OiBvcmRlci1pbmRleCgkaSwgJGluZGV4KTtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vLyBVc2VkIGJ5IHRoZSBjaGlsZC1pbmRleCBtaXhpbi4gSXQgd2lsbCByZXR1cm5lZCB0aGUgcHJvcGVyIHNvcnRlZCBudW1iZXJzXG4vLy8gZGVwZW5kaW5nIG9uIHRoZSBgJGluZGV4YCB2YWx1ZS5cbi8vLyBAYWNjZXNzIHByaXZhdGVcbi8vLyBAcGFyYW0ge251bWJlcn0gJG51bSAtIE51bWJlciBvZiBjaGlsZHJlblxuLy8vIEBwYXJhbSB7bnVtYmVyfSAkaW5kZXggLSBJbmRleCBvZiB0aGUgc29ydGluZ1xuQGZ1bmN0aW9uIG9yZGVyLWluZGV4KCRpLCAkaW5kZXgpIHtcbiAgQHJldHVybiAoJGluZGV4ICsgJGkpO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICBQT1NUIE1FVEEgTEFZT1VUU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4uYy1wb3N0LW1ldGEge1xuXG4gICAgLy8gYmxvY2tzXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogJGJsb2NrU3BhY2UgKiAwLjIgJGJsb2NrU3BhY2UgKiAwLjI1O1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICBwYWRkaW5nOiAkYmxvY2tTcGFjZSAqIDAuMTI1ICRibG9ja1NwYWNlICogMC4yNSAkYmxvY2tTcGFjZSAqIDAuMjtcbiAgICB9XG5cbiAgICAvLyBib3JkZXJzXG4gICAgYm9yZGVyOiAxcHggc29saWQgcGFsZXR0ZSh0ZXh0KTtcbiAgICAvLyAmOm5vdCg6bGFzdC1jaGlsZCkgeyBib3JkZXItcmlnaHQ6IDA7IH1cbiAgICArIC5jLXBvc3QtbWV0YSB7IG1hcmdpbi1sZWZ0OiAtMXB4OyB9XG4gICAgQGluY2x1ZGUgYWZ0ZXItZmlyc3QoNCkgeyBib3JkZXItdG9wOiAwOyB9XG4gICAgJjpudGgtY2hpbGQoNSkgeyBtYXJnaW4tbGVmdDogMDsgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZy1mb3ItY29udGFpbmVyLWxnKSB7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHsgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpOyB9XG4gICAgfVxuXG4gICAgLy8gIHR5cG9ncmFwaHlcbiAgICBzcGFuLFxuICAgIHNwYW4gYSB7XG4gICAgICAgIEBpbmNsdWRlIHRleHRNZXRhSGVhZGxpbmUoKTtcbiAgICB9XG5cbiAgICBzcGFuIHtcbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC4xMjU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgQGluY2x1ZGUgdGV4dE1ldGEoKTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICB9XG5cbiAgICBwIGEge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKCk7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjA3NWVtO1xuICAgIH1cblxuXG4gICAgLy8gZm9yIHdoZW4gdGhlcmUncyBvbmx5IG9uZSBtZXRhIGl0ZW1cbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgJi0tc2luZ2xlIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbn1cblxuXG5cblxuXG5cblxuLy8gUG9zdCBDVEEgYnV0dG9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uYy1wb3N0LWN0YSB7XG59XG5cblxuLy8gUG9zdCBzaGFyZSBibG9ja1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtcG9zdC1zaGFyZSB7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuNzU7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICA+IGEge1xuICAgICAgICBAaW5jbHVkZSB1bmRlcmxpbmVMaW5rKG5vbmUpO1xuICAgICAgICBjb2xvcjogcGFsZXR0ZShtdXRlZCk7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IC0xcHg7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcblxuICAgICAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgICAgICAgICAgY29sb3I6IHBhbGV0dGUobXV0ZWQpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi8vIEVuZCBvZiBhcnRpY2xlIHBvc3QtbWV0YSBmb3Igc3VwcG9ydGVycywgaW1hZ2UgY3JlZGl0ICYgYXJjaGl2ZSBub3RlLlxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLXBvc3QtZW5kQmxvY2sge1xuICAgIEBpbmNsdWRlIHRleHRNZXRhSGVhZGxpbmUoKTtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgcGFsZXR0ZShsaWdodCk7XG4gICAgY29sb3I6IHBhbGV0dGUobWVkaXVtKTtcbiAgICAvLyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcbiAgICBtYXJnaW4tdG9wOiAkcGFyYWdyYXBoU3BhY2UgKiAxLjI1O1xuICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlICogMC4xNSAwIDA7XG5cbiAgICBhIHtcbiAgICAgICAgQGluY2x1ZGUgdW5kZXJsaW5lTGluaygpO1xuICAgIH1cbn1cblxuXG4vLyBFbmQgb2YgYXJ0aWNsZSBzdXBwb3J0ZXJzIGxvZ29zICh1c2luZyB2ZW5kb3IuZmFtaWx5KVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLmMtcG9zdC1zdXBwb3J0ZXJzIHtcbiAgICBtYXJnaW46ICRwYXJhZ3JhcGhTcGFjZSAqIDAuNSAwIDA7XG4gICAgb3BhY2l0eTogMC41O1xuXG4gICAgaW1nIHtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkcGFyYWdyYXBoU3BhY2UgKiAxO1xuICAgICAgICBcbiAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogJGd1dHRlclNwYWNlICogMS41O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQGluY2x1ZGUgZmlyc3QtY2hpbGQoKSB7IG1hcmdpbi10b3A6ICRwYXJhZ3JhcGhTcGFjZSAqIDAuNTsgfVxuICAgICAgICBAaW5jbHVkZSBldmVyeSg0KSB7IG1hcmdpbi10b3A6ICRwYXJhZ3JhcGhTcGFjZSAqIDAuNTsgfVxuXG4gICAgICAgIC8vIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgLy8gICAgIC8vIEBpbmNsdWRlIGZpcnN0LWNoaWxkKCkgeyBtYXJnaW4tdG9wOiAkcGFyYWdyYXBoU3BhY2UgKiAwLjU7IH1cbiAgICAgICAgLy8gICAgIC8vIEBpbmNsdWRlIGFsbC1idXQoMSkgeyBtYXJnaW4tbGVmdDogJHBhcmFncmFwaFNwYWNlICogMTsgfVxuICAgICAgICAvLyAgICAgLy8gZGlzcGxheTogYmxvY2s7XG4gICAgICAgIC8vICAgICAvLyBtYXJnaW4tbGVmdDogJHBhcmFncmFwaFNwYWNlICogMC41O1xuICAgICAgICAvLyAgICAgLy8gd2lkdGg6IDY2LjY2NiU7XG4gICAgICAgIC8vIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XG4gICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgfVxuXG4gICAgICAgICYucG9ydHJhaXQge1xuICAgICAgICAgICAgaGVpZ2h0OiA2MHB4O1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG5cbiAgICAgICAgICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgaGVpZ2h0OiA4MHB4OyB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5cblxuXG5cblxuXG5cbi8vIHRoaXMgaXMgc2xpZ2h0bHkgdHJpY2t5OlxuLy8gLmMtcG9zdC1tZXRhIHdoZW4gaW5zaWRlIC5jLXBvc3QtaW5mb1xuXG4vLyAkYXNpZGVDb2xvcjogdGV4dDtcbi8vXG4vLyAuYy1wb3N0LWluZm8gLmMtcG9zdC1tZXRhIHtcbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuLy8gICAgIGJvcmRlcjogMDtcbi8vICAgICBtYXJnaW46IDA7XG4vLyAgICAgcGFkZGluZzogJGJsb2NrU3BhY2UgKiAwLjIgJGJsb2NrU3BhY2UgKiAwLjI1O1xuLy9cbi8vICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vLyAgICAgICAgIHBhZGRpbmc6ICRibG9ja1NwYWNlICogMC4xMjUgJGJsb2NrU3BhY2UgKiAwLjI1ICRibG9ja1NwYWNlICogMC4yO1xuLy8gICAgIH1cbi8vXG4vLyAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4vLyAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgcGFsZXR0ZSgkYXNpZGVDb2xvcik7XG4vLyAgICAgICAgIC8vbWFyZ2luLWxlZnQ6IC0xcHg7XG4vLyAgICAgfVxuLy9cbi8vICAgICBzcGFuLFxuLy8gICAgIHNwYW4gYSxcbi8vICAgICBsaSB7XG4vLyAgICAgICAgIGNvbG9yOiBwYWxldHRlKCRhc2lkZUNvbG9yKTtcbi8vICAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtYmxhY2s7XG4vLyAgICAgfVxuLy9cbi8vICAgICBzcGFuIHtcbi8vICAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4vLyAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbi8vICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC4xMjU7XG4vLyAgICAgICAgIH1cbi8vICAgICB9XG4vL1xuLy8gICAgIHAge1xuLy8gICAgICAgICBjb2xvcjogcGFsZXR0ZSgkYXNpZGVDb2xvcik7XG4vLyAgICAgfVxuLy8gfVxuLy9cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBGT09URVJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuJGZvb3RlclJvd1NwYWNlcjogJGJsb2NrU3BhY2UgKiAwLjI1O1xuXG4uYy1mb290ZXIge1xuICAgIEBpbmNsdWRlIGJsb2NrU3BhY2VQYWRkaW5nKCk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgcCxcbiAgICB1bCxcbiAgICBsaSxcbiAgICBzcGFuLFxuICAgIGEge1xuICAgICAgICBAaW5jbHVkZSB0ZXh0QXNpZGUoKTtcbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgfVxuXG4gICAgJi0tcnVsZSB7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKHRleHQpO1xuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jLWZvb3Rlci1ibG9jayB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBwYWxldHRlKGxpZ2h0KTtcbiAgICAgICAgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2U7XG4gICAgICAgIHBhZGRpbmctdG9wOiAkYmxvY2tTcGFjZTtcbiAgICB9XG59XG5cbi5jLWZvb3Rlci1sb2dvID4gaW1nIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHdpZHRoOiAxNTBweDtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgd2lkdGg6IDE4MHB4O1xuICAgIH1cbn1cblxuXG4vLyBoaWRlIHRoZSBsb2dvIG9uIG1vYmlsZSB3aGVuIHRoZSBpbmZvIGlzIG5vdCBvZiBhZGVxdWF0ZSBhbW91bnRcbi5jLWZvb3Rlci1oaWRlTW9iaWxlTG9nbyB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuXG4vLyBmb290ZXIgYWRkcmVzcyAmIGNvbnRhY3QgZGV0YWlscyBncmlkXG4vLy5jLWZvb3Rlci1pbmZvQmxvY2sge1xuLy8gICAgZGlzcGxheTogZmxleDtcbi8vICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4vL1xuLy8gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuLy8gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4vLyAgICB9XG4vL31cblxuLmMtZm9vdGVyLWluZm9EZXRhaWxzLFxuLmMtZm9vdGVyLW5ld3NGb3JtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxufVxuXG4uYy1mb290ZXItbmV3c0Zvcm0ge1xuICAgIG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC43NTtcblxuICAgID4gZm9ybSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbn1cblxuLmMtZm9vdGVyLWluZm9EZXRhaWxzID4gKiB7XG4gICAgLy8gdHlwZVxuICAgIGxpIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuOTY7XG4gICAgfVxuXG4gICAgLy8gc3BhY2luZ3NcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgIG1hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC4yNTtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgIC8vdmVydGljYWwtYWxpZ246IHRvcDtcblxuICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogJGJsb2NrU3BhY2UgKiAwLjU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhsKSB7XG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6ICRibG9ja1NwYWNlICogMC43NTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8uYy1mb290ZXItbmV3c0Zvcm0ge1xuLy8gICAgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjU7XG4vLyAgICBvcmRlcjogLTE7XG4vLyAgICB3aWR0aDogMTAwJTtcbi8vXG4vLyAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4vLyAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcbi8vICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcbi8vICAgICAgICBvcmRlcjogaW5pdGlhbDtcbi8vICAgICAgICB3aWR0aDogMzclO1xuLy8gICAgfVxuLy9cbi8vICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHtcbi8vICAgICAgICB3aWR0aDogaW5pdGlhbDtcbi8vICAgIH1cbi8vfVxuXG5cbi8vIGZvb3RlciB0eXBvZ3JhcGh5IHV0aWxzXG4udS1mb290ZXJSb3dJdGVtIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbGluZS1oZWlnaHQ6ICRiYXNlLWxpbmUtaGVpZ2h0LXVuaXQgIWltcG9ydGFudDtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKCAjeyRmb290ZXJSb3dTcGFjZXJ9ICsgOXB4KTtcbn1cblxuLnUtZm9vdGVyQmFja1RvcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAycHg7XG4gICAgcmlnaHQ6IHNwYWNlKDEpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcmlnaHQ6IHNwYWNlKDEuNSk7XG4gICAgfVxufVxuXG4uYy1mb290ZXIgLm8tbGlzdENsZWFuIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4vLyBncmV5IGJsb2Nrc1xuLmMtZm9vdGVyLWJsb2NrLFxuLmMtZm9vdGVyLWluZm8ge1xuICAgIHAsXG4gICAgdWwsXG4gICAgbGksXG4gICAgc3BhbixcbiAgICBhIHtcbiAgICAgICAgLy9jb2xvcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC43ICk7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKGNoYXJjb2FsKTtcbiAgICB9XG59IiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIE5BViBMQVlPVVRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLmMtbmF2IHtcbiAgICAvL0BpbmNsdWRlIGxpc3RJbmxpbmUoKTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW46IDA7XG4gICAgLy9tYXgtd2lkdGg6IGNvbnRhaW5lci13aWR0aChsZyk7XG4gICAgcGFkZGluZzogMCBzcGFjZSgxLjUpO1xuXG4gICAgLy9AaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IG1heC13aWR0aDogY29udGFpbmVyLXdpZHRoKHhsKTsgfVxuICAgIC8vQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykgeyBtYXgtd2lkdGg6IG5vbmU7IH1cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7IHBhZGRpbmc6IDAgNCU7IH1cbiAgICAvL0BpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeGwpIHsgcGFkZGluZzogMCAxMiU7IH1cbiAgICAvL0BpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc3UpIHsgcGFkZGluZzogMCAxOCU7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTQ0MHB4KSB7IHBhZGRpbmc6IDAgMTIlOyB9XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDIwMDBweCkgeyBwYWRkaW5nOiAwIDE4JTsgfVxuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgIC8vIG1vYmlsZSBuYXYgdGFrZXMgb3ZlciBoZXJl4oCmXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLy8gZm9vdGVyXG4gICAgQGluY2x1ZGUgd2hlbi1pbnNpZGUoXCIuYy1mb290ZXJcIikge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAkYmxvY2tTcGFjZSAqIDEuMjU7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHNtKSB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcGFsZXR0ZShsaWdodCk7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAkYmxvY2tTcGFjZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmMtbmF2LWl0ZW0ge1xuICAgIC8vQGluY2x1ZGUgbGlzdElubGluZSgpO1xuICAgIGZsZXgtc2hyaW5rOiAxO1xuICAgIG1hcmdpbjogMDtcblxuICAgIC8vIHRoZW1lXG4gICAgYSB7XG4gICAgICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDZweDtcblxuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGNvbmNpc2UpO1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDFweDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgICYuaXMtYWN0aXZlIHtcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHBhbGV0dGUodGV4dCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAaW5jbHVkZSBvbi1ldmVudCgpIHtcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHBhbGV0dGUodGV4dCk7XG4gICAgICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gZm9vdGVyXG4gICAgQGluY2x1ZGUgd2hlbi1pbnNpZGUoXCIuYy1mb290ZXJcIikge1xuICAgICAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcbiAgICAgICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkgeyBtYXJnaW4tdG9wOiAkZm9vdGVyUm93U3BhY2VyOyB9XG4gICAgICAgIH1cblxuICAgICAgICAmLmlzLWFjdGl2ZSBhIHsgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7IH1cbiAgICB9XG59XG5cblxuLmMtbmF2LXRyaWdnZXIge1xuICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHBhbGV0dGUobGlnaHQpO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAvLyBoZWlnaHQ6IDEwNSU7XG4gICAgbGluZS1oZWlnaHQ6IDIgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IHNwYWNlKDEpO1xuICAgIHRvcDogMDtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogJ1xcMjYzMCc7XG4gICAgICAgIG1hcmdpbi1yaWdodDogM3B4O1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59IiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgICBCVVRUT05TXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbkBtaXhpbiBidXR0b25UaGVtZSgpIHtcbiAgICBAaW5jbHVkZSBiYXNlVHJhbnNpdGlvbigpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUodGV4dCk7XG4gICAgYm9yZGVyLWNvbG9yOiBwYWxldHRlKHRleHQpO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbiAgICAvL3BhZGRpbmc6IDAgc3BhY2UoMC41KTtcbiAgICBwYWRkaW5nOiBzcGFjZSgwLjI1KSBzcGFjZSgxLjUpO1xuXG4gICAgLy8gdGhlbWUgdW51c2VkXG4gICAgLy8gYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3IgY29tZXMgZnJvbSBTdWl04oCmXG4gICAgLy9ib3JkZXItY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuICAgIC8vYm9yZGVyLXJhZGl1czogbWFwLWZldGNoKCRib3JkZXItcmFkaXVzLCBiYXNlKTtcbiAgICAvL2JhY2tncm91bmQtY29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQpLCAxICk7XG4gICAgLy8gdHJhbnNpdGlvbjogYWxsIHRyYW5zaXRpb24oZHVyYXRpb24sIHNob3J0KSB0cmFuc2l0aW9uKHR5cGUsIGJhc2UpO1xuICAgIC8vIHZlcnRpY2FsLWFsaWduOiB0b3A7IC8vIDEuXG5cbiAgICBhIHtcblxuICAgIH1cblxuICAgICZbZGlzYWJsZWRdIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiBwYWxldHRlKG11dGVkKTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShtdXRlZCk7XG4gICAgICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gICAgICAgIG9wYWNpdHk6IDAuNDtcbiAgICB9XG5cbiAgICBAaW5jbHVkZSBvbi1ldmVudCgpIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgICAgIG91dGxpbmU6IG5vbmUgIWltcG9ydGFudDtcblxuICAgICAgICAvLyB0aGVtZSB1bnVzZWRcbiAgICAgICAgLy9vcGFjaXR5OiAwLjU7XG4gICAgfVxufVxuXG5AbWl4aW4gYnV0dG9uVGV4dCgpIHtcbiAgICBAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbiAgICBAaW5jbHVkZSB0ZXh0QXNpZGUoKTtcbiAgICBjb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpICFpbXBvcnRhbnQ7XG5cbiAgICAvLyB0aGVtZSB1bnVzZWRcbiAgICAvL2NvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC1idXR0b247XG4gICAgLy9mb250LXNpemU6IGZvbnRzaXplKHRleHQtLXNtLCB4cyk7XG4gICAgLy9sZXR0ZXItc3BhY2luZzogMC4wNWVtO1xuXG4gICAgQGluY2x1ZGUgb24tZXZlbnQoKSB7XG4gICAgICAgIGNvbG9yOiBwYWxldHRlKGJhY2tncm91bmQpO1xuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIH1cbn1cblxuXG4vLyBQcmltYXJ5IGJ1dHRvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQG1peGluIGJ1dHRvbigpIHtcbiAgICBAaW5jbHVkZSBidXR0b25UaGVtZSgpO1xuICAgIEBpbmNsdWRlIGJ1dHRvblRleHQoKTtcbn1cblxuLnQtYnV0dG9uIHtcbiAgICBAaW5jbHVkZSBidXR0b247XG59XG5cbi50LWJ1dHRvbi0tZnVsbCB7XG4gICAgLy9AaW5jbHVkZSBidXR0b247XG4gICAgLy9wYWRkaW5nLWxlZnQ6IDA7XG4gICAgLy9wYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnQtYnV0dG9uLS1saW5lSGVpZ2h0IHtcbiAgICBsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKSAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHBhZGRpbmctYm90dG9tOiAwO1xufVxuXG4udC1idXR0b24tLXJldiB7XG4gICAgQGluY2x1ZGUgYnV0dG9uO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xuICAgIGJvcmRlci13aWR0aDogMXB4O1xufVxuXG5cblxuLy8gVGlja2V0IGJ1dHRvblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGFycm93U2l6ZTogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBiYXNlKTtcblxuQG1peGluIEFycm93KCkge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIC8vcmlnaHQ6IC0jeyRhcnJvd1NpemUgKiAwLjV9O1xuICAgIHJpZ2h0OiAtMjNweDtcbiAgICB0b3A6IC0xcHg7XG5cbn1cblxuLyogdW5jc3M6aWdub3JlICovXG4udC1idXR0b24tLXByaW1hcnkge1xuICAgIEBpbmNsdWRlIGJ1dHRvbigpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiBzcGFjZSgwLjI1KSBzcGFjZSgxKTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICAvLyBtaW4td2lkdGg6IDkyJTtcbiAgICAvLyBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAvLyAmOmFmdGVyIHtcbiAgICAvLyAgICAgQGluY2x1ZGUgQXJyb3coKTtcbiAgICAvLyAgICAgYm9yZGVyLWJvdHRvbTogNTlweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAvLyAgICAgYm9yZGVyLWxlZnQ6ICRhcnJvd1NpemUgKiAwLjUgc29saWQgcGFsZXR0ZSh0ZXh0KTtcbiAgICAvLyB9XG59XG5cbi8vLnQtYnV0dG9uLS1zZWNvbmRhcnkge1xuLy9cdEBpbmNsdWRlIGJ1dHRvbigpO1xuLy8gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHQvL2JvcmRlci1jb2xvcjogcGFsZXR0ZSh0ZXh0KTtcbi8vXHQvL2NvbG9yOiBwYWxldHRlKHRleHQpO1xuLy8gICAgYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4vL1x0Ym9yZGVyLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbi8vXHRjb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbi8vICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4vLyAgICBwYWRkaW5nOiBzcGFjZSgwLjI1KSBzcGFjZSgxLjUpO1xuLy8gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuLy9cbi8vICAgICY6YWZ0ZXIge1xuLy8gICAgICAgIC8vQGluY2x1ZGUgQXJyb3coKTtcbi8vICAgICAgICAvL2JvcmRlci1ib3R0b206IDU5cHggc29saWQgdHJhbnNwYXJlbnQ7XG4vLyAgICAgICAgLy9ib3JkZXItbGVmdDogJGFycm93U2l6ZSAqIDAuNSBzb2xpZCBwYWxldHRlKHRleHQpO1xuLy8gICAgfVxuLy9cbi8vICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy8gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuLy8gICAgICAgIC8vY29sb3I6IHBhbGV0dGUod2hpdGUpO1xuLy8gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC10ZXh0LWJvbGQ7XG4vLyAgICB9XG4vL31cblxuXG4vLyBTZWNvbmRhcnkgYnV0dG9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy9AbWl4aW4gdGV4dEJ1dHRvblNtKFxuLy9cdCRtaXhpbkNvbG9yOiBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpLFxuLy9cdCRtaXhpbkJvcmRlckNvbG9yOiAkbWl4aW5Db2xvclxuLy8pIHtcbi8vXHRAaW5jbHVkZSB0eXBlUmVzZXQoKTtcbi8vXHRjb2xvcjogJG1peGluQ29sb3I7XG4vL1x0Zm9udC1mYW1pbHk6ICRmb250LWJ1dHRvbjtcbi8vXHRmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXNtLCB4cyk7XG4vL1x0bGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbi8vXHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBjb25jaXNlKTtcbi8vXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuLy9cbi8vXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vL1x0XHRmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXNtLCByZyk7XG4vL1x0fVxuLy9cbi8vXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcbi8vXHRcdC8vIGJvcmRlci1jb2xvcjogcmdiYSggJG1peGluQm9yZGVyQ29sb3IsIDAuNSk7XG4vL1x0XHQvLyBjb2xvcjogcmdiYSggJG1peGluQ29sb3IsIDAuNSk7XG4vL1x0XHRjb2xvcjogJG1peGluQ29sb3I7XG4vL1x0fVxuLy99XG4vL1xuLy9AbWl4aW4gYnV0dG9uU2Vjb25kYXJ5KCkge1xuLy9cdEBpbmNsdWRlIGJ1dHRvblRoZW1lKCk7XG4vL1x0QGluY2x1ZGUgdGV4dEJ1dHRvblNtKCk7XG4vL1x0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4vL1x0Ym9yZGVyLXdpZHRoOiAxcHg7XG4vL1x0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgY29uY2lzZSkgIWltcG9ydGFudDtcbi8vXHRwYWRkaW5nLXRvcDogMXB4O1xuLy9cbi8vXHRAaW5jbHVkZSBvbi1ldmVudCgpIHtcbi8vXHR9XG4vL31cbi8vXG4vLy50LWJ1dHRvblNlY29uZGFyeSB7XG4vL1x0QGluY2x1ZGUgYnV0dG9uU2Vjb25kYXJ5KCk7XG4vL31cblxuXG4vLyBJbnZpc2libGUgYnV0dG9uIChmb3IgaG9sZGluZyB0aGUgdG91Y2ggc3BhY2UgJiBsYXlvdXQpXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vL0BtaXhpbiBidXR0b25JbnZpc2libGUgKCkge1xuLy9cdEBpbmNsdWRlIGJ1dHRvblRoZW1lKCk7XG4vL1x0QGluY2x1ZGUgdGV4dEJ1dHRvblNtKCRtaXhpbkNvbG9yOiBwYWxldHRlKGJyYW5kKSApO1xuLy9cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuLy9cdGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4vL1x0cGFkZGluZzogMCAwIDAgc3BhY2UoMC43NSk7XG4vL1x0dGV4dC10cmFuc2Zvcm06IG5vbmU7XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdFx0Y29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuLy9cdH1cbi8vfVxuLy9cbi8vLnQtYnV0dG9uSW52aXNpYmxlIHtcbi8vXHRAaW5jbHVkZSBidXR0b25JbnZpc2libGUoKTtcbi8vfVxuXG5cbi8vIEJ1dHRvbiBzaXplc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8udC1idXR0b24ge1xuLy9cdEBpbmNsdWRlIGJ1dHRvbjtcbi8vXG4vL1x0Ji0tbWQge1xuLy9cdFx0bGluZS1oZWlnaHQ6IG1hcC1mZXRjaCgkYnV0dG9uLWhlaWdodCwgYmFzZSk7XG4vL1x0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG4vL1x0XHR3aWR0aDogc3BhY2UoNSk7XG4vL1xuLy9cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4cykge1xuLy9cdFx0XHR3aWR0aDogc3BhY2UoNik7XG4vL1x0XHR9XG4vL1x0fVxuLy9cbi8vXHQmLS1sZyB7XG4vL1x0XHRsaW5lLWhlaWdodDogbWFwLWZldGNoKCRidXR0b24taGVpZ2h0LCBsYXJnZSk7XG4vL1x0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG4vL1x0XHR3aWR0aDogMTAwJTtcbi8vXG4vL1x0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vL1x0XHRcdHdpZHRoOiBzcGFjZSgxMik7XG4vL1x0XHR9XG4vL1x0fVxuLy9cbi8vXHQmLS1mdWxsIHtcbi8vXHRcdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGxhcmdlKTtcbi8vXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcbi8vXHRcdHdpZHRoOiAxMDAlO1xuLy9cdH1cbi8vfVxuLy9cbi8vLnQteHMtYnV0dG9uIHtcbi8vXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHhzKSB7XG4vL1x0XHQmLS1tZCB7XG4vL1x0XHRcdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpO1xuLy9cdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG4vL1x0XHRcdHdpZHRoOiBzcGFjZSg2KTtcbi8vXHRcdH1cbi8vXHR9XG4vL31cblxuXG4vLyBDbG9zZSBidXR0b24gKHRoaXMganVzdCBwb3NpdGlvbnMgYW4gaWNvbilcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi50LWJ1dHRvbkNsb3NlIHtcbiAgICBjb2xvcjogcGFsZXR0ZShicmFuZCk7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHJpZ2h0OiBzcGFjZSgwLjUpO1xuICAgIHRvcDogc3BhY2UoMC41KTtcbiAgICB6LWluZGV4OiBtYXAtZmV0Y2goJHotaW5kZXgsIGZpcnN0KTtcblxuICAgIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgIH1cblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHMpIHtcbiAgICAgICAgcmlnaHQ6IHNwYWNlKDEpO1xuICAgICAgICB0b3A6IDMxcHg7XG4gICAgfVxufVxuXG5cblxuLy8gU3VidGl0bGVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIHVzZSB0aGlzIHRvIHZlcnRpY2FsbHkgYWxpZ24gZWxlbWVudHMgd2l0aCBhIGJ1dHRvblxuLy8gLkJ1dHRvbkxpbmVIZWlnaHQge1xuLy8gICAgIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpO1xuLy8gICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4vLyB9XG5cbi8vIHBhZGRpbmctdG9wOiAycHg7IC8vIHRoZW1lIHR5cG9ncmFwaHkgYWxpZ25tZW50IiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBGT1JNXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3QsXG5sYWJlbCB7XG4gIEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cbn1cblxuLy9pbnB1dDpub3QoW3R5cGU9XCJyYWRpb1wiXSksXG4vL2lucHV0Om5vdChbdHlwZT1cInN1Ym1pdFwiXSksXG4vL2lucHV0Om5vdChcIi5CdXR0b25cIiksXG5pbnB1dFt0eXBlPVwidGV4dFwiXSxcbmlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbmlucHV0W3R5cGU9XCJ0ZWxcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbmlucHV0W3R5cGU9XCJwYXNzd29yZFwiXSxcbi5zZWxlY3Qgc2VsZWN0LFxudGV4dGFyZWEge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBib3JkZXI6IDA7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIC8vbWFyZ2luOiAwOyAvLyBub3JtYWxpemUgaGFuZGxlcyB0aGlzXG4gICAgcmVzaXplOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG5cbiAgICAvLyB0aGVtZVxuICAgIEBpbmNsdWRlIHRleHRBc2lkZSgpO1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogcGFsZXR0ZShuZXV0cmFsKTtcbiAgICAvL2JvcmRlcjogMXB4IHNvbGlkIHBhbGV0dGUobmV1dHJhbCk7XG4gICAgLy9iYWNrZ3JvdW5kLWNvbG9yOiBwYWxldHRlKG5ldXRyYWwtbGlnaHQpO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYmFja2dyb3VuZCk7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcGFsZXR0ZShiYXNlKTtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGJhc2UpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDAgc3BhY2UoMC41KTtcbiAgdHJhbnNpdGlvbjogYWxsIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgZHVyYXRpb24sIGxvbmcpIG1hcC1mZXRjaCgkdHJhbnNpdGlvbiwgdHlwZSwgYmFzZSk7XG5cbiAgICAvLyB0aGVtZSB1bnVzZWRcbiAgICAvL2JvcmRlci1yYWRpdXM6IG1hcC1mZXRjaCgkYm9yZGVyLXJhZGl1cywgYmFzZSk7XG4gICAgLy9wYWRkaW5nOiAwIHNwYWNlKDIvMyk7XG5cbiAgLy8gQGluY2x1ZGUgb24tZXZlbnQoKSB7XG4gIC8vXHRvdXRsaW5lOiAwO1xuICAvL31cblxuICAgIC8vIGZpbGxlZC1pbiBmb3JtIHN0eWxpbmdcbiAgJjotd2Via2l0LWF1dG9maWxsIHtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAwIHJlbSgxMDApIHBhbGV0dGUoZmFpbnQpIGluc2V0O1xuICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiBwYWxldHRlKGJyYW5kKTtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICB9XG5cbiAgICAvLyBwbGFjZWhvbGRlciBjb2xvclxuICAkY29sb3ItcGxhY2Vob2xkZXI6IHJnYmEoIHBhbGV0dGUodGV4dCksIDAuNyApO1xuXG4gICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4gICY6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4gICY6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4gICY6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG59XG5cbi8vIHJlaW5zdGF0ZSBsaW5lIGhlaWdodCBmb3IgbXVsdGktcm93IHRleHRhcmVhcy5cbnRleHRhcmVhIHtcbiAgICBsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQtdW5pdDtcbiAgICAvL3BhZGRpbmctdG9wOiBzcGFjZSgwLjUpO1xufVxuXG4vLyBtaW1pY2tpbmcgcGxhY2Vob2xkZXIgY29sb3JzLlxuLy8gUmVmOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzg2MTk0MDYvY3NzLXNlbGVjdGVkLXBzZXVkby1jbGFzcy1zaW1pbGFyLXRvLWNoZWNrZWQtYnV0LWZvci1zZWxlY3QtZWxlbWVudHNcbiRjb2xvci1wbGFjZWhvbGRlcjogcmdiYSggcGFsZXR0ZSh0ZXh0KSwgMC41ICk7XG5cbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxub3B0aW9uW3R5cGU9XCJzZWxlY3RlZFwiXSB7XG4gICAgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjtcbn1cblxuXG5cbi8vIFRoZW1lIHZhcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5jLWZvcm1XcmFwcGVyLW5vdGUge1xuICAgIEBpbmNsdWRlIGhlYWRsaW5lU20oKTtcbiAgICBmb250LWZhbWlseTogJGZvbnQtdGV4dC1ib2xkO1xuICAgIC8vQGluY2x1ZGUgdGV4dEFzaWRlKCk7XG4gICAgLy9AaW5jbHVkZSB0ZXh0UmcoKTtcbiAgICAvL2ZvbnQtZmFtaWx5OiAkZm9udC1zZXJpZjtcblxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kKSwgMC4xNSApO1xuICAgIC8vYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhbGV0dGUobXV0ZWQpO1xuICAgIG1hcmdpbjogJGJsb2NrU3BhY2UgMCAwO1xuICBwYWRkaW5nOiBzcGFjZSgwLjUpIHNwYWNlKDEpO1xuXG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAgICAgcGFkZGluZzogc3BhY2UoMSkgMjAlIHNwYWNlKDEpIHNwYWNlKDIpO1xuICAgIH1cblxuICAgIH4gLmMtZm9ybVdyYXBwZXIge1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBwYWRkaW5nLXRvcDogc3BhY2UoMC43NSk7XG5cbiAgICAgICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IHNwYWNlKDEuNSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jLWZvcm1XcmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZCksIDAuMDkgKTtcbiAgICBtYXJnaW46ICRibG9ja1NwYWNlIDAgMDtcbiAgcGFkZGluZzogc3BhY2UoMSk7XG5cbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgICAgIHBhZGRpbmc6IHNwYWNlKDIpO1xuICAgIH1cbn1cblxuLmMtZm9ybSB7XG4gICAgbWFyZ2luLXRvcDogc3BhY2UoMik7XG5cbiAgICBAaW5jbHVkZSB3aGVuLWluc2lkZShcIi5jLWZvcm1XcmFwcGVyXCIpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG59XG5cbi5jLWZvcm0tbGFiZWxCbG9jayB7XG4gICAgbWFyZ2luLXRvcDogc3BhY2UoMSk7XG5cbiAgICB+IC5zZWxlY3QsXG4gICAgPiBpbnB1dCxcbiAgICA+IHRleHRhcmVhIHtcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgIH1cbn1cblxuLmMtZm9ybS1sYWJlbEJsb2NrIH4gc2VsZWN0IHtcbiAgICAvL21hcmdpbi10b3A6IDVweDtcbn1cblxuLmMtZm9ybSBsYWJlbCxcbi5jLWZvcm0gLmxhYmVsIHtcbiAgICBAaW5jbHVkZSB0ZXh0TWV0YUhlYWRsaW5lKCk7XG4gICAgY29sb3I6IHBhbGV0dGUodGV4dCk7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICRmb250LXRleHQtcmVndWxhcjtcblxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuICAgICAgICBsaW5lLWhlaWdodDogMjtcbiAgICB9XG59XG5cbi8vLmMtZm9ybSBsYWJlbCxcbi8vLmMtZm9ybSAuc2VsZWN0IHtcbi8vICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XG4vLyAgICAgICAgbWFyZ2luLXRvcDogc3BhY2UoMSk7XG4vLyAgICB9XG4vL31cblxuLmMtZm9ybSAuc2VsZWN0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgcmlnaHQ6IDEuMjVyZW07XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgY29udGVudDogXCJcIjtcbiAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgbWFyZ2luLXRvcDogLS4xNXJlbTtcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgIGJvcmRlci10b3A6IC4zNXJlbSBzb2xpZDtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAuMzVyZW0gc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgIGJvcmRlci1ib3R0b206IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyLWxlZnQ6IC4zNXJlbSBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB9XG59XG5cbi5jLWZvcm0gLnNlbGVjdCBzZWxlY3Qge1xuICAgIC8vZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIC8vd2lkdGg6IDEwMCU7XG4gICAgLy9tYXJnaW46IDA7XG4gICAgY29sb3I6IGxpZ2h0ZW4oIHBhbGV0dGUobWVkaXVtKSwgMTAlKTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3V0bGluZTogMDtcbiAgICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG4uYy1mb3JtLWFsZXJ0IHtcbiAgICBjb2xvcjogcGFsZXR0ZShiYWQtbmV3cyk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNjZweDtcbiAgICByaWdodDogMDtcbn1cblxuXG4vLyBOZXdzbGV0dGVyIHNpZ251cCB2YXJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vLmMtZm9ybVdyYXBwZXIgI21jX2VtYmVkX3NpZ251cCB7XG4vLyAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4vLyAgICAgICAgd2lkdGg6IDkwJTtcbi8vICAgIH1cbi8vfVxuXG4vLyNtY19lbWJlZF9zaWdudXAge1xuLy9cdGlucHV0W3R5cGU9XCJlbWFpbFwiXSB7XG4vL1x0XHRiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbi8vXHRcdGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4vL1x0ICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBwYWxldHRlKG11dGVkKTtcbi8vXHRcdC8vcGFkZGluZzogMCAwIDAgc3BhY2UoMC41KTtcbi8vXHRcdG1hcmdpbi1yaWdodDogc3BhY2UoMC4yNSk7XG4vL1x0XHRwYWRkaW5nOiAwO1xuLy9cdH1cbi8vXG4vL1x0LnQtYnV0dG9uIHtcbi8vXHRcdGJhY2tncm91bmQtY29sb3I6IHBhbGV0dGUoYnJhbmQpO1xuLy8gICAgICAgIGJvcmRlci1jb2xvcjogcGFsZXR0ZShicmFuZCk7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShiYWNrZ3JvdW5kKTtcbi8vXHR9XG4vL31cblxuXG5cblxuXG5cblxuLy8gaW5wdXQsXG4vLyB0ZXh0YXJlYSB7XG4vLyBcdGJvcmRlcjogMXB4IHNvbGlkIHBhbGV0dGUoYmFzZSk7XG4vLyBcdG1hcmdpbi1ib3R0b206IHNwYWNlKDAuNSk7XG4vLyB9XG4vL1xuLy8gdGV4dGFyZWEge1xuLy8gXHRsaW5lLWhlaWdodDogMS41O1xuLy8gXHRwYWRkaW5nLXRvcDogc3BhY2UoMC41KTtcbi8vIH1cblxuXG5cblxuXG4vLyBSRUZBQ1RPUjogdGV4dCBpbnB1dHMgb25seSBzbyBJIGRvbid0IG92ZXJyaWRlIHJhZGlvIGJ0biBjb21wb25lbnQgc3R5bGVz4oCmXG5cbi8vaW5wdXRbdHlwZT1cInRleHRcIl0sIGlucHV0W3R5cGU9XCJlbWFpbFwiXSwgaW5wdXRbdHlwZT1cInRlbFwiXSB7XG4vL1x0QGluY2x1ZGUgdGV4dFJnKCk7XG4vL1x0Y29sb3I6IHJnYmEoIHBhbGV0dGUoYnJhbmQtY291bnRlciksIDAuNyApO1xuLy9cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuLy9cdGJvcmRlcjogMDtcbi8vXHRib3JkZXItYm90dG9tOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4vL1x0Ym9yZGVyLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kLWNvdW50ZXIpLCAwLjQgKTtcbi8vXHQvLyBib3JkZXItcmFkaXVzOiBtYXAtZmV0Y2goJGJvcmRlci1yYWRpdXMsIGJhc2UpO1xuLy9cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcbi8vXHQvLyBmb250LWZhbWlseTogJGZvbnQtdGV4dC1yZWd1bGFyO1xuLy9cdGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGxnKTtcbi8vXHRwYWRkaW5nOiAwO1xuLy9cdHJlc2l6ZTogbm9uZTtcbi8vXHR0cmFuc2l0aW9uOiBhbGwgbWFwLWZldGNoKCR0cmFuc2l0aW9uLCBkdXJhdGlvbiwgbG9uZykgbWFwLWZldGNoKCR0cmFuc2l0aW9uLCB0eXBlLCBiYXNlKTtcbi8vXHR3aWR0aDogMTAwJTtcbi8vXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4vL1xuLy9cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuLy9cdFx0b3V0bGluZTogMDtcbi8vXHR9XG4vL1xuLy9cdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkge1xuLy9cdFx0Ly8gZm9udC1zaXplOiAxNnB4O1xuLy9cdH1cbi8vXG4vL1x0Jjotd2Via2l0LWF1dG9maWxsIHtcbi8vXHRcdC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDAgcmVtKDEwMCkgZGFya2VuKCBwYWxldHRlKG5ldXRyYWwpLDQlKSBpbnNldDtcbi8vXHRcdC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiBwYWxldHRlKG1lZGl1bSk7XG4vL1x0XHRiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuLy9cdH1cbi8vXG4vL1x0JGNvbG9yLXBsYWNlaG9sZGVyOiByZ2JhKCBwYWxldHRlKGJyYW5kLWNvdW50ZXIpLCAwLjcgKTtcbi8vXG4vL1x0Jjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbi8vXHQmOi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgIHsgY29sb3I6ICRjb2xvci1wbGFjZWhvbGRlcjsgfVxuLy9cdCY6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgeyBjb2xvcjogJGNvbG9yLXBsYWNlaG9sZGVyOyB9XG4vL1x0JjotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7IGNvbG9yOiAkY29sb3ItcGxhY2Vob2xkZXI7IH1cbi8vfVxuXG5cbi8vIEZsb2F0aW5nIGxhYmVsIHBhdHRlcm5cbi8vIFVzdWFsbHkgcmVxdWlyZXMgSlMgdW5sZXNzIHlvdSdyZSB1c2luZyBSZWFjdOKAplxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLyogdW5jc3M6aWdub3JlICovXG4vLy5Gb3JtLWdyb3VwIHtcbi8vXHRwb3NpdGlvbjogcmVsYXRpdmU7XG4vL1xuLy9cdC8vJjpub3QoOmxhc3QtY2hpbGQpIHtcbi8vXHQvL1x0bWFyZ2luOiAwIDAgc3BhY2UoMS4xKTtcbi8vXHQvL31cbi8vXG4vL1x0bGFiZWwge1xuLy9cdFx0QGluY2x1ZGUgdGV4dExnKCk7XG4vL1x0XHRjb2xvcjogcmdiYSggcGFsZXR0ZShicmFuZCksIDEgKTtcbi8vXHRcdGN1cnNvcjogdGV4dDtcbi8vXHRcdGxlZnQ6IDA7XG4vL1x0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG4vL1x0XHR0b3A6IDZweDtcbi8vXHRcdHRyYW5zaXRpb246IGFsbCBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIGR1cmF0aW9uLCBmYXN0KSBtYXAtZmV0Y2goJHRyYW5zaXRpb24sIHR5cGUsIGZpbmUpO1xuLy9cdFx0ei1pbmRleDogOTk7XG4vL1x0fVxuLy9cbi8vXHRpbnB1dC5Gb3JtLWNvbnRyb2wsXG4vL1x0dGV4dGFyZWEuRm9ybS1jb250cm9sIHtcbi8vXHR9XG4vL1xuLy9cdCYtLXNtIHtcbi8vXHRcdC8vIGxpbmUtaGVpZ2h0OiBtYXAtZmV0Y2goJGJ1dHRvbi1oZWlnaHQsIGxnKTtcbi8vXHRcdGxpbmUtaGVpZ2h0OiAzOHB4O1xuLy9cbi8vXHRcdGxhYmVsIHtcbi8vXHRcdFx0QGluY2x1ZGUgdGV4dFJnKCk7XG4vL1x0XHRcdGNvbG9yOiBwYWxldHRlKGJyYW5kLWNvdW50ZXIpO1xuLy9cdFx0fVxuLy9cbi8vXHRcdGlucHV0LkZvcm0tY29udHJvbCB7XG4vL1x0XHRcdGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuLy9cdFx0fVxuLy9cdH1cbi8vXG4vL1x0Ly8gcmV0YWluIHRoZW1lIHR5cG9ncmFwaHkgYWxpZ25tZW50XG4vL1x0Ly8gaW5wdXQuQnV0dG9uIHtcbi8vXHQvLyAgICAgcGFkZGluZy10b3A6IDJweDtcbi8vXHQvLyB9XG4vL1xuLy9cdC8vIC8qIHVuY3NzOmlnbm9yZSAqL1xuLy9cdC8vICYuaXMtYWN0aXZlID4gbGFiZWw6bm90KC5oYXMtZXJyb3IpIHtcbi8vXHQvLyAgICAgLy8gY29sb3I6IHBhbGV0dGUoY2hhcmNvYWwpO1xuLy9cdC8vICAgICAvLyBmb250LXNpemU6IHJlbSgkc2l6ZVRleHRTbSAqIDAuNjUpO1xuLy9cdC8vICAgICBvcGFjaXR5OiAwO1xuLy9cdC8vICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkocmVtKC0xMCkpO1xuLy9cdC8vIH1cbi8vfVxuLy9cbi8vLkZvcm0tZ3JvdXAuaXMtYWN0aXZlIHtcbi8vXHRsYWJlbCB7XG4vL1x0XHRmb250LXNpemU6IGZvbnRzaXplKHRleHQtLXNtLCBzbSk7XG4vL1x0XHRvcGFjaXR5OiAxO1xuLy9cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoMXB4LCAtMTZweCk7XG4vL1x0fVxuLy9cbi8vXHRpbnB1dC5Gb3JtLWNvbnRyb2wge1xuLy9cdFx0Ym9yZGVyLWNvbG9yOiByZ2JhKCBwYWxldHRlKGJyYW5kLWNvbXBsZW1lbnQpLCAxICk7XG4vL1x0XHRjb2xvcjogcGFsZXR0ZShicmFuZC1jb21wbGVtZW50KTtcbi8vXHR9XG4vL31cbi8vXG4vLy5Gb3JtLWdyb3VwLmhhcy1lcnJvciB7XG4vL1x0bGFiZWwge1xuLy9cdFx0Y29sb3I6IHBhbGV0dGUoYmFkLW5ld3MpO1xuLy9cdH1cbi8vXG4vL1x0aW5wdXQuRm9ybS1jb250cm9sIHtcbi8vXHRcdGJvcmRlci1jb2xvcjogcGFsZXR0ZShiYWQtbmV3cyk7XG4vL1x0fVxuLy99IiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAgIENPRkZFRSBTRUNSRVRTIElDT05cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLmMtaWNvbiB7XG5cdHdpZHRoOiAxNzlweDtcblx0aGVpZ2h0OiA3MHB4O1xuXG5cdC8vY3Vyc29yOiBwb2ludGVyO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgLy9maWxsOiBjdXJyZW50Q29sb3I7IC8vIFRoZSBjb2xvciBvZiB0aGUgU1ZHIHdpbGwgaW5oZXJpdCB0aGUgcGFyZW50J3MgYGNvbG9yYC5cbiAgICBmaWxsOiBwYWxldHRlKGJyYW5kKTtcblx0bGluZS1oZWlnaHQ6IDE7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuXG5cdEBpbmNsdWRlIG9uLWV2ZW50KCkge1xuXHRcdG91dGxpbmU6IDA7XG5cdH1cbn1cbiIsIlxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gICBTSEFSRSBBU0lERSBDT01QT05FTlRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLmMtc2hhcmVXcmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYy1zaGFyZSB7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xufVxuIiwiXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBCT09UU1RSQVAgQUZGSVggQ09NUE9ORU5UXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5cbi5hZmZpeCxcbi5hZmZpeC1ib3R0b20ge1xuICAgIHRvcDogc3BhY2UoMik7XG4gICAgd2lkdGg6IDI2OHB4O1xufVxuXG4vLyBvbmx5IGFmZml4IG9uIGxhcmdlciB2aWV3cG9ydHNcbi5hZmZpeCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkge1xuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgfVxufVxuXG4uYWZmaXgtYm90dG9tIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG59XG4iLCJcbi51LW1hcmdpbk5URDMgeyBtYXJnaW4tdG9wOiAtI3tzcGFjZSgxLzMpfSAgIWltcG9ydGFudDsgfVxuXG4udS1zbURvd24tZmxleE9yZGVyRmlyc3Qge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bih4cykge1xuICAgICAgICBvcmRlcjogLTEgIWltcG9ydGFudDtcbiAgICB9XG59XG5cbi51LWhpZGUgICAgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbi51LXNtLWhpZGUgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG4udS1zbURvd24taGlkZSB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bihzbSkgeyBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG4udS1wb3NSZWxhdGl2ZSB7IHBvc2l0aW9uOiByZWxhdGl2ZSFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCYXNlIHsgY29sb3I6IHBhbGV0dGUoYmFzZSkgIWltcG9ydGFudDsgfVxuLnUtY29sb3JNdXRlZCB7IGNvbG9yOiBwYWxldHRlKG11dGVkKSAhaW1wb3J0YW50OyB9XG4udS1jb2xvck1lZGl1bSB7IGNvbG9yOiBwYWxldHRlKG1lZGl1bSkgIWltcG9ydGFudDsgfVxuLnUtY29sb3JEYXJrIHsgY29sb3I6IHBhbGV0dGUoY2hhcmNvYWwpICFpbXBvcnRhbnQ7IH1cblxuLnUtY29sb3JCcmFuZCB7IGNvbG9yOiBwYWxldHRlKGJyYW5kKSAhaW1wb3J0YW50OyB9XG4udS1jb2xvck5ldXRyYWxEYXJrIHsgY29sb3I6IHBhbGV0dGUobmV1dHJhbC1kYXJrKSAhaW1wb3J0YW50OyB9XG5cblxuXG4udS1pbmxpbmVCbG9ja1dyYXBwZXIgPiAqIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cblxuXG5cbi8vIHF1aWNrIHNwYWNlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblxuLnUtYmxvY2tTcGFjZVQgeyBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZTsgfVxuXG4udS1tYXJnaW5UMCAgICAgIHsgbWFyZ2luLXRvcCAgICAgOiAwICFpbXBvcnRhbnQ7IH1cblxuXG4udS1zcGFjZTAgICAgIHsgbWFyZ2luOiAwICFpbXBvcnRhbnQ7IH1cblxuLnUtc3BhY2VUMW9mNCB7IG1hcmdpbi10b3A6IHNwYWNlKDAuMjUpOyB9XG5cbi51LXNwYWNlVEQyICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgwLjUpICFpbXBvcnRhbnQ7IH1cbi51LXNwYWNlVCAgICAgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKSAhaW1wb3J0YW50OyB9XG4udS1zcGFjZVQyICAgIHsgbWFyZ2luLXRvcDogc3BhY2UoMikgIWltcG9ydGFudDsgfVxuLnUtc3BhY2VCICAgICB7IG1hcmdpbi1ib3R0b206IHNwYWNlKDEpICFpbXBvcnRhbnQ7IH1cbi51LXNwYWNlQjIgICAgeyBtYXJnaW4tYm90dG9tOiBzcGFjZSgyKSAhaW1wb3J0YW50OyB9XG4udS1zcGFjZUI0ICAgIHsgbWFyZ2luLWJvdHRvbTogc3BhY2UoNCkgIWltcG9ydGFudDsgfVxuXG5cblxuLy8gcmVzcG9uc2l2ZVxuLnUtc20tc3BhY2VMTjEgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKHNtKSB7IG1hcmdpbi1sZWZ0OiAtMXB4OyB9IH1cbi51LXNtLXNwYWNlVCAgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChzbSkgeyBtYXJnaW4tdG9wOiBzcGFjZSgxKTsgfSB9XG4udS1zbS1zcGFjZVQyICB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHsgbWFyZ2luLXRvcDogc3BhY2UoMik7IH0gfVxuXG4udS1zbURvd24tc3BhY2VSICAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oeHMpIHsgbWFyZ2luLXJpZ2h0OiBzcGFjZSgxKTsgfSB9XG4udS1zbURvd24tc3BhY2VURDIgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oeHMpIHsgbWFyZ2luLXRvcDogc3BhY2UoMC41KTsgfSB9XG4udS1zbURvd24tc3BhY2VUICAgeyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oeHMpIHsgbWFyZ2luLXRvcDogc3BhY2UoMSk7IH0gfVxuLnUtc21Eb3duLXNwYWNlVDIgIHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHhzKSB7IG1hcmdpbi10b3A6IHNwYWNlKDIpOyB9IH1cblxuLnUtc21Eb3duLWJsb2NrUi0tM2J5NCB7IEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bih4cykgeyBtYXJnaW4tcmlnaHQ6ICRibG9ja1NwYWNlICogMC43NTsgfSB9XG4udS1zbURvd24tYmxvY2tULS0zYnk0IHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHhzKSB7IG1hcmdpbi10b3A6ICRibG9ja1NwYWNlICogMC43NTsgfSB9XG4udS1zbURvd24tYmxvY2tCLS0zYnk0IHsgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKHhzKSB7IG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC43NTsgfSB9XG5cbi51LXNtLWJsb2NrQi0tMWJ5NCB7IG1hcmdpbi1ib3R0b206ICRibG9ja1NwYWNlICogMC4yNTsgfVxuLnUtc20tYmxvY2tCLS0xYnkzIHsgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjMzMzMzMzsgfVxuLnUtc20tYmxvY2tCLS0xYnkyIHsgbWFyZ2luLWJvdHRvbTogJGJsb2NrU3BhY2UgKiAwLjU7IH1cblxuLnUtc20tYmxvY2tULS0xYnk0IHsgbWFyZ2luLXRvcDogJGJsb2NrU3BhY2UgKiAwLjI1OyB9XG4udS1zbS1ibG9ja1QtLTFieTMgeyBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuMzMzMzMzOyB9XG4udS1zbS1ibG9ja1QtLTFieTIgeyBtYXJnaW4tdG9wOiAkYmxvY2tTcGFjZSAqIDAuNTsgfSJdfQ== */
